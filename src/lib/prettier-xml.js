var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getAugmentedNamespace(n) {
	if (n.__esModule) return n;
	var a = Object.defineProperty({}, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

var standalone = {exports: {}};

(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,(function(){var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof commonjsGlobal?commonjsGlobal:"undefined"!=typeof self?self:{};function t(e){return e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var n={version:"2.5.1"},r={},o={};!function(e){function t(){}function n(e,t,n,r,o){for(var i=0,u=t.length,s=0,a=0;i<u;i++){var c=t[i];if(c.removed){if(c.value=e.join(r.slice(a,a+c.count)),a+=c.count,i&&t[i-1].added){var l=t[i-1];t[i-1]=t[i],t[i]=l;}}else {if(!c.added&&o){var p=n.slice(s,s+c.count);p=p.map((function(e,t){var n=r[a+t];return n.length>e.length?n:e})),c.value=e.join(p);}else c.value=e.join(n.slice(s,s+c.count));s+=c.count,c.added||(a+=c.count);}}var f=t[u-1];return u>1&&"string"==typeof f.value&&(f.added||f.removed)&&e.equals("",f.value)&&(t[u-2].value+=f.value,t.pop()),t}function r(e){return {newPos:e.newPos,components:e.components.slice(0)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=t,t.prototype={diff:function(e,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=o.callback;"function"==typeof o&&(i=o,o={}),this.options=o;var u=this;function s(e){return i?(setTimeout((function(){i(void 0,e);}),0),!0):e}e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var a=(t=this.removeEmpty(this.tokenize(t))).length,c=e.length,l=1,p=a+c,f=[{newPos:-1,components:[]}],d=this.extractCommon(f[0],t,e,0);if(f[0].newPos+1>=a&&d+1>=c)return s([{value:this.join(t),count:t.length}]);function h(){for(var o=-1*l;o<=l;o+=2){var i=void 0,p=f[o-1],d=f[o+1],h=(d?d.newPos:0)-o;p&&(f[o-1]=void 0);var g=p&&p.newPos+1<a,m=d&&0<=h&&h<c;if(g||m){if(!g||m&&p.newPos<d.newPos?(i=r(d),u.pushComponent(i.components,void 0,!0)):((i=p).newPos++,u.pushComponent(i.components,!0,void 0)),h=u.extractCommon(i,t,e,o),i.newPos+1>=a&&h+1>=c)return s(n(u,i.components,t,e,u.useLongestToken));f[o]=i;}else f[o]=void 0;}l++;}if(i)!function e(){setTimeout((function(){if(l>p)return i();h()||e();}),0);}();else for(;l<=p;){var g=h();if(g)return g}},pushComponent:function(e,t,n){var r=e[e.length-1];r&&r.added===t&&r.removed===n?e[e.length-1]={count:r.count+1,added:t,removed:n}:e.push({count:1,added:t,removed:n});},extractCommon:function(e,t,n,r){for(var o=t.length,i=n.length,u=e.newPos,s=u-r,a=0;u+1<o&&s+1<i&&this.equals(t[u+1],n[s+1]);)u++,s++,a++;return a&&e.components.push({count:a}),e.newPos=u,s},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],n=0;n<e.length;n++)e[n]&&t.push(e[n]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}};}(o);var i,u={};Object.defineProperty(u,"__esModule",{value:!0}),u.diffChars=function(e,t,n){return s.diff(e,t,n)},u.characterDiff=void 0;var s=new((i=o)&&i.__esModule?i:{default:i}).default;u.characterDiff=s;var a={},c={};Object.defineProperty(c,"__esModule",{value:!0}),c.generateOptions=function(e,t){if("function"==typeof e)t.callback=e;else if(e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},Object.defineProperty(a,"__esModule",{value:!0}),a.diffWords=function(e,t,n){return n=(0, p.generateOptions)(n,{ignoreWhitespace:!0}),h.diff(e,t,n)},a.diffWordsWithSpace=function(e,t,n){return h.diff(e,t,n)},a.wordDiff=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(o),p=c;var f=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,d=/\S/,h=new l.default;a.wordDiff=h,h.equals=function(e,t){return this.options.ignoreCase&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t||this.options.ignoreWhitespace&&!d.test(e)&&!d.test(t)},h.tokenize=function(e){for(var t=e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/),n=0;n<t.length-1;n++)!t[n+1]&&t[n+2]&&f.test(t[n])&&f.test(t[n+2])&&(t[n]+=t[n+2],t.splice(n+1,2),n--);return t};var g={};Object.defineProperty(g,"__esModule",{value:!0}),g.diffLines=function(e,t,n){return D.diff(e,t,n)},g.diffTrimmedLines=function(e,t,n){var r=(0, y.generateOptions)(n,{ignoreWhitespace:!0});return D.diff(e,t,r)},g.lineDiff=void 0;var m=function(e){return e&&e.__esModule?e:{default:e}}(o),y=c;var D=new m.default;g.lineDiff=D,D.tokenize=function(e){var t=[],n=e.split(/(\n|\r\n)/);n[n.length-1]||n.pop();for(var r=0;r<n.length;r++){var o=n[r];r%2&&!this.options.newlineIsToken?t[t.length-1]+=o:(this.options.ignoreWhitespace&&(o=o.trim()),t.push(o));}return t};var E={};Object.defineProperty(E,"__esModule",{value:!0}),E.diffSentences=function(e,t,n){return b.diff(e,t,n)},E.sentenceDiff=void 0;var C=function(e){return e&&e.__esModule?e:{default:e}}(o);var b=new C.default;E.sentenceDiff=b,b.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};var v={};Object.defineProperty(v,"__esModule",{value:!0}),v.diffCss=function(e,t,n){return F.diff(e,t,n)},v.cssDiff=void 0;var A=function(e){return e&&e.__esModule?e:{default:e}}(o);var F=new A.default;v.cssDiff=F,F.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};var x=function(e){return e&&e.Math==Math&&e},S=x("object"==typeof globalThis&&globalThis)||x("object"==typeof window&&window)||x("object"==typeof self&&self)||x("object"==typeof e&&e)||function(){return this}()||Function("return this")(),w={},T=function(e){try{return !!e()}catch(e){return !0}},B=!T((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),N=Function.prototype.call,k=N.bind?N.bind(N):function(){return N.apply(N,arguments)},P={},O={}.propertyIsEnumerable,I=Object.getOwnPropertyDescriptor,L=I&&!O.call({1:2},1);P.f=L?function(e){var t=I(this,e);return !!t&&t.enumerable}:O;var j,_,M=function(e,t){return {enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},R=Function.prototype,V=R.bind,$=R.call,W=V&&V.bind($),q=V?function(e){return e&&W($,e)}:function(e){return e&&function(){return $.apply(e,arguments)}},U=q,z=U({}.toString),G=U("".slice),H=function(e){return G(z(e),8,-1)},J=q,X=T,Y=H,K=S.Object,Q=J("".split),Z=X((function(){return !K("z").propertyIsEnumerable(0)}))?function(e){return "String"==Y(e)?Q(e,""):K(e)}:K,ee=S.TypeError,te=function(e){if(null==e)throw ee("Can't call method on "+e);return e},ne=Z,re=te,oe=function(e){return ne(re(e))},ie=function(e){return "function"==typeof e},ue=ie,se=function(e){return "object"==typeof e?null!==e:ue(e)},ae=S,ce=ie,le=function(e){return ce(e)?e:void 0},pe=function(e,t){return arguments.length<2?le(ae[e]):ae[e]&&ae[e][t]},fe=q({}.isPrototypeOf),de=pe("navigator","userAgent")||"",he=S,ge=de,me=he.process,ye=he.Deno,De=me&&me.versions||ye&&ye.version,Ee=De&&De.v8;Ee&&(_=(j=Ee.split("."))[0]>0&&j[0]<4?1:+(j[0]+j[1])),!_&&ge&&(!(j=ge.match(/Edge\/(\d+)/))||j[1]>=74)&&(j=ge.match(/Chrome\/(\d+)/))&&(_=+j[1]);var Ce=_,be=Ce,ve=T,Ae=!!Object.getOwnPropertySymbols&&!ve((function(){var e=Symbol();return !String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&be&&be<41})),Fe=Ae&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,xe=pe,Se=ie,we=fe,Te=Fe,Be=S.Object,Ne=Te?function(e){return "symbol"==typeof e}:function(e){var t=xe("Symbol");return Se(t)&&we(t.prototype,Be(e))},ke=S.String,Pe=function(e){try{return ke(e)}catch(e){return "Object"}},Oe=ie,Ie=Pe,Le=S.TypeError,je=function(e){if(Oe(e))return e;throw Le(Ie(e)+" is not a function")},_e=je,Me=function(e,t){var n=e[t];return null==n?void 0:_e(n)},Re=k,Ve=ie,$e=se,We=S.TypeError,qe={exports:{}},Ue=S,ze=Object.defineProperty,Ge=function(e,t){try{ze(Ue,e,{value:t,configurable:!0,writable:!0});}catch(n){Ue[e]=t;}return t},He=Ge,Je="__core-js_shared__",Xe=S[Je]||He(Je,{}),Ye=Xe;(qe.exports=function(e,t){return Ye[e]||(Ye[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.1",mode:"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"});var Ke=te,Qe=S.Object,Ze=function(e){return Qe(Ke(e))},et=Ze,tt=q({}.hasOwnProperty),nt=Object.hasOwn||function(e,t){return tt(et(e),t)},rt=q,ot=0,it=Math.random(),ut=rt(1..toString),st=function(e){return "Symbol("+(void 0===e?"":e)+")_"+ut(++ot+it,36)},at=S,ct=qe.exports,lt=nt,pt=st,ft=Ae,dt=Fe,ht=ct("wks"),gt=at.Symbol,mt=gt&&gt.for,yt=dt?gt:gt&&gt.withoutSetter||pt,Dt=function(e){if(!lt(ht,e)||!ft&&"string"!=typeof ht[e]){var t="Symbol."+e;ft&&lt(gt,e)?ht[e]=gt[e]:ht[e]=dt&&mt?mt(t):yt(t);}return ht[e]},Et=k,Ct=se,bt=Ne,vt=Me,At=function(e,t){var n,r;if("string"===t&&Ve(n=e.toString)&&!$e(r=Re(n,e)))return r;if(Ve(n=e.valueOf)&&!$e(r=Re(n,e)))return r;if("string"!==t&&Ve(n=e.toString)&&!$e(r=Re(n,e)))return r;throw We("Can't convert object to primitive value")},Ft=Dt,xt=S.TypeError,St=Ft("toPrimitive"),wt=function(e,t){if(!Ct(e)||bt(e))return e;var n,r=vt(e,St);if(r){if(void 0===t&&(t="default"),n=Et(r,e,t),!Ct(n)||bt(n))return n;throw xt("Can't convert object to primitive value")}return void 0===t&&(t="number"),At(e,t)},Tt=Ne,Bt=function(e){var t=wt(e,"string");return Tt(t)?t:t+""},Nt=se,kt=S.document,Pt=Nt(kt)&&Nt(kt.createElement),Ot=function(e){return Pt?kt.createElement(e):{}},It=Ot,Lt=!B&&!T((function(){return 7!=Object.defineProperty(It("div"),"a",{get:function(){return 7}}).a})),jt=B,_t=k,Mt=P,Rt=M,Vt=oe,$t=Bt,Wt=nt,qt=Lt,Ut=Object.getOwnPropertyDescriptor;w.f=jt?Ut:function(e,t){if(e=Vt(e),t=$t(t),qt)try{return Ut(e,t)}catch(e){}if(Wt(e,t))return Rt(!_t(Mt.f,e,t),e[t])};var zt={},Gt=S,Ht=se,Jt=Gt.String,Xt=Gt.TypeError,Yt=function(e){if(Ht(e))return e;throw Xt(Jt(e)+" is not an object")},Kt=B,Qt=Lt,Zt=Yt,en=Bt,tn=S.TypeError,nn=Object.defineProperty;zt.f=Kt?nn:function(e,t,n){if(Zt(e),t=en(t),Zt(n),Qt)try{return nn(e,t,n)}catch(e){}if("get"in n||"set"in n)throw tn("Accessors not supported");return "value"in n&&(e[t]=n.value),e};var rn=zt,on=M,un=B?function(e,t,n){return rn.f(e,t,on(1,n))}:function(e,t,n){return e[t]=n,e},sn={exports:{}},an=ie,cn=Xe,ln=q(Function.toString);an(cn.inspectSource)||(cn.inspectSource=function(e){return ln(e)});var pn,fn,dn,hn=cn.inspectSource,gn=ie,mn=hn,yn=S.WeakMap,Dn=gn(yn)&&/native code/.test(mn(yn)),En=qe.exports,Cn=st,bn=En("keys"),vn=function(e){return bn[e]||(bn[e]=Cn(e))},An={},Fn=Dn,xn=S,Sn=q,wn=se,Tn=un,Bn=nt,Nn=Xe,kn=vn,Pn=An,On="Object already initialized",In=xn.TypeError,Ln=xn.WeakMap;if(Fn||Nn.state){var jn=Nn.state||(Nn.state=new Ln),_n=Sn(jn.get),Mn=Sn(jn.has),Rn=Sn(jn.set);pn=function(e,t){if(Mn(jn,e))throw new In(On);return t.facade=e,Rn(jn,e,t),t},fn=function(e){return _n(jn,e)||{}},dn=function(e){return Mn(jn,e)};}else {var Vn=kn("state");Pn[Vn]=!0,pn=function(e,t){if(Bn(e,Vn))throw new In(On);return t.facade=e,Tn(e,Vn,t),t},fn=function(e){return Bn(e,Vn)?e[Vn]:{}},dn=function(e){return Bn(e,Vn)};}var $n={set:pn,get:fn,has:dn,enforce:function(e){return dn(e)?fn(e):pn(e,{})},getterFor:function(e){return function(t){var n;if(!wn(t)||(n=fn(t)).type!==e)throw In("Incompatible receiver, "+e+" required");return n}}},Wn=B,qn=nt,Un=Function.prototype,zn=Wn&&Object.getOwnPropertyDescriptor,Gn=qn(Un,"name"),Hn=Gn&&"something"===function(){}.name,Jn=Gn&&(!Wn||Wn&&zn(Un,"name").configurable),Xn=S,Yn=ie,Kn=nt,Qn=un,Zn=Ge,er=hn,tr={EXISTS:Gn,PROPER:Hn,CONFIGURABLE:Jn}.CONFIGURABLE,nr=$n.get,rr=$n.enforce,or=String(String).split("String");(sn.exports=function(e,t,n,r){var o,i=!!r&&!!r.unsafe,u=!!r&&!!r.enumerable,s=!!r&&!!r.noTargetGet,a=r&&void 0!==r.name?r.name:t;Yn(n)&&("Symbol("===String(a).slice(0,7)&&(a="["+String(a).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!Kn(n,"name")||tr&&n.name!==a)&&Qn(n,"name",a),(o=rr(n)).source||(o.source=or.join("string"==typeof a?a:""))),e!==Xn?(i?!s&&e[t]&&(u=!0):delete e[t],u?e[t]=n:Qn(e,t,n)):u?e[t]=n:Zn(t,n);})(Function.prototype,"toString",(function(){return Yn(this)&&nr(this).source||er(this)}));var ir={},ur=Math.ceil,sr=Math.floor,ar=function(e){var t=+e;return t!=t||0===t?0:(t>0?sr:ur)(t)},cr=ar,lr=Math.max,pr=Math.min,fr=ar,dr=Math.min,hr=function(e){return e>0?dr(fr(e),9007199254740991):0},gr=function(e){return hr(e.length)},mr=oe,yr=function(e,t){var n=cr(e);return n<0?lr(n+t,0):pr(n,t)},Dr=gr,Er=function(e){return function(t,n,r){var o,i=mr(t),u=Dr(i),s=yr(r,u);if(e&&n!=n){for(;u>s;)if((o=i[s++])!=o)return !0}else for(;u>s;s++)if((e||s in i)&&i[s]===n)return e||s||0;return !e&&-1}},Cr={includes:Er(!0),indexOf:Er(!1)},br=nt,vr=oe,Ar=Cr.indexOf,Fr=An,xr=q([].push),Sr=function(e,t){var n,r=vr(e),o=0,i=[];for(n in r)!br(Fr,n)&&br(r,n)&&xr(i,n);for(;t.length>o;)br(r,n=t[o++])&&(~Ar(i,n)||xr(i,n));return i},wr=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Tr=Sr,Br=wr.concat("length","prototype");ir.f=Object.getOwnPropertyNames||function(e){return Tr(e,Br)};var Nr={};Nr.f=Object.getOwnPropertySymbols;var kr=pe,Pr=ir,Or=Nr,Ir=Yt,Lr=q([].concat),jr=kr("Reflect","ownKeys")||function(e){var t=Pr.f(Ir(e)),n=Or.f;return n?Lr(t,n(e)):t},_r=nt,Mr=jr,Rr=w,Vr=zt,$r=T,Wr=ie,qr=/#|\.prototype\./,Ur=function(e,t){var n=Gr[zr(e)];return n==Jr||n!=Hr&&(Wr(t)?$r(t):!!t)},zr=Ur.normalize=function(e){return String(e).replace(qr,".").toLowerCase()},Gr=Ur.data={},Hr=Ur.NATIVE="N",Jr=Ur.POLYFILL="P",Xr=Ur,Yr=S,Kr=w.f,Qr=un,Zr=sn.exports,eo=Ge,to=function(e,t){for(var n=Mr(t),r=Vr.f,o=Rr.f,i=0;i<n.length;i++){var u=n[i];_r(e,u)||r(e,u,o(t,u));}},no=Xr,ro=function(e,t){var n,r,o,i,u,s=e.target,a=e.global,c=e.stat;if(n=a?Yr:c?Yr[s]||eo(s,{}):(Yr[s]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(u=Kr(n,r))&&u.value:n[r],!no(a?r:s+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;to(i,o);}(e.sham||o&&o.sham)&&Qr(i,"sham",!0),Zr(n,r,i,e);}},oo={};oo[Dt("toStringTag")]="z";var io=S,uo="[object z]"===String(oo),so=ie,ao=H,co=Dt("toStringTag"),lo=io.Object,po="Arguments"==ao(function(){return arguments}()),fo=uo?ao:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=lo(e),co))?n:po?ao(t):"Object"==(r=ao(t))&&so(t.callee)?"Arguments":r},ho=fo,go=S.String,mo=q([].slice),yo=Math.floor,Do=function(e,t){var n=e.length,r=yo(n/2);return n<8?Eo(e,t):Co(e,Do(mo(e,0,r),t),Do(mo(e,r),t),t)},Eo=function(e,t){for(var n,r,o=e.length,i=1;i<o;){for(r=i,n=e[i];r&&t(e[r-1],n)>0;)e[r]=e[--r];r!==i++&&(e[r]=n);}return e},Co=function(e,t,n,r){for(var o=t.length,i=n.length,u=0,s=0;u<o||s<i;)e[u+s]=u<o&&s<i?r(t[u],n[s])<=0?t[u++]:n[s++]:u<o?t[u++]:n[s++];return e},bo=Do,vo=T,Ao=de.match(/firefox\/(\d+)/i),Fo=!!Ao&&+Ao[1],xo=/MSIE|Trident/.test(de),So=de.match(/AppleWebKit\/(\d+)\./),wo=!!So&&+So[1],To=ro,Bo=q,No=je,ko=Ze,Po=gr,Oo=function(e){if("Symbol"===ho(e))throw TypeError("Cannot convert a Symbol value to a string");return go(e)},Io=T,Lo=bo,jo=function(e,t){var n=[][e];return !!n&&vo((function(){n.call(null,t||function(){throw 1},1);}))},_o=Fo,Mo=xo,Ro=Ce,Vo=wo,$o=[],Wo=Bo($o.sort),qo=Bo($o.push),Uo=Io((function(){$o.sort(void 0);})),zo=Io((function(){$o.sort(null);})),Go=jo("sort"),Ho=!Io((function(){if(Ro)return Ro<70;if(!(_o&&_o>3)){if(Mo)return !0;if(Vo)return Vo<603;var e,t,n,r,o="";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2;}for(r=0;r<47;r++)$o.push({k:t+r,v:n});}for($o.sort((function(e,t){return t.v-e.v})),r=0;r<$o.length;r++)t=$o[r].k.charAt(0),o.charAt(o.length-1)!==t&&(o+=t);return "DGBEFHACIJK"!==o}}));To({target:"Array",proto:!0,forced:Uo||!zo||!Go||!Ho},{sort:function(e){void 0!==e&&No(e);var t=ko(this);if(Ho)return void 0===e?Wo(t):Wo(t,e);var n,r,o=[],i=Po(t);for(r=0;r<i;r++)r in t&&qo(o,t[r]);for(Lo(o,function(e){return function(t,n){return void 0===n?-1:void 0===t?1:void 0!==e?+e(t,n)||0:Oo(t)>Oo(n)?1:-1}}(e)),n=o.length,r=0;r<n;)t[r]=o[r++];for(;r<i;)delete t[r++];return t}});var Jo={};Object.defineProperty(Jo,"__esModule",{value:!0}),Jo.diffJson=function(e,t,n){return Zo.diff(e,t,n)},Jo.canonicalize=ei,Jo.jsonDiff=void 0;var Xo=function(e){return e&&e.__esModule?e:{default:e}}(o),Yo=g;function Ko(e){return Ko="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ko(e)}var Qo=Object.prototype.toString,Zo=new Xo.default;function ei(e,t,n,r,o){var i,u;for(t=t||[],n=n||[],r&&(e=r(o,e)),i=0;i<t.length;i+=1)if(t[i]===e)return n[i];if("[object Array]"===Qo.call(e)){for(t.push(e),u=new Array(e.length),n.push(u),i=0;i<e.length;i+=1)u[i]=ei(e[i],t,n,r,o);return t.pop(),n.pop(),u}if(e&&e.toJSON&&(e=e.toJSON()),"object"===Ko(e)&&null!==e){t.push(e),u={},n.push(u);var s,a=[];for(s in e)e.hasOwnProperty(s)&&a.push(s);for(a.sort(),i=0;i<a.length;i+=1)u[s=a[i]]=ei(e[s],t,n,r,s);t.pop(),n.pop();}else u=e;return u}Jo.jsonDiff=Zo,Zo.useLongestToken=!0,Zo.tokenize=Yo.lineDiff.tokenize,Zo.castInput=function(e){var t=this.options,n=t.undefinedReplacement,r=t.stringifyReplacer,o=void 0===r?function(e,t){return void 0===t?n:t}:r;return "string"==typeof e?e:JSON.stringify(ei(e,null,null,o),o,"  ")},Zo.equals=function(e,t){return Xo.default.prototype.equals.call(Zo,e.replace(/,([\r\n])/g,"$1"),t.replace(/,([\r\n])/g,"$1"))};var ti={};Object.defineProperty(ti,"__esModule",{value:!0}),ti.diffArrays=function(e,t,n){return ri.diff(e,t,n)},ti.arrayDiff=void 0;var ni=function(e){return e&&e.__esModule?e:{default:e}}(o);var ri=new ni.default;ti.arrayDiff=ri,ri.tokenize=function(e){return e.slice()},ri.join=ri.removeEmpty=function(e){return e};var oi={},ii={};Object.defineProperty(ii,"__esModule",{value:!0}),ii.parsePatch=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.split(/\r\n|[\n\v\f\r\x85]/),r=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=[],i=0;function u(){var e={};for(o.push(e);i<n.length;){var r=n[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(r))break;var u=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r);u&&(e.index=u[1]),i++;}for(s(e),s(e),e.hunks=[];i<n.length;){var c=n[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c))break;if(/^@@/.test(c))e.hunks.push(a());else {if(c&&t.strict)throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(c));i++;}}}function s(e){var t=/^(---|\+\+\+)\s+(.*)$/.exec(n[i]);if(t){var r="---"===t[1]?"old":"new",o=t[2].split("\t",2),u=o[0].replace(/\\\\/g,"\\");/^".*"$/.test(u)&&(u=u.substr(1,u.length-2)),e[r+"FileName"]=u,e[r+"Header"]=(o[1]||"").trim(),i++;}}function a(){var e=i,o=n[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),u={oldStart:+o[1],oldLines:void 0===o[2]?1:+o[2],newStart:+o[3],newLines:void 0===o[4]?1:+o[4],lines:[],linedelimiters:[]};0===u.oldLines&&(u.oldStart+=1),0===u.newLines&&(u.newStart+=1);for(var s=0,a=0;i<n.length&&!(0===n[i].indexOf("--- ")&&i+2<n.length&&0===n[i+1].indexOf("+++ ")&&0===n[i+2].indexOf("@@"));i++){var c=0==n[i].length&&i!=n.length-1?" ":n[i][0];if("+"!==c&&"-"!==c&&" "!==c&&"\\"!==c)break;u.lines.push(n[i]),u.linedelimiters.push(r[i]||"\n"),"+"===c?s++:"-"===c?a++:" "===c&&(s++,a++);}if(s||1!==u.newLines||(u.newLines=0),a||1!==u.oldLines||(u.oldLines=0),t.strict){if(s!==u.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(a!==u.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return u}for(;i<n.length;)u();return o};var ui={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e,t,n){var r=!0,o=!1,i=!1,u=1;return function s(){if(r&&!i){if(o?u++:r=!1,e+u<=n)return u;i=!0;}if(!o)return i||(r=!0),t<=e-u?-u++:(o=!0,s())}};}(ui),Object.defineProperty(oi,"__esModule",{value:!0}),oi.applyPatch=ci,oi.applyPatches=function(e,t){"string"==typeof e&&(e=(0, si.parsePatch)(e));var n=0;!function r(){var o=e[n++];if(!o)return t.complete();t.loadFile(o,(function(e,n){if(e)return t.complete(e);var i=ci(n,o,t);t.patched(o,i,(function(e){if(e)return t.complete(e);r();}));}));}();};var si=ii,ai=function(e){return e&&e.__esModule?e:{default:e}}(ui);function ci(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof t&&(t=(0, si.parsePatch)(t)),Array.isArray(t)){if(t.length>1)throw new Error("applyPatch only works with a single input.");t=t[0];}var r,o,i=e.split(/\r\n|[\n\v\f\r\x85]/),u=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],s=t.hunks,a=n.compareLine||function(e,t,n,r){return t===r},c=0,l=n.fuzzFactor||0,p=0,f=0;function d(e,t){for(var n=0;n<e.lines.length;n++){var r=e.lines[n],o=r.length>0?r[0]:" ",u=r.length>0?r.substr(1):r;if(" "===o||"-"===o){if(!a(t+1,i[t],o,u)&&++c>l)return !1;t++;}}return !0}for(var h=0;h<s.length;h++){for(var g=s[h],m=i.length-g.oldLines,y=0,D=f+g.oldStart-1,E=(0, ai.default)(D,p,m);void 0!==y;y=E())if(d(g,D+y)){g.offset=f+=y;break}if(void 0===y)return !1;p=g.offset+g.oldStart+g.oldLines;}for(var C=0,b=0;b<s.length;b++){var v=s[b],A=v.oldStart+v.offset+C-1;C+=v.newLines-v.oldLines;for(var F=0;F<v.lines.length;F++){var x=v.lines[F],S=x.length>0?x[0]:" ",w=x.length>0?x.substr(1):x,T=v.linedelimiters[F];if(" "===S)A++;else if("-"===S)i.splice(A,1),u.splice(A,1);else if("+"===S)i.splice(A,0,w),u.splice(A,0,T),A++;else if("\\"===S){var B=v.lines[F-1]?v.lines[F-1][0]:null;"+"===B?r=!0:"-"===B&&(o=!0);}}}if(r)for(;!i[i.length-1];)i.pop(),u.pop();else o&&(i.push(""),u.push("\n"));for(var N=0;N<i.length-1;N++)i[N]=i[N]+u[N];return i.join("")}var li={},pi={};Object.defineProperty(pi,"__esModule",{value:!0}),pi.structuredPatch=gi,pi.formatPatch=mi,pi.createTwoFilesPatch=yi,pi.createPatch=function(e,t,n,r,o,i){return yi(e,e,t,n,r,o,i)};var fi=g;function di(e){return function(e){if(Array.isArray(e))return hi(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return hi(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return hi(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hi(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function gi(e,t,n,r,o,i,u){u||(u={}),void 0===u.context&&(u.context=4);var s=(0, fi.diffLines)(n,r,u);function a(e){return e.map((function(e){return " "+e}))}s.push({value:"",lines:[]});for(var c=[],l=0,p=0,f=[],d=1,h=1,g=function(e){var t=s[e],o=t.lines||t.value.replace(/\n$/,"").split("\n");if(t.lines=o,t.added||t.removed){var i;if(!l){var g=s[e-1];l=d,p=h,g&&(f=u.context>0?a(g.lines.slice(-u.context)):[],l-=f.length,p-=f.length);}(i=f).push.apply(i,di(o.map((function(e){return (t.added?"+":"-")+e})))),t.added?h+=o.length:d+=o.length;}else {if(l)if(o.length<=2*u.context&&e<s.length-2){var m;(m=f).push.apply(m,di(a(o)));}else {var y,D=Math.min(o.length,u.context);(y=f).push.apply(y,di(a(o.slice(0,D))));var E={oldStart:l,oldLines:d-l+D,newStart:p,newLines:h-p+D,lines:f};if(e>=s.length-2&&o.length<=u.context){var C=/\n$/.test(n),b=/\n$/.test(r),v=0==o.length&&f.length>E.oldLines;!C&&v&&n.length>0&&f.splice(E.oldLines,0,"\\ No newline at end of file"),(C||v)&&b||f.push("\\ No newline at end of file");}c.push(E),l=0,p=0,f=[];}d+=o.length,h+=o.length;}},m=0;m<s.length;m++)g(m);return {oldFileName:e,newFileName:t,oldHeader:o,newHeader:i,hunks:c}}function mi(e){var t=[];e.oldFileName==e.newFileName&&t.push("Index: "+e.oldFileName),t.push("==================================================================="),t.push("--- "+e.oldFileName+(void 0===e.oldHeader?"":"\t"+e.oldHeader)),t.push("+++ "+e.newFileName+(void 0===e.newHeader?"":"\t"+e.newHeader));for(var n=0;n<e.hunks.length;n++){var r=e.hunks[n];0===r.oldLines&&(r.oldStart-=1),0===r.newLines&&(r.newStart-=1),t.push("@@ -"+r.oldStart+","+r.oldLines+" +"+r.newStart+","+r.newLines+" @@"),t.push.apply(t,r.lines);}return t.join("\n")+"\n"}function yi(e,t,n,r,o,i,u){return mi(gi(e,t,n,r,o,i,u))}var Di={};function Ei(e,t){if(t.length>e.length)return !1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return !1;return !0}Object.defineProperty(Di,"__esModule",{value:!0}),Di.arrayEqual=function(e,t){if(e.length!==t.length)return !1;return Ei(e,t)},Di.arrayStartsWith=Ei,Object.defineProperty(li,"__esModule",{value:!0}),li.calcLineCount=xi,li.merge=function(e,t,n){e=Si(e,n),t=Si(t,n);var r={};(e.index||t.index)&&(r.index=e.index||t.index);(e.newFileName||t.newFileName)&&(wi(e)?wi(t)?(r.oldFileName=Ti(r,e.oldFileName,t.oldFileName),r.newFileName=Ti(r,e.newFileName,t.newFileName),r.oldHeader=Ti(r,e.oldHeader,t.oldHeader),r.newHeader=Ti(r,e.newHeader,t.newHeader)):(r.oldFileName=e.oldFileName,r.newFileName=e.newFileName,r.oldHeader=e.oldHeader,r.newHeader=e.newHeader):(r.oldFileName=t.oldFileName||e.oldFileName,r.newFileName=t.newFileName||e.newFileName,r.oldHeader=t.oldHeader||e.oldHeader,r.newHeader=t.newHeader||e.newHeader));r.hunks=[];var o=0,i=0,u=0,s=0;for(;o<e.hunks.length||i<t.hunks.length;){var a=e.hunks[o]||{oldStart:1/0},c=t.hunks[i]||{oldStart:1/0};if(Bi(a,c))r.hunks.push(Ni(a,u)),o++,s+=a.newLines-a.oldLines;else if(Bi(c,a))r.hunks.push(Ni(c,s)),i++,u+=c.newLines-c.oldLines;else {var l={oldStart:Math.min(a.oldStart,c.oldStart),oldLines:0,newStart:Math.min(a.newStart+u,c.oldStart+s),newLines:0,lines:[]};ki(l,a.oldStart,a.lines,c.oldStart,c.lines),i++,o++,r.hunks.push(l);}}return r};var Ci=pi,bi=ii,vi=Di;function Ai(e){return function(e){if(Array.isArray(e))return Fi(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Fi(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Fi(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Fi(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function xi(e){var t=Vi(e.lines),n=t.oldLines,r=t.newLines;void 0!==n?e.oldLines=n:delete e.oldLines,void 0!==r?e.newLines=r:delete e.newLines;}function Si(e,t){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return (0, bi.parsePatch)(e)[0];if(!t)throw new Error("Must provide a base reference or pass in a patch");return (0, Ci.structuredPatch)(void 0,void 0,t,e)}return e}function wi(e){return e.newFileName&&e.newFileName!==e.oldFileName}function Ti(e,t,n){return t===n?t:(e.conflict=!0,{mine:t,theirs:n})}function Bi(e,t){return e.oldStart<t.oldStart&&e.oldStart+e.oldLines<t.oldStart}function Ni(e,t){return {oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+t,newLines:e.newLines,lines:e.lines}}function ki(e,t,n,r,o){var i={offset:t,lines:n,index:0},u={offset:r,lines:o,index:0};for(Li(e,i,u),Li(e,u,i);i.index<i.lines.length&&u.index<u.lines.length;){var s=i.lines[i.index],a=u.lines[u.index];if("-"!==s[0]&&"+"!==s[0]||"-"!==a[0]&&"+"!==a[0])if("+"===s[0]&&" "===a[0]){var c;(c=e.lines).push.apply(c,Ai(_i(i)));}else if("+"===a[0]&&" "===s[0]){var l;(l=e.lines).push.apply(l,Ai(_i(u)));}else "-"===s[0]&&" "===a[0]?Oi(e,i,u):"-"===a[0]&&" "===s[0]?Oi(e,u,i,!0):s===a?(e.lines.push(s),i.index++,u.index++):Ii(e,_i(i),_i(u));else Pi(e,i,u);}ji(e,i),ji(e,u),xi(e);}function Pi(e,t,n){var r=_i(t),o=_i(n);if(Mi(r)&&Mi(o)){var i,u;if((0, vi.arrayStartsWith)(r,o)&&Ri(n,r,r.length-o.length))return void(i=e.lines).push.apply(i,Ai(r));if((0, vi.arrayStartsWith)(o,r)&&Ri(t,o,o.length-r.length))return void(u=e.lines).push.apply(u,Ai(o))}else if((0, vi.arrayEqual)(r,o)){var s;return void(s=e.lines).push.apply(s,Ai(r))}Ii(e,r,o);}function Oi(e,t,n,r){var o,i=_i(t),u=function(e,t){var n=[],r=[],o=0,i=!1,u=!1;for(;o<t.length&&e.index<e.lines.length;){var s=e.lines[e.index],a=t[o];if("+"===a[0])break;if(i=i||" "!==s[0],r.push(a),o++,"+"===s[0])for(u=!0;"+"===s[0];)n.push(s),s=e.lines[++e.index];a.substr(1)===s.substr(1)?(n.push(s),e.index++):u=!0;}"+"===(t[o]||"")[0]&&i&&(u=!0);if(u)return n;for(;o<t.length;)r.push(t[o++]);return {merged:r,changes:n}}(n,i);u.merged?(o=e.lines).push.apply(o,Ai(u.merged)):Ii(e,r?u:i,r?i:u);}function Ii(e,t,n){e.conflict=!0,e.lines.push({conflict:!0,mine:t,theirs:n});}function Li(e,t,n){for(;t.offset<n.offset&&t.index<t.lines.length;){var r=t.lines[t.index++];e.lines.push(r),t.offset++;}}function ji(e,t){for(;t.index<t.lines.length;){var n=t.lines[t.index++];e.lines.push(n);}}function _i(e){for(var t=[],n=e.lines[e.index][0];e.index<e.lines.length;){var r=e.lines[e.index];if("-"===n&&"+"===r[0]&&(n="+"),n!==r[0])break;t.push(r),e.index++;}return t}function Mi(e){return e.reduce((function(e,t){return e&&"-"===t[0]}),!0)}function Ri(e,t,n){for(var r=0;r<n;r++){var o=t[t.length-n+r].substr(1);if(e.lines[e.index+r]!==" "+o)return !1}return e.index+=n,!0}function Vi(e){var t=0,n=0;return e.forEach((function(e){if("string"!=typeof e){var r=Vi(e.mine),o=Vi(e.theirs);void 0!==t&&(r.oldLines===o.oldLines?t+=r.oldLines:t=void 0),void 0!==n&&(r.newLines===o.newLines?n+=r.newLines:n=void 0);}else void 0===n||"+"!==e[0]&&" "!==e[0]||n++,void 0===t||"-"!==e[0]&&" "!==e[0]||t++;})),{oldLines:t,newLines:n}}var $i={};Object.defineProperty($i,"__esModule",{value:!0}),$i.convertChangesToDMP=function(e){for(var t,n,r=[],o=0;o<e.length;o++)t=e[o],n=t.added?1:t.removed?-1:0,r.push([n,t.value]);return r};var Wi={};function qi(e){var t=e;return t=(t=(t=(t=t.replace(/&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/"/g,"&quot;")}function Ui(e){return {type:"concat",parts:e}}function zi(e){return {type:"indent",contents:e}}function Gi(e,t){return {type:"align",contents:t,n:e}}function Hi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return {type:"group",id:t.id,contents:e,break:Boolean(t.shouldBreak),expandedStates:t.expandedStates}}Object.defineProperty(Wi,"__esModule",{value:!0}),Wi.convertChangesToXML=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];r.added?t.push("<ins>"):r.removed&&t.push("<del>"),t.push(qi(r.value)),r.added?t.push("</ins>"):r.removed&&t.push("</del>");}return t.join("")},function(e){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"Diff",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"diffChars",{enumerable:!0,get:function(){return n.diffChars}}),Object.defineProperty(e,"diffWords",{enumerable:!0,get:function(){return r.diffWords}}),Object.defineProperty(e,"diffWordsWithSpace",{enumerable:!0,get:function(){return r.diffWordsWithSpace}}),Object.defineProperty(e,"diffLines",{enumerable:!0,get:function(){return i.diffLines}}),Object.defineProperty(e,"diffTrimmedLines",{enumerable:!0,get:function(){return i.diffTrimmedLines}}),Object.defineProperty(e,"diffSentences",{enumerable:!0,get:function(){return s.diffSentences}}),Object.defineProperty(e,"diffCss",{enumerable:!0,get:function(){return c.diffCss}}),Object.defineProperty(e,"diffJson",{enumerable:!0,get:function(){return l.diffJson}}),Object.defineProperty(e,"canonicalize",{enumerable:!0,get:function(){return l.canonicalize}}),Object.defineProperty(e,"diffArrays",{enumerable:!0,get:function(){return p.diffArrays}}),Object.defineProperty(e,"applyPatch",{enumerable:!0,get:function(){return f.applyPatch}}),Object.defineProperty(e,"applyPatches",{enumerable:!0,get:function(){return f.applyPatches}}),Object.defineProperty(e,"parsePatch",{enumerable:!0,get:function(){return d.parsePatch}}),Object.defineProperty(e,"merge",{enumerable:!0,get:function(){return h.merge}}),Object.defineProperty(e,"structuredPatch",{enumerable:!0,get:function(){return m.structuredPatch}}),Object.defineProperty(e,"createTwoFilesPatch",{enumerable:!0,get:function(){return m.createTwoFilesPatch}}),Object.defineProperty(e,"createPatch",{enumerable:!0,get:function(){return m.createPatch}}),Object.defineProperty(e,"convertChangesToDMP",{enumerable:!0,get:function(){return y.convertChangesToDMP}}),Object.defineProperty(e,"convertChangesToXML",{enumerable:!0,get:function(){return D.convertChangesToXML}});var t=function(e){return e&&e.__esModule?e:{default:e}}(o),n=u,r=a,i=g,s=E,c=v,l=Jo,p=ti,f=oi,d=ii,h=li,m=pi,y=$i,D=Wi;}(r);const Ji={type:"break-parent"},Xi={type:"line",hard:!0},Yi={type:"line",hard:!0,literal:!0},Ki=Ui([Xi,Ji]),Qi=Ui([Yi,Ji]);var Zi={concat:Ui,join:function(e,t){const n=[];for(let r=0;r<t.length;r++)0!==r&&n.push(e),n.push(t[r]);return Ui(n)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:Ki,literalline:Qi,group:Hi,conditionalGroup:function(e,t){return Hi(e[0],Object.assign(Object.assign({},t),{},{expandedStates:e}))},fill:function(e){return {type:"fill",parts:e}},lineSuffix:function(e){return {type:"line-suffix",contents:e}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:{type:"cursor",placeholder:Symbol("cursor")},breakParent:Ji,ifBreak:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return {type:"if-break",breakContents:e,flatContents:t,groupId:n.groupId}},trim:{type:"trim"},indent:zi,indentIfBreak:function(e,t){return {type:"indent-if-break",contents:e,groupId:t.groupId,negate:t.negate}},align:Gi,addAlignmentToDoc:function(e,t,n){let r=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)r=zi(r);r=Gi(t%n,r),r=Gi(Number.NEGATIVE_INFINITY,r);}return r},markAsRoot:function(e){return Gi({type:"root"},e)},dedentToRoot:function(e){return Gi(Number.NEGATIVE_INFINITY,e)},dedent:function(e){return Gi(-1,e)},hardlineWithoutBreakParent:Xi,literallineWithoutBreakParent:Yi,label:function(e,t){return {type:"label",label:e,contents:t}}},eu={exports:{}};const tu=function(){let{onlyFirst:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")};var nu={exports:{}};const ru=e=>!Number.isNaN(e)&&(e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141));nu.exports=ru,nu.exports.default=ru;const ou=e=>"string"==typeof e?e.replace(tu(),""):e,iu=nu.exports,uu=function(){return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g},su=e=>{if("string"!=typeof e||0===e.length)return 0;if(0===(e=ou(e)).length)return 0;e=e.replace(uu(),"  ");let t=0;for(let n=0;n<e.length;n++){const r=e.codePointAt(n);r<=31||r>=127&&r<=159||(r>=768&&r<=879||(r>65535&&n++,t+=iu(r)?2:1));}return t};eu.exports=su,eu.exports.default=su;var au=e=>e[e.length-1];function cu(e,t){if(null==e)return {};var n,r,o=function(e,t){if(null==e)return {};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n]);}return o}function lu(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var pu=H,fu=Array.isArray||function(e){return "Array"==pu(e)},du=je,hu=q(q.bind),gu=function(e,t){return du(e),void 0===t?e:hu?hu(e,t):function(){return e.apply(t,arguments)}},mu=fu,yu=gr,Du=gu,Eu=S.TypeError,Cu=function(e,t,n,r,o,i,u,s){for(var a,c,l=o,p=0,f=!!u&&Du(u,s);p<r;){if(p in n){if(a=f?f(n[p],p,t):n[p],i>0&&mu(a))c=yu(a),l=Cu(e,t,a,c,l,i-1)-1;else {if(l>=9007199254740991)throw Eu("Exceed the acceptable array length");e[l]=a;}l++;}p++;}return l},bu=Cu,vu=q,Au=T,Fu=ie,xu=fo,Su=hn,wu=function(){},Tu=[],Bu=pe("Reflect","construct"),Nu=/^\s*(?:class|function)\b/,ku=vu(Nu.exec),Pu=!Nu.exec(wu),Ou=function(e){if(!Fu(e))return !1;try{return Bu(wu,Tu,e),!0}catch(e){return !1}},Iu=!Bu||Au((function(){var e;return Ou(Ou.call)||!Ou(Object)||!Ou((function(){e=!0;}))||e}))?function(e){if(!Fu(e))return !1;switch(xu(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return !1}return Pu||!!ku(Nu,Su(e))}:Ou,Lu=S,ju=fu,_u=Iu,Mu=se,Ru=Dt("species"),Vu=Lu.Array,$u=function(e){var t;return ju(e)&&(t=e.constructor,(_u(t)&&(t===Vu||ju(t.prototype))||Mu(t)&&null===(t=t[Ru]))&&(t=void 0)),void 0===t?Vu:t},Wu=function(e,t){return new($u(e))(0===t?0:t)},qu=bu,Uu=je,zu=Ze,Gu=gr,Hu=Wu;ro({target:"Array",proto:!0},{flatMap:function(e){var t,n=zu(this),r=Gu(n);return Uu(e),(t=Hu(n,0)).length=qu(t,n,n,r,0,1,e,arguments.length>1?arguments[1]:void 0),t}});var Ju={},Xu=Ju,Yu=Dt("iterator"),Ku=Array.prototype,Qu=fo,Zu=Me,es=Ju,ts=Dt("iterator"),ns=function(e){if(null!=e)return Zu(e,ts)||Zu(e,"@@iterator")||es[Qu(e)]},rs=k,os=je,is=Yt,us=Pe,ss=ns,as=S.TypeError,cs=k,ls=Yt,ps=Me,fs=gu,ds=k,hs=Yt,gs=Pe,ms=function(e){return void 0!==e&&(Xu.Array===e||Ku[Yu]===e)},ys=gr,Ds=fe,Es=function(e,t){var n=arguments.length<2?ss(e):t;if(os(n))return is(rs(n,e));throw as(us(e)+" is not iterable")},Cs=ns,bs=function(e,t,n){var r,o;ls(e);try{if(!(r=ps(e,"return"))){if("throw"===t)throw n;return n}r=cs(r,e);}catch(e){o=!0,r=e;}if("throw"===t)throw n;if(o)throw r;return ls(r),n},vs=S.TypeError,As=function(e,t){this.stopped=e,this.result=t;},Fs=As.prototype,xs=Bt,Ss=zt,ws=M,Ts=function(e,t,n){var r,o,i,u,s,a,c,l=n&&n.that,p=!(!n||!n.AS_ENTRIES),f=!(!n||!n.IS_ITERATOR),d=!(!n||!n.INTERRUPTED),h=fs(t,l),g=function(e){return r&&bs(r,"normal",e),new As(!0,e)},m=function(e){return p?(hs(e),d?h(e[0],e[1],g):h(e[0],e[1])):d?h(e,g):h(e)};if(f)r=e;else {if(!(o=Cs(e)))throw vs(gs(e)+" is not iterable");if(ms(o)){for(i=0,u=ys(e);u>i;i++)if((s=m(e[i]))&&Ds(Fs,s))return s;return new As(!1)}r=Es(e,o);}for(a=r.next;!(c=ds(a,r)).done;){try{s=m(c.value);}catch(e){bs(r,"throw",e);}if("object"==typeof s&&s&&Ds(Fs,s))return s}return new As(!1)},Bs=function(e,t,n){var r=xs(t);r in e?Ss.f(e,r,ws(0,n)):e[r]=n;};ro({target:"Object",stat:!0},{fromEntries:function(e){var t={};return Ts(e,(function(e,n){Bs(t,e,n);}),{AS_ENTRIES:!0}),t}});var Ns=void 0!==Ns?Ns:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function ks(){throw new Error("setTimeout has not been defined")}function Ps(){throw new Error("clearTimeout has not been defined")}var Os=ks,Is=Ps;function Ls(e){if(Os===setTimeout)return setTimeout(e,0);if((Os===ks||!Os)&&setTimeout)return Os=setTimeout,setTimeout(e,0);try{return Os(e,0)}catch(t){try{return Os.call(null,e,0)}catch(t){return Os.call(this,e,0)}}}"function"==typeof Ns.setTimeout&&(Os=setTimeout),"function"==typeof Ns.clearTimeout&&(Is=clearTimeout);var js,_s=[],Ms=!1,Rs=-1;function Vs(){Ms&&js&&(Ms=!1,js.length?_s=js.concat(_s):Rs=-1,_s.length&&$s());}function $s(){if(!Ms){var e=Ls(Vs);Ms=!0;for(var t=_s.length;t;){for(js=_s,_s=[];++Rs<t;)js&&js[Rs].run();Rs=-1,t=_s.length;}js=null,Ms=!1,function(e){if(Is===clearTimeout)return clearTimeout(e);if((Is===Ps||!Is)&&clearTimeout)return Is=clearTimeout,clearTimeout(e);try{Is(e);}catch(t){try{return Is.call(null,e)}catch(t){return Is.call(this,e)}}}(e);}}function Ws(e,t){this.fun=e,this.array=t;}Ws.prototype.run=function(){this.fun.apply(null,this.array);};function qs(){}var Us=qs,zs=qs,Gs=qs,Hs=qs,Js=qs,Xs=qs,Ys=qs;var Ks=Ns.performance||{},Qs=Ks.now||Ks.mozNow||Ks.msNow||Ks.oNow||Ks.webkitNow||function(){return (new Date).getTime()};var Zs=new Date;var ea={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];_s.push(new Ws(e,t)),1!==_s.length||Ms||Ls($s);},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Us,addListener:zs,once:Gs,off:Hs,removeListener:Js,removeAllListeners:Xs,emit:Ys,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return "/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*Qs.call(Ks),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return (new Date-Zs)/1e3}},ta=ea;const na="object"==typeof ta&&ta.env&&ta.env.NODE_DEBUG&&/\bsemver\b/i.test(ta.env.NODE_DEBUG)?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.error("SEMVER",...t)}:()=>{};var ra=na;var oa={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16},ia={exports:{}};!function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=oa,r=ra,o=(t=e.exports={}).re=[],i=t.src=[],u=t.t={};let s=0;const a=(e,t,n)=>{const a=s++;r(a,t),u[e]=a,i[a]=t,o[a]=new RegExp(t,n?"g":void 0);};a("NUMERICIDENTIFIER","0|[1-9]\\d*"),a("NUMERICIDENTIFIERLOOSE","[0-9]+"),a("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),a("MAINVERSION","(".concat(i[u.NUMERICIDENTIFIER],")\\.")+"(".concat(i[u.NUMERICIDENTIFIER],")\\.")+"(".concat(i[u.NUMERICIDENTIFIER],")")),a("MAINVERSIONLOOSE","(".concat(i[u.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(i[u.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(i[u.NUMERICIDENTIFIERLOOSE],")")),a("PRERELEASEIDENTIFIER","(?:".concat(i[u.NUMERICIDENTIFIER],"|").concat(i[u.NONNUMERICIDENTIFIER],")")),a("PRERELEASEIDENTIFIERLOOSE","(?:".concat(i[u.NUMERICIDENTIFIERLOOSE],"|").concat(i[u.NONNUMERICIDENTIFIER],")")),a("PRERELEASE","(?:-(".concat(i[u.PRERELEASEIDENTIFIER],"(?:\\.").concat(i[u.PRERELEASEIDENTIFIER],")*))")),a("PRERELEASELOOSE","(?:-?(".concat(i[u.PRERELEASEIDENTIFIERLOOSE],"(?:\\.").concat(i[u.PRERELEASEIDENTIFIERLOOSE],")*))")),a("BUILDIDENTIFIER","[0-9A-Za-z-]+"),a("BUILD","(?:\\+(".concat(i[u.BUILDIDENTIFIER],"(?:\\.").concat(i[u.BUILDIDENTIFIER],")*))")),a("FULLPLAIN","v?".concat(i[u.MAINVERSION]).concat(i[u.PRERELEASE],"?").concat(i[u.BUILD],"?")),a("FULL","^".concat(i[u.FULLPLAIN],"$")),a("LOOSEPLAIN","[v=\\s]*".concat(i[u.MAINVERSIONLOOSE]).concat(i[u.PRERELEASELOOSE],"?").concat(i[u.BUILD],"?")),a("LOOSE","^".concat(i[u.LOOSEPLAIN],"$")),a("GTLT","((?:<|>)?=?)"),a("XRANGEIDENTIFIERLOOSE","".concat(i[u.NUMERICIDENTIFIERLOOSE],"|x|X|\\*")),a("XRANGEIDENTIFIER","".concat(i[u.NUMERICIDENTIFIER],"|x|X|\\*")),a("XRANGEPLAIN","[v=\\s]*(".concat(i[u.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(i[u.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(i[u.XRANGEIDENTIFIER],")")+"(?:".concat(i[u.PRERELEASE],")?").concat(i[u.BUILD],"?")+")?)?"),a("XRANGEPLAINLOOSE","[v=\\s]*(".concat(i[u.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(i[u.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(i[u.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(i[u.PRERELEASELOOSE],")?").concat(i[u.BUILD],"?")+")?)?"),a("XRANGE","^".concat(i[u.GTLT],"\\s*").concat(i[u.XRANGEPLAIN],"$")),a("XRANGELOOSE","^".concat(i[u.GTLT],"\\s*").concat(i[u.XRANGEPLAINLOOSE],"$")),a("COERCE","".concat("(^|[^\\d])(\\d{1,").concat(n,"})")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:$|[^\\d])"),a("COERCERTL",i[u.COERCE],!0),a("LONETILDE","(?:~>?)"),a("TILDETRIM","(\\s*)".concat(i[u.LONETILDE],"\\s+"),!0),t.tildeTrimReplace="$1~",a("TILDE","^".concat(i[u.LONETILDE]).concat(i[u.XRANGEPLAIN],"$")),a("TILDELOOSE","^".concat(i[u.LONETILDE]).concat(i[u.XRANGEPLAINLOOSE],"$")),a("LONECARET","(?:\\^)"),a("CARETTRIM","(\\s*)".concat(i[u.LONECARET],"\\s+"),!0),t.caretTrimReplace="$1^",a("CARET","^".concat(i[u.LONECARET]).concat(i[u.XRANGEPLAIN],"$")),a("CARETLOOSE","^".concat(i[u.LONECARET]).concat(i[u.XRANGEPLAINLOOSE],"$")),a("COMPARATORLOOSE","^".concat(i[u.GTLT],"\\s*(").concat(i[u.LOOSEPLAIN],")$|^$")),a("COMPARATOR","^".concat(i[u.GTLT],"\\s*(").concat(i[u.FULLPLAIN],")$|^$")),a("COMPARATORTRIM","(\\s*)".concat(i[u.GTLT],"\\s*(").concat(i[u.LOOSEPLAIN],"|").concat(i[u.XRANGEPLAIN],")"),!0),t.comparatorTrimReplace="$1$2$3",a("HYPHENRANGE","^\\s*(".concat(i[u.XRANGEPLAIN],")")+"\\s+-\\s+"+"(".concat(i[u.XRANGEPLAIN],")")+"\\s*$"),a("HYPHENRANGELOOSE","^\\s*(".concat(i[u.XRANGEPLAINLOOSE],")")+"\\s+-\\s+"+"(".concat(i[u.XRANGEPLAINLOOSE],")")+"\\s*$"),a("STAR","(<|>)?=?\\s*\\*"),a("GTE0","^\\s*>=\\s*0.0.0\\s*$"),a("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$");}(ia,ia.exports);const ua=["includePrerelease","loose","rtl"];var sa=e=>e?"object"!=typeof e?{loose:!0}:ua.filter((t=>e[t])).reduce(((e,t)=>(e[t]=!0,e)),{}):{};const aa=/^[0-9]+$/,ca=(e,t)=>{const n=aa.test(e),r=aa.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1};var la={compareIdentifiers:ca,rcompareIdentifiers:(e,t)=>ca(t,e)};const pa=ra,{MAX_LENGTH:fa,MAX_SAFE_INTEGER:da}=oa,{re:ha,t:ga}=ia.exports,ma=sa,{compareIdentifiers:ya}=la;class Da{constructor(e,t){if(t=ma(t),e instanceof Da){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version;}else if("string"!=typeof e)throw new TypeError("Invalid Version: ".concat(e));if(e.length>fa)throw new TypeError("version is longer than ".concat(fa," characters"));pa("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?ha[ga.LOOSE]:ha[ga.FULL]);if(!n)throw new TypeError("Invalid Version: ".concat(e));if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>da||this.major<0)throw new TypeError("Invalid major version");if(this.minor>da||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>da||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<da)return t}return e})):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format();}format(){return this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch),this.prerelease.length&&(this.version+="-".concat(this.prerelease.join("."))),this.version}toString(){return this.version}compare(e){if(pa("SemVer.compare",this.version,this.options,e),!(e instanceof Da)){if("string"==typeof e&&e===this.version)return 0;e=new Da(e,this.options);}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof Da||(e=new Da(e,this.options)),ya(this.major,e.major)||ya(this.minor,e.minor)||ya(this.patch,e.patch)}comparePre(e){if(e instanceof Da||(e=new Da(e,this.options)),this.prerelease.length&&!e.prerelease.length)return -1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],r=e.prerelease[t];if(pa("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return -1;if(n!==r)return ya(n,r)}while(++t)}compareBuild(e){e instanceof Da||(e=new Da(e,this.options));let t=0;do{const n=this.build[t],r=e.build[t];if(pa("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return -1;if(n!==r)return ya(n,r)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else {let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0);}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: ".concat(e))}return this.format(),this.raw=this.version,this}}const Ea=Da;var Ca=(e,t,n)=>new Ea(e,n).compare(new Ea(t,n));const ba=Ca;var va=(e,t,n)=>ba(e,t,n)<0;const Aa=Ca;var Fa,xa,Sa,wa,Ta,Ba,Na=(e,t,n)=>Aa(e,t,n)>=0,ka={exports:{}};!function(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];}function r(){return "undefined"!=typeof WeakMap?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return !1}}}Object.defineProperty(t,"__esModule",{value:!0}),t.outdent=void 0;var o=Object.prototype.hasOwnProperty,i=function(e,t){return o.call(e,t)};function u(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var s=/^[ \t]*(?:\r\n|\r|\n)/,a=/(?:\r\n|\r|\n)[ \t]*$/,c=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,p=/^[ \t]*[\r\n][ \t\r\n]*$/;function f(e,t,n){var r=0,o=e[0].match(l);o&&(r=o[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var u=n.newline,c=n.trimLeadingNewline,p=n.trimTrailingNewline,f="string"==typeof u,d=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&c&&(e=e.replace(s,"")),t===d-1&&p&&(e=e.replace(a,"")),f&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return u}))),e}))}function d(e,t){for(var n="",r=0,o=e.length;r<o;r++)n+=e[r],r<o-1&&(n+=t[r]);return n}function h(e){return i(e,"raw")&&i(e,"length")}var g=function e(t){var n=r(),o=r(),i=u((function r(i){for(var s=[],a=1;a<arguments.length;a++)s[a-1]=arguments[a];if(h(i)){var l=i,m=(s[0]===r||s[0]===g)&&p.test(l[0])&&c.test(l[1]),y=m?o:n,D=y.get(l);if(D||(D=f(l,m,t),y.set(l,D)),0===s.length)return D[0];var E=d(D,m?s.slice(1):s);return E}return e(u(u({},t),i||{}))}),{string:function(e){return f([e],!1,t)[0]}});return i}({trimLeadingNewline:!0,trimTrailingNewline:!0});t.outdent=g,t.default=g;try{e.exports=g,Object.defineProperty(g,"__esModule",{value:!0}),g.default=g,g.outdent=g;}catch(e){}}(ka,ka.exports);const{outdent:Pa}=ka.exports,Oa="Config",Ia="Editor",La="Other",ja="Global",_a="Special",Ma={cursorOffset:{since:"1.4.0",category:_a,type:"int",default:-1,range:{start:-1,end:Number.POSITIVE_INFINITY,step:1},description:Pa(Fa||(Fa=lu(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]))),cliCategory:Ia},endOfLine:{since:"1.15.0",category:ja,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:Pa(xa||(xa=lu(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "])))}]},filepath:{since:"1.4.0",category:_a,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:La,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:_a,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:La},parser:{since:"0.0.10",category:ja,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:"2.3.0",description:"Ember / Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:ja,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:Oa},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:ja,description:Pa(Sa||(Sa=lu(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]))),exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:Oa},printWidth:{since:"0.0.0",category:ja,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},rangeEnd:{since:"1.4.0",category:_a,type:"int",default:Number.POSITIVE_INFINITY,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:Pa(wa||(wa=lu(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))),cliCategory:Ia},rangeStart:{since:"1.4.0",category:_a,type:"int",default:0,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:Pa(Ta||(Ta=lu(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))),cliCategory:Ia},requirePragma:{since:"1.7.0",category:_a,type:"boolean",default:!1,description:Pa(Ba||(Ba=lu(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]))),cliCategory:La},tabWidth:{type:"int",category:ja,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},useTabs:{since:"1.0.0",category:ja,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:ja,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}};const Ra=["cliName","cliCategory","cliDescription"],Va={compare:Ca,lt:va,gte:Na},$a=(e,t)=>Object.entries(e).map((e=>{let[n,r]=e;return Object.assign({[t]:n},r)})),Wa=n.version,qa={CATEGORY_CONFIG:Oa,CATEGORY_EDITOR:Ia,CATEGORY_FORMAT:"Format",CATEGORY_OTHER:La,CATEGORY_OUTPUT:"Output",CATEGORY_GLOBAL:ja,CATEGORY_SPECIAL:_a,options:Ma}.options;function Ua(e,t,n){const r=new Set(e.choices.map((e=>e.value)));for(const o of t)if(o.parsers)for(const t of o.parsers)if(!r.has(t)){r.add(t);const i=n.find((e=>e.parsers&&e.parsers[t]));let u=o.name;i&&i.name&&(u+=" (plugin: ".concat(i.name,")")),e.choices.push({value:t,description:u});}}var za={getSupportInfo:function(){let{plugins:e=[],showUnreleased:t=!1,showDeprecated:n=!1,showInternal:r=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const o=Wa.split("-",1)[0],i=e.flatMap((e=>e.languages||[])).filter(s),u=$a(Object.assign({},...e.map((e=>{let{options:t}=e;return t})),qa),"name").filter((e=>s(e)&&a(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map(c).map((t=>{t=Object.assign({},t),Array.isArray(t.default)&&(t.default=1===t.default.length?t.default[0].value:t.default.filter(s).sort(((e,t)=>Va.compare(t.since,e.since)))[0].value),Array.isArray(t.choices)&&(t.choices=t.choices.filter((e=>s(e)&&a(e))),"parser"===t.name&&Ua(t,i,e));const n=Object.fromEntries(e.filter((e=>e.defaultOptions&&void 0!==e.defaultOptions[t.name])).map((e=>[e.name,e.defaultOptions[t.name]])));return Object.assign(Object.assign({},t),{},{pluginDefaults:n})}));return {languages:i,options:u};function s(e){return t||!("since"in e)||e.since&&Va.gte(o,e.since)}function a(e){return n||!("deprecated"in e)||e.deprecated&&Va.lt(o,e.deprecated)}function c(e){if(r)return e;return cu(e,Ra)}}};const Ga=eu.exports,Ha=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")},Ja=au,{getSupportInfo:Xa}=za,Ya=/[^\x20-\x7F]/;function Ka(e){return (t,n,r)=>{const o=r&&r.backwards;if(!1===n)return !1;const{length:i}=t;let u=n;for(;u>=0&&u<i;){const n=t.charAt(u);if(e instanceof RegExp){if(!e.test(n))return u}else if(!e.includes(n))return u;o?u--:u++;}return (-1===u||u===i)&&u}}const Qa=Ka(/\s/),Za=Ka(" \t"),ec=Ka(",; \t"),tc=Ka(/[^\n\r]/);function nc(e,t){if(!1===t)return !1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}function rc(e,t){return !1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?tc(e,t):t)}function oc(e,t,n){const r=n&&n.backwards;if(!1===t)return !1;const o=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===o)return t-2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return t-1}else {if("\r"===o&&"\n"===e.charAt(t+1))return t+2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return t+1}return t}function ic(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Za(e,n.backwards?t-1:t,n),o=oc(e,r,n);return r!==o}function uc(e,t){let n=null,r=t;for(;r!==n;)n=r,r=ec(e,r),r=nc(e,r),r=Za(e,r);return r=rc(e,r),r=oc(e,r),!1!==r&&ic(e,r)}function sc(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Za(e,r),r=nc(e,r),r=rc(e,r),r=oc(e,r);return r}function ac(e,t,n){return sc(e,n(t))}function cc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=0;for(let o=n;o<e.length;++o)"\t"===e[o]?r=r+t-r%t:r++;return r}function lc(e,t){const n={quote:'"',regex:/"/g,escaped:"&quot;"},r={quote:"'",regex:/'/g,escaped:"&apos;"},o="'"===t?r:n,i=o===r?n:r;let u=o;if(e.includes(o.quote)||e.includes(i.quote)){u=(e.match(o.regex)||[]).length>(e.match(i.regex)||[]).length?i:o;}return u}function pc(e,t,n){const r='"'===t?"'":'"',o=e.replace(/\\(.)|(["'])/gs,((e,o,i)=>o===r?o:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(o)?o:"\\"+o)));return t+o+t}function fc(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,t.nodeDescription=function(e){const t=e.type||e.kind||"(unknown type)";let n=String(e.name||e.id&&("object"==typeof e.id?e.id.name:e.id)||e.key&&("object"==typeof e.key?e.key.name:e.key)||e.value&&("object"==typeof e.value?"":String(e.value))||e.operator||"");n.length>20&&(n=n.slice(0,19)+"\u2026");return t+(n?" "+n:"")}(e);}var dc={inferParserByLanguage:function(e,t){const{languages:n}=Xa({plugins:t.plugins}),r=n.find((t=>{let{name:n}=t;return n.toLowerCase()===e}))||n.find((t=>{let{aliases:n}=t;return Array.isArray(n)&&n.includes(e)}))||n.find((t=>{let{extensions:n}=t;return Array.isArray(n)&&n.includes(".".concat(e))}));return r&&r.parsers[0]},getStringWidth:function(e){return e?Ya.test(e)?Ga(e):e.length:0},getMaxContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(Ha(t),")+"),"g"));return null===n?0:n.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(Ha(t),")+"),"g"));if(null===n)return 0;const r=new Map;let o=0;for(const e of n){const n=e.length/t.length;r.set(n,!0),n>o&&(o=n);}for(let e=1;e<o;e++)if(!r.get(e))return e;return o+1},getPenultimate:e=>e[e.length-2],getLast:Ja,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:sc,getNextNonSpaceNonCommentCharacterIndex:ac,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt(ac(e,t,n))},skip:Ka,skipWhitespace:Qa,skipSpaces:Za,skipToLineEnd:ec,skipEverythingButNewLine:tc,skipInlineComment:nc,skipTrailingComment:rc,skipNewline:oc,isNextLineEmptyAfterIndex:uc,isNextLineEmpty:function(e,t,n){return uc(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=Za(e,r,{backwards:!0}),r=oc(e,r,{backwards:!0}),r=Za(e,r,{backwards:!0}),r!==oc(e,r,{backwards:!0})},hasNewline:ic,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return !0;return !1},hasSpaces:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Za(e,n.backwards?t-1:t,n);return r!==t},getAlignmentSize:cc,getIndentSize:function(e,t){const n=e.lastIndexOf("\n");return -1===n?0:cc(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:lc,printString:function(e,t){const n=e.slice(1,-1);return pc(n,"json"===t.parser||"json5"===t.parser&&"preserve"===t.quoteProps&&!t.singleQuote?'"':t.__isInHtmlAttribute?"'":lc(n,t.singleQuote?"'":'"').quote,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.__embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},makeString:pc,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,fc(e,t);},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),fc(e,t);},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,fc(e,t);},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},getShebang:function(e){if(!e.startsWith("#!"))return "";const t=e.indexOf("\n");return -1===t?e:e.slice(0,t)},isNonEmptyArray:function(e){return Array.isArray(e)&&e.length>0},createGroupIdMapper:function(e){const t=new WeakMap;return function(n){return t.has(n)||t.set(n,Symbol(e)),t.get(n)}}};var hc={guessEndOfLine:function(e){const t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return "\r";case"crlf":return "\r\n";default:return "\n"}},countEndOfLineChars:function(e,t){let n;if("\n"===t)n=/\n/g;else if("\r"===t)n=/\r/g;else {if("\r\n"!==t)throw new Error('Unexpected "eol" '.concat(JSON.stringify(t),"."));n=/\r\n/g;}const r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}};const gc=au,{literalline:mc,join:yc}=Zi,Dc=e=>Array.isArray(e)||e&&"concat"===e.type,Ec=e=>{if(Array.isArray(e))return e;if("concat"!==e.type&&"fill"!==e.type)throw new Error("Expect doc type to be `concat` or `fill`.");return e.parts},Cc={};function bc(e,t,n,r){const o=[e];for(;o.length>0;){const e=o.pop();if(e!==Cc){if(n&&o.push(e,Cc),!t||!1!==t(e))if(Dc(e)||"fill"===e.type){const t=Ec(e);for(let e=t.length-1;e>=0;--e)o.push(t[e]);}else if("if-break"===e.type)e.flatContents&&o.push(e.flatContents),e.breakContents&&o.push(e.breakContents);else if("group"===e.type&&e.expandedStates)if(r)for(let t=e.expandedStates.length-1;t>=0;--t)o.push(e.expandedStates[t]);else o.push(e.contents);else e.contents&&o.push(e.contents);}else n(o.pop());}}function vc(e,t){const n=new Map;return r(e);function r(e){if(n.has(e))return n.get(e);const o=function(e){if(Array.isArray(e))return t(e.map(r));if("concat"===e.type||"fill"===e.type){const n=e.parts.map(r);return t(Object.assign(Object.assign({},e),{},{parts:n}))}if("if-break"===e.type){const n=e.breakContents&&r(e.breakContents),o=e.flatContents&&r(e.flatContents);return t(Object.assign(Object.assign({},e),{},{breakContents:n,flatContents:o}))}if("group"===e.type&&e.expandedStates){const n=e.expandedStates.map(r),o=n[0];return t(Object.assign(Object.assign({},e),{},{contents:o,expandedStates:n}))}if(e.contents){const n=r(e.contents);return t(Object.assign(Object.assign({},e),{},{contents:n}))}return t(e)}(e);return n.set(e,o),o}}function Ac(e,t,n){let r=n,o=!1;return bc(e,(function(e){const n=t(e);if(void 0!==n&&(o=!0,r=n),o)return !1})),r}function Fc(e){return !("group"!==e.type||!e.break)||(!("line"!==e.type||!e.hard)||("break-parent"===e.type||void 0))}function xc(e){if(e.length>0){const t=gc(e);t.expandedStates||t.break||(t.break="propagated");}return null}function Sc(e){return "line"!==e.type||e.hard?"if-break"===e.type?e.flatContents||"":e:e.soft?"":" "}const wc=(e,t)=>e&&"line"===e.type&&e.hard&&t&&"break-parent"===t.type;function Tc(e){if(!e)return e;if(Dc(e)||"fill"===e.type){const t=Ec(e);for(;t.length>1&&wc(...t.slice(-2));)t.length-=2;if(t.length>0){const e=Tc(gc(t));t[t.length-1]=e;}return Array.isArray(e)?t:Object.assign(Object.assign({},e),{},{parts:t})}switch(e.type){case"align":case"indent":case"indent-if-break":case"group":case"line-suffix":case"label":{const t=Tc(e.contents);return Object.assign(Object.assign({},e),{},{contents:t})}case"if-break":{const t=Tc(e.breakContents),n=Tc(e.flatContents);return Object.assign(Object.assign({},e),{},{breakContents:t,flatContents:n})}}return e}function Bc(e){return vc(e,(e=>function(e){switch(e.type){case"fill":if(e.parts.every((e=>""===e)))return "";break;case"group":if(!(e.contents||e.id||e.break||e.expandedStates))return "";if("group"===e.contents.type&&e.contents.id===e.id&&e.contents.break===e.break&&e.contents.expandedStates===e.expandedStates)return e.contents;break;case"align":case"indent":case"indent-if-break":case"line-suffix":if(!e.contents)return "";break;case"if-break":if(!e.flatContents&&!e.breakContents)return ""}if(!Dc(e))return e;const t=[];for(const n of Ec(e)){if(!n)continue;const[e,...r]=Dc(n)?Ec(n):[n];"string"==typeof e&&"string"==typeof gc(t)?t[t.length-1]+=e:t.push(e),t.push(...r);}return 0===t.length?"":1===t.length?t[0]:Array.isArray(e)?t:Object.assign(Object.assign({},e),{},{parts:t})}(e)))}function Nc(e){const t=[],n=e.filter(Boolean);for(;n.length>0;){const e=n.shift();e&&(Dc(e)?n.unshift(...Ec(e)):t.length>0&&"string"==typeof gc(t)&&"string"==typeof e?t[t.length-1]+=e:t.push(e));}return t}function kc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:mc;return yc(t,e.split("\n")).parts}function Pc(e){if("line"===e.type)return !0}var Oc={isConcat:Dc,getDocParts:Ec,willBreak:function(e){return Ac(e,Fc,!1)},traverseDoc:bc,findInDoc:Ac,mapDoc:vc,propagateBreaks:function(e){const t=new Set,n=[];bc(e,(function(e){if("break-parent"===e.type&&xc(n),"group"===e.type){if(n.push(e),t.has(e))return !1;t.add(e);}}),(function(e){if("group"===e.type){n.pop().break&&xc(n);}}),!0);},removeLines:function(e){return vc(e,Sc)},stripTrailingHardline:function(e){return Tc(Bc(e))},normalizeParts:Nc,normalizeDoc:function(e){return vc(e,(e=>Array.isArray(e)?Nc(e):e.parts?Object.assign(Object.assign({},e),{},{parts:Nc(e.parts)}):e))},cleanDoc:Bc,replaceTextEndOfLine:kc,replaceEndOfLine:function(e){return vc(e,(e=>"string"==typeof e&&e.includes("\n")?kc(e):e))},canBreak:function(e){return Ac(e,Pc,!1)}};const{getStringWidth:Ic,getLast:Lc}=dc,{convertEndOfLineToChars:jc}=hc,{fill:_c,cursor:Mc,indent:Rc}=Zi,{isConcat:Vc,getDocParts:$c}=Oc;let Wc;function qc(e,t){return zc(e,{type:"indent"},t)}function Uc(e,t,n){if(t===Number.NEGATIVE_INFINITY)return e.root||{value:"",length:0,queue:[]};if(t<0)return zc(e,{type:"dedent"},n);if(!t)return e;if("root"===t.type)return Object.assign(Object.assign({},e),{},{root:e});return zc(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n)}function zc(e,t,n){const r="dedent"===t.type?e.queue.slice(0,-1):[...e.queue,t];let o="",i=0,u=0,s=0;for(const e of r)switch(e.type){case"indent":l(),n.useTabs?a(1):c(n.tabWidth);break;case"stringAlign":l(),o+=e.n,i+=e.n.length;break;case"numberAlign":u+=1,s+=e.n;break;default:throw new Error("Unexpected type '".concat(e.type,"'"))}return p(),Object.assign(Object.assign({},e),{},{value:o,length:i,queue:r});function a(e){o+="\t".repeat(e),i+=n.tabWidth*e;}function c(e){o+=" ".repeat(e),i+=e;}function l(){n.useTabs?function(){u>0&&a(u);f();}():p();}function p(){s>0&&c(s),f();}function f(){u=0,s=0;}}function Gc(e){if(0===e.length)return 0;let t=0;for(;e.length>0&&"string"==typeof Lc(e)&&/^[\t ]*$/.test(Lc(e));)t+=e.pop().length;if(e.length>0&&"string"==typeof Lc(e)){const n=Lc(e).replace(/[\t ]*$/,"");t+=Lc(e).length-n.length,e[e.length-1]=n;}return t}function Hc(e,t,n,r,o,i){let u=t.length;const s=[e],a=[];for(;n>=0;){if(0===s.length){if(0===u)return !0;s.push(t[u-1]),u--;continue}const[e,c,l]=s.pop();if("string"==typeof l)a.push(l),n-=Ic(l);else if(Vc(l)){const t=$c(l);for(let n=t.length-1;n>=0;n--)s.push([e,c,t[n]]);}else switch(l.type){case"indent":s.push([qc(e,r),c,l.contents]);break;case"align":s.push([Uc(e,l.n,r),c,l.contents]);break;case"trim":n+=Gc(a);break;case"group":{if(i&&l.break)return !1;const t=l.break?1:c;s.push([e,t,l.expandedStates&&1===t?Lc(l.expandedStates):l.contents]),l.id&&(Wc[l.id]=t);break}case"fill":for(let t=l.parts.length-1;t>=0;t--)s.push([e,c,l.parts[t]]);break;case"if-break":case"indent-if-break":{const t=l.groupId?Wc[l.groupId]:c;if(1===t){const t="if-break"===l.type?l.breakContents:l.negate?l.contents:Rc(l.contents);t&&s.push([e,c,t]);}if(2===t){const t="if-break"===l.type?l.flatContents:l.negate?Rc(l.contents):l.contents;t&&s.push([e,c,t]);}break}case"line":switch(c){case 2:if(!l.hard){l.soft||(a.push(" "),n-=1);break}return !0;case 1:return !0}break;case"line-suffix":o=!0;break;case"line-suffix-boundary":if(o)return !1;break;case"label":s.push([e,c,l.contents]);}}return !1}var Jc={printDocToString:function(e,t){Wc={};const n=t.printWidth,r=jc(t.endOfLine);let o=0;const i=[[{value:"",length:0,queue:[]},1,e]],u=[];let s=!1,a=[];for(;i.length>0;){const[e,c,l]=i.pop();if("string"==typeof l){const e="\n"!==r?l.replace(/\n/g,r):l;u.push(e),o+=Ic(e);}else if(Vc(l)){const t=$c(l);for(let n=t.length-1;n>=0;n--)i.push([e,c,t[n]]);}else switch(l.type){case"cursor":u.push(Mc.placeholder);break;case"indent":i.push([qc(e,t),c,l.contents]);break;case"align":i.push([Uc(e,l.n,t),c,l.contents]);break;case"trim":o-=Gc(u);break;case"group":switch(c){case 2:if(!s){i.push([e,l.break?1:2,l.contents]);break}case 1:{s=!1;const r=[e,2,l.contents],u=n-o,c=a.length>0;if(!l.break&&Hc(r,i,u,t,c))i.push(r);else if(l.expandedStates){const n=Lc(l.expandedStates);if(l.break){i.push([e,1,n]);break}for(let r=1;r<l.expandedStates.length+1;r++){if(r>=l.expandedStates.length){i.push([e,1,n]);break}{const n=[e,2,l.expandedStates[r]];if(Hc(n,i,u,t,c)){i.push(n);break}}}}else i.push([e,1,l.contents]);break}}l.id&&(Wc[l.id]=Lc(i)[1]);break;case"fill":{const r=n-o,{parts:u}=l;if(0===u.length)break;const[s,p]=u,f=[e,2,s],d=[e,1,s],h=Hc(f,[],r,t,a.length>0,!0);if(1===u.length){h?i.push(f):i.push(d);break}const g=[e,2,p],m=[e,1,p];if(2===u.length){h?i.push(g,f):i.push(m,d);break}u.splice(0,2);const y=[e,c,_c(u)];Hc([e,2,[s,p,u[0]]],[],r,t,a.length>0,!0)?i.push(y,g,f):h?i.push(y,m,f):i.push(y,m,d);break}case"if-break":case"indent-if-break":{const t=l.groupId?Wc[l.groupId]:c;if(1===t){const t="if-break"===l.type?l.breakContents:l.negate?l.contents:Rc(l.contents);t&&i.push([e,c,t]);}if(2===t){const t="if-break"===l.type?l.flatContents:l.negate?Rc(l.contents):l.contents;t&&i.push([e,c,t]);}break}case"line-suffix":a.push([e,c,l.contents]);break;case"line-suffix-boundary":a.length>0&&i.push([e,c,{type:"line",hard:!0}]);break;case"line":switch(c){case 2:if(!l.hard){l.soft||(u.push(" "),o+=1);break}s=!0;case 1:if(a.length>0){i.push([e,c,l],...a.reverse()),a=[];break}l.literal?e.root?(u.push(r,e.root.value),o=e.root.length):(u.push(r),o=0):(o-=Gc(u),u.push(r+e.value),o=e.length);}break;case"label":i.push([e,c,l.contents]);}0===i.length&&a.length>0&&(i.push(...a.reverse()),a=[]);}const c=u.indexOf(Mc.placeholder);if(-1!==c){const e=u.indexOf(Mc.placeholder,c+1),t=u.slice(0,c).join(""),n=u.slice(c+1,e).join("");return {formatted:t+n+u.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return {formatted:u.join("")}}};const{isConcat:Xc,getDocParts:Yc}=Oc;function Kc(e){if(!e)return "";if(Xc(e)){const t=[];for(const n of Yc(e))if(Xc(n))t.push(...Kc(n).parts);else {const e=Kc(n);""!==e&&t.push(e);}return {type:"concat",parts:t}}return "if-break"===e.type?Object.assign(Object.assign({},e),{},{breakContents:Kc(e.breakContents),flatContents:Kc(e.flatContents)}):"group"===e.type?Object.assign(Object.assign({},e),{},{contents:Kc(e.contents),expandedStates:e.expandedStates&&e.expandedStates.map(Kc)}):"fill"===e.type?{type:"fill",parts:e.parts.map(Kc)}:e.contents?Object.assign(Object.assign({},e),{},{contents:Kc(e.contents)}):e}var Qc={printDocToDebug:function(e){const t=Object.create(null),n=new Set;return function e(t,n,o){if("string"==typeof t)return JSON.stringify(t);if(Xc(t)){const n=Yc(t).map(e).filter(Boolean);return 1===n.length?n[0]:"[".concat(n.join(", "),"]")}if("line"===t.type){const e=Array.isArray(o)&&o[n+1]&&"break-parent"===o[n+1].type;return t.literal?e?"literalline":"literallineWithoutBreakParent":t.hard?e?"hardline":"hardlineWithoutBreakParent":t.soft?"softline":"line"}if("break-parent"===t.type){return Array.isArray(o)&&o[n-1]&&"line"===o[n-1].type&&o[n-1].hard?void 0:"breakParent"}if("trim"===t.type)return "trim";if("indent"===t.type)return "indent("+e(t.contents)+")";if("align"===t.type)return t.n===Number.NEGATIVE_INFINITY?"dedentToRoot("+e(t.contents)+")":t.n<0?"dedent("+e(t.contents)+")":"root"===t.n.type?"markAsRoot("+e(t.contents)+")":"align("+JSON.stringify(t.n)+", "+e(t.contents)+")";if("if-break"===t.type)return "ifBreak("+e(t.breakContents)+(t.flatContents?", "+e(t.flatContents):"")+(t.groupId?(t.flatContents?"":', ""')+", { groupId: ".concat(r(t.groupId)," }"):"")+")";if("indent-if-break"===t.type){const n=[];t.negate&&n.push("negate: true"),t.groupId&&n.push("groupId: ".concat(r(t.groupId)));const o=n.length>0?", { ".concat(n.join(", ")," }"):"";return "indentIfBreak(".concat(e(t.contents)).concat(o,")")}if("group"===t.type){const n=[];t.break&&"propagated"!==t.break&&n.push("shouldBreak: true"),t.id&&n.push("id: ".concat(r(t.id)));const o=n.length>0?", { ".concat(n.join(", ")," }"):"";return t.expandedStates?"conditionalGroup([".concat(t.expandedStates.map((t=>e(t))).join(","),"]").concat(o,")"):"group(".concat(e(t.contents)).concat(o,")")}if("fill"===t.type)return "fill([".concat(t.parts.map((t=>e(t))).join(", "),"])");if("line-suffix"===t.type)return "lineSuffix("+e(t.contents)+")";if("line-suffix-boundary"===t.type)return "lineSuffixBoundary";if("label"===t.type)return "label(".concat(JSON.stringify(t.label),", ").concat(e(t.contents),")");throw new Error("Unknown doc type "+t.type)}(Kc(e));function r(e){if("symbol"!=typeof e)return JSON.stringify(String(e));if(e in t)return t[e];const r=String(e).slice(7,-1)||"symbol";for(let o=0;;o++){const i=r+(o>0?" #".concat(o):"");if(!n.has(i))return n.add(i),t[e]="Symbol.for(".concat(JSON.stringify(i),")")}}}},Zc={builders:Zi,printer:Jc,utils:Oc,debug:Qc},el=t(Object.freeze({__proto__:null,default:{}}));function tl(e,t){for(var n=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),n++):n&&(e.splice(r,1),n--);}if(t)for(;n--;n)e.unshift("..");return e}var nl=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,rl=function(e){return nl.exec(e).slice(1)};function ol(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var r=n>=0?arguments[n]:"/";if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(e=r+"/"+e,t="/"===r.charAt(0));}return e=tl(dl(e.split("/"),(function(e){return !!e})),!t).join("/"),(t?"/":"")+e||"."}function il(e){var t=ul(e),n="/"===hl(e,-1);return e=tl(dl(e.split("/"),(function(e){return !!e})),!t).join("/"),e||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e}function ul(e){return "/"===e.charAt(0)}function sl(){var e=Array.prototype.slice.call(arguments,0);return il(dl(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))}function al(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=ol(e).substr(1),t=ol(t).substr(1);for(var r=n(e.split("/")),o=n(t.split("/")),i=Math.min(r.length,o.length),u=i,s=0;s<i;s++)if(r[s]!==o[s]){u=s;break}var a=[];for(s=u;s<r.length;s++)a.push("..");return (a=a.concat(o.slice(u))).join("/")}function cl(e){var t=rl(e),n=t[0],r=t[1];return n||r?(r&&(r=r.substr(0,r.length-1)),n+r):"."}function ll(e,t){var n=rl(e)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n}function pl(e){return rl(e)[3]}var fl={extname:pl,basename:ll,dirname:cl,sep:"/",delimiter:":",relative:al,join:sl,isAbsolute:ul,normalize:il,resolve:ol};function dl(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}var hl="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)},gl=t(Object.freeze({__proto__:null,resolve:ol,normalize:il,isAbsolute:ul,join:sl,relative:al,sep:"/",delimiter:":",dirname:cl,basename:ll,extname:pl,default:fl})),ml=[],yl=[],Dl="undefined"!=typeof Uint8Array?Uint8Array:Array,El=!1;function Cl(){El=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)ml[t]=e[t],yl[e.charCodeAt(t)]=t;yl["-".charCodeAt(0)]=62,yl["_".charCodeAt(0)]=63;}function bl(e,t,n){for(var r,o,i=[],u=t;u<n;u+=3)r=(e[u]<<16)+(e[u+1]<<8)+e[u+2],i.push(ml[(o=r)>>18&63]+ml[o>>12&63]+ml[o>>6&63]+ml[63&o]);return i.join("")}function vl(e){var t;El||Cl();for(var n=e.length,r=n%3,o="",i=[],u=16383,s=0,a=n-r;s<a;s+=u)i.push(bl(e,s,s+u>a?a:s+u));return 1===r?(t=e[n-1],o+=ml[t>>2],o+=ml[t<<4&63],o+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],o+=ml[t>>10],o+=ml[t>>4&63],o+=ml[t<<2&63],o+="="),i.push(o),i.join("")}function Al(e,t,n,r,o){var i,u,s=8*o-r-1,a=(1<<s)-1,c=a>>1,l=-7,p=n?o-1:0,f=n?-1:1,d=e[t+p];for(p+=f,i=d&(1<<-l)-1,d>>=-l,l+=s;l>0;i=256*i+e[t+p],p+=f,l-=8);for(u=i&(1<<-l)-1,i>>=-l,l+=r;l>0;u=256*u+e[t+p],p+=f,l-=8);if(0===i)i=1-c;else {if(i===a)return u?NaN:1/0*(d?-1:1);u+=Math.pow(2,r),i-=c;}return (d?-1:1)*u*Math.pow(2,i-r)}function Fl(e,t,n,r,o,i){var u,s,a,c=8*i-o-1,l=(1<<c)-1,p=l>>1,f=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:i-1,h=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,u=l):(u=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-u))<1&&(u--,a*=2),(t+=u+p>=1?f/a:f*Math.pow(2,1-p))*a>=2&&(u++,a/=2),u+p>=l?(s=0,u=l):u+p>=1?(s=(t*a-1)*Math.pow(2,o),u+=p):(s=t*Math.pow(2,p-1)*Math.pow(2,o),u=0));o>=8;e[n+d]=255&s,d+=h,s/=256,o-=8);for(u=u<<o|s,c+=o;c>0;e[n+d]=255&u,d+=h,u/=256,c-=8);e[n+d-h]|=128*g;}var xl={}.toString,Sl=Array.isArray||function(e){return "[object Array]"==xl.call(e)};function wl(){return Bl.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Tl(e,t){if(wl()<t)throw new RangeError("Invalid typed array length");return Bl.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Bl.prototype:(null===e&&(e=new Bl(t)),e.length=t),e}function Bl(e,t,n){if(!(Bl.TYPED_ARRAY_SUPPORT||this instanceof Bl))return new Bl(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return Pl(this,e)}return Nl(this,e,t,n)}function Nl(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return "undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);Bl.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Bl.prototype:e=Ol(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!Bl.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|jl(t,n),o=(e=Tl(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(Ll(t)){var n=0|Il(t.length);return 0===(e=Tl(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return "number"!=typeof t.length||(r=t.length)!=r?Tl(e,0):Ol(e,t);if("Buffer"===t.type&&Sl(t.data))return Ol(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function kl(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function Pl(e,t){if(kl(t),e=Tl(e,t<0?0:0|Il(t)),!Bl.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function Ol(e,t){var n=t.length<0?0:0|Il(t.length);e=Tl(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function Il(e){if(e>=wl())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+wl().toString(16)+" bytes");return 0|e}function Ll(e){return !(null==e||!e._isBuffer)}function jl(e,t){if(Ll(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return cp(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return lp(e).length;default:if(r)return cp(e).length;t=(""+t).toLowerCase(),r=!0;}}function _l(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return "";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return "";if((n>>>=0)<=(t>>>=0))return "";for(e||(e="utf8");;)switch(e){case"hex":return Ql(this,t,n);case"utf8":case"utf-8":return Jl(this,t,n);case"ascii":return Yl(this,t,n);case"latin1":case"binary":return Kl(this,t,n);case"base64":return Hl(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Zl(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0;}}function Ml(e,t,n){var r=e[t];e[t]=e[n],e[n]=r;}function Rl(e,t,n,r,o){if(0===e.length)return -1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return -1;n=e.length-1;}else if(n<0){if(!o)return -1;n=0;}if("string"==typeof t&&(t=Bl.from(t,r)),Ll(t))return 0===t.length?-1:Vl(e,t,n,r,o);if("number"==typeof t)return t&=255,Bl.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):Vl(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function Vl(e,t,n,r,o){var i,u=1,s=e.length,a=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return -1;u=2,s/=2,a/=2,n/=2;}function c(e,t){return 1===u?e[t]:e.readUInt16BE(t*u)}if(o){var l=-1;for(i=n;i<s;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===a)return l*u}else -1!==l&&(i-=i-l),l=-1;}else for(n+a>s&&(n=s-a),i=n;i>=0;i--){for(var p=!0,f=0;f<a;f++)if(c(e,i+f)!==c(t,f)){p=!1;break}if(p)return i}return -1}function $l(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var u=0;u<r;++u){var s=parseInt(t.substr(2*u,2),16);if(isNaN(s))return u;e[n+u]=s;}return u}function Wl(e,t,n,r){return pp(cp(t,e.length-n),e,n,r)}function ql(e,t,n,r){return pp(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Ul(e,t,n,r){return ql(e,t,n,r)}function zl(e,t,n,r){return pp(lp(t),e,n,r)}function Gl(e,t,n,r){return pp(function(e,t){for(var n,r,o,i=[],u=0;u<e.length&&!((t-=2)<0);++u)r=(n=e.charCodeAt(u))>>8,o=n%256,i.push(o),i.push(r);return i}(t,e.length-n),e,n,r)}function Hl(e,t,n){return 0===t&&n===e.length?vl(e):vl(e.slice(t,n))}function Jl(e,t,n){n=Math.min(e.length,n);for(var r=[],o=t;o<n;){var i,u,s,a,c=e[o],l=null,p=c>239?4:c>223?3:c>191?2:1;if(o+p<=n)switch(p){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(a=(31&c)<<6|63&i)>127&&(l=a);break;case 3:i=e[o+1],u=e[o+2],128==(192&i)&&128==(192&u)&&(a=(15&c)<<12|(63&i)<<6|63&u)>2047&&(a<55296||a>57343)&&(l=a);break;case 4:i=e[o+1],u=e[o+2],s=e[o+3],128==(192&i)&&128==(192&u)&&128==(192&s)&&(a=(15&c)<<18|(63&i)<<12|(63&u)<<6|63&s)>65535&&a<1114112&&(l=a);}null===l?(l=65533,p=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),o+=p;}return function(e){var t=e.length;if(t<=Xl)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=Xl));return n}(r)}Bl.TYPED_ARRAY_SUPPORT=void 0===Ns.TYPED_ARRAY_SUPPORT||Ns.TYPED_ARRAY_SUPPORT,Bl.poolSize=8192,Bl._augment=function(e){return e.__proto__=Bl.prototype,e},Bl.from=function(e,t,n){return Nl(null,e,t,n)},Bl.TYPED_ARRAY_SUPPORT&&(Bl.prototype.__proto__=Uint8Array.prototype,Bl.__proto__=Uint8Array),Bl.alloc=function(e,t,n){return function(e,t,n,r){return kl(t),t<=0?Tl(e,t):void 0!==n?"string"==typeof r?Tl(e,t).fill(n,r):Tl(e,t).fill(n):Tl(e,t)}(null,e,t,n)},Bl.allocUnsafe=function(e){return Pl(null,e)},Bl.allocUnsafeSlow=function(e){return Pl(null,e)},Bl.isBuffer=fp,Bl.compare=function(e,t){if(!Ll(e)||!Ll(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,o=0,i=Math.min(n,r);o<i;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},Bl.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return !0;default:return !1}},Bl.concat=function(e,t){if(!Sl(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Bl.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=Bl.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var i=e[n];if(!Ll(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,o),o+=i.length;}return r},Bl.byteLength=jl,Bl.prototype._isBuffer=!0,Bl.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Ml(this,t,t+1);return this},Bl.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Ml(this,t,t+3),Ml(this,t+1,t+2);return this},Bl.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Ml(this,t,t+7),Ml(this,t+1,t+6),Ml(this,t+2,t+5),Ml(this,t+3,t+4);return this},Bl.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Jl(this,0,e):_l.apply(this,arguments)},Bl.prototype.equals=function(e){if(!Ll(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Bl.compare(this,e)},Bl.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Bl.prototype.compare=function(e,t,n,r,o){if(!Ll(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return -1;if(t>=n)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(r>>>=0),u=(n>>>=0)-(t>>>=0),s=Math.min(i,u),a=this.slice(r,o),c=e.slice(t,n),l=0;l<s;++l)if(a[l]!==c[l]){i=a[l],u=c[l];break}return i<u?-1:u<i?1:0},Bl.prototype.includes=function(e,t,n){return -1!==this.indexOf(e,t,n)},Bl.prototype.indexOf=function(e,t,n){return Rl(this,e,t,n,!0)},Bl.prototype.lastIndexOf=function(e,t,n){return Rl(this,e,t,n,!1)},Bl.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else {if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0);}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return $l(this,e,t,n);case"utf8":case"utf-8":return Wl(this,e,t,n);case"ascii":return ql(this,e,t,n);case"latin1":case"binary":return Ul(this,e,t,n);case"base64":return zl(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Gl(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0;}},Bl.prototype.toJSON=function(){return {type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Xl=4096;function Yl(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function Kl(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function Ql(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=ap(e[i]);return o}function Zl(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function ep(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function tp(e,t,n,r,o,i){if(!Ll(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function np(e,t,n,r){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-n,2);o<i;++o)e[n+o]=(t&255<<8*(r?o:1-o))>>>8*(r?o:1-o);}function rp(e,t,n,r){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-n,4);o<i;++o)e[n+o]=t>>>8*(r?o:3-o)&255;}function op(e,t,n,r,o,i){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function ip(e,t,n,r,o){return o||op(e,0,n,4),Fl(e,t,n,r,23,4),n+4}function up(e,t,n,r,o){return o||op(e,0,n,8),Fl(e,t,n,r,52,8),n+8}Bl.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),Bl.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=Bl.prototype;else {var o=t-e;n=new Bl(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e];}return n},Bl.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||ep(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},Bl.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||ep(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},Bl.prototype.readUInt8=function(e,t){return t||ep(e,1,this.length),this[e]},Bl.prototype.readUInt16LE=function(e,t){return t||ep(e,2,this.length),this[e]|this[e+1]<<8},Bl.prototype.readUInt16BE=function(e,t){return t||ep(e,2,this.length),this[e]<<8|this[e+1]},Bl.prototype.readUInt32LE=function(e,t){return t||ep(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Bl.prototype.readUInt32BE=function(e,t){return t||ep(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Bl.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||ep(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},Bl.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||ep(e,t,this.length);for(var r=t,o=1,i=this[e+--r];r>0&&(o*=256);)i+=this[e+--r]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},Bl.prototype.readInt8=function(e,t){return t||ep(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Bl.prototype.readInt16LE=function(e,t){t||ep(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Bl.prototype.readInt16BE=function(e,t){t||ep(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Bl.prototype.readInt32LE=function(e,t){return t||ep(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Bl.prototype.readInt32BE=function(e,t){return t||ep(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Bl.prototype.readFloatLE=function(e,t){return t||ep(e,4,this.length),Al(this,e,!0,23,4)},Bl.prototype.readFloatBE=function(e,t){return t||ep(e,4,this.length),Al(this,e,!1,23,4)},Bl.prototype.readDoubleLE=function(e,t){return t||ep(e,8,this.length),Al(this,e,!0,52,8)},Bl.prototype.readDoubleBE=function(e,t){return t||ep(e,8,this.length),Al(this,e,!1,52,8)},Bl.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||tp(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},Bl.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||tp(this,e,t,n,Math.pow(2,8*n)-1,0);var o=n-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+n},Bl.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,1,255,0),Bl.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Bl.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,2,65535,0),Bl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):np(this,e,t,!0),t+2},Bl.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,2,65535,0),Bl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):np(this,e,t,!1),t+2},Bl.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,4,4294967295,0),Bl.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):rp(this,e,t,!0),t+4},Bl.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,4,4294967295,0),Bl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):rp(this,e,t,!1),t+4},Bl.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);tp(this,e,t,n,o-1,-o);}var i=0,u=1,s=0;for(this[t]=255&e;++i<n&&(u*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/u>>0)-s&255;return t+n},Bl.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);tp(this,e,t,n,o-1,-o);}var i=n-1,u=1,s=0;for(this[t+i]=255&e;--i>=0&&(u*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/u>>0)-s&255;return t+n},Bl.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,1,127,-128),Bl.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Bl.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,2,32767,-32768),Bl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):np(this,e,t,!0),t+2},Bl.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,2,32767,-32768),Bl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):np(this,e,t,!1),t+2},Bl.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,4,2147483647,-2147483648),Bl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):rp(this,e,t,!0),t+4},Bl.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||tp(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Bl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):rp(this,e,t,!1),t+4},Bl.prototype.writeFloatLE=function(e,t,n){return ip(this,e,t,!0,n)},Bl.prototype.writeFloatBE=function(e,t,n){return ip(this,e,t,!1,n)},Bl.prototype.writeDoubleLE=function(e,t,n){return up(this,e,t,!0,n)},Bl.prototype.writeDoubleBE=function(e,t,n){return up(this,e,t,!1,n)},Bl.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o,i=r-n;if(this===e&&n<t&&t<r)for(o=i-1;o>=0;--o)e[o+t]=this[o+n];else if(i<1e3||!Bl.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},Bl.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o);}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Bl.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else "number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else {var u=Ll(e)?e:cp(new Bl(e,r).toString()),s=u.length;for(i=0;i<n-t;++i)this[i+t]=u[i%s];}return this};var sp=/[^+\/0-9A-Za-z-_]/g;function ap(e){return e<16?"0"+e.toString(16):e.toString(16)}function cp(e,t){var n;t=t||1/0;for(var r=e.length,o=null,i=[],u=0;u<r;++u){if((n=e.charCodeAt(u))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(u+1===r){(t-=3)>-1&&i.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320);}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;i.push(n);}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128);}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128);}else {if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128);}}return i}function lp(e){return function(e){var t,n,r,o,i,u;El||Cl();var s=e.length;if(s%4>0)throw new Error("Invalid string. Length must be a multiple of 4");i="="===e[s-2]?2:"="===e[s-1]?1:0,u=new Dl(3*s/4-i),r=i>0?s-4:s;var a=0;for(t=0,n=0;t<r;t+=4,n+=3)o=yl[e.charCodeAt(t)]<<18|yl[e.charCodeAt(t+1)]<<12|yl[e.charCodeAt(t+2)]<<6|yl[e.charCodeAt(t+3)],u[a++]=o>>16&255,u[a++]=o>>8&255,u[a++]=255&o;return 2===i?(o=yl[e.charCodeAt(t)]<<2|yl[e.charCodeAt(t+1)]>>4,u[a++]=255&o):1===i&&(o=yl[e.charCodeAt(t)]<<10|yl[e.charCodeAt(t+1)]<<4|yl[e.charCodeAt(t+2)]>>2,u[a++]=o>>8&255,u[a++]=255&o),u}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(sp,"")).length<2)return "";for(;e.length%4!=0;)e+="=";return e}(e))}function pp(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}function fp(e){return null!=e&&(!!e._isBuffer||dp(e)||function(e){return "function"==typeof e.readFloatLE&&"function"==typeof e.slice&&dp(e.slice(0,0))}(e))}function dp(e){return !!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}const hp=el;var gp=class{constructor(e,t){(t=t||{}).readChunk||(t.readChunk=1024),t.newLineCharacter?t.newLineCharacter=t.newLineCharacter.charCodeAt(0):t.newLineCharacter=10,this.fd="number"==typeof e?e:hp.openSync(e,"r"),this.options=t,this.newLineCharacter=t.newLineCharacter,this.reset();}_searchInBuffer(e,t){let n=-1;for(let r=0;r<=e.length;r++){if(e[r]===t){n=r;break}}return n}reset(){this.eofReached=!1,this.linesCache=[],this.fdPosition=0;}close(){hp.closeSync(this.fd),this.fd=null;}_extractLines(e){let t;const n=[];let r=0,o=0;for(;;){let i=e[r++];if(i===this.newLineCharacter)t=e.slice(o,r),n.push(t),o=r;else if(void 0===i)break}let i=e.slice(o,r);return i.length&&n.push(i),n}_readChunk(e){let t,n=0;const r=[];do{const e=new Bl(this.options.readChunk);t=hp.readSync(this.fd,e,0,this.options.readChunk,this.fdPosition),n+=t,this.fdPosition=this.fdPosition+t,r.push(e);}while(t&&-1===this._searchInBuffer(r[r.length-1],this.options.newLineCharacter));let o=Bl.concat(r);return t<this.options.readChunk&&(this.eofReached=!0,o=o.slice(0,n)),n&&(this.linesCache=this._extractLines(o),e&&(this.linesCache[0]=Bl.concat([e,this.linesCache[0]]))),n}next(){if(!this.fd)return !1;let e,t=!1;if(this.eofReached&&0===this.linesCache.length)return t;if(this.linesCache.length||(e=this._readChunk()),this.linesCache.length){t=this.linesCache.shift();t[t.length-1]!==this.newLineCharacter&&(e=this._readChunk(t),e&&(t=this.linesCache.shift()));}return this.eofReached&&0===this.linesCache.length&&this.close(),t&&t[t.length-1]===this.newLineCharacter&&(t=t.slice(0,t.length-1)),t}};class mp extends Error{}class yp extends Error{}class Dp extends Error{}class Ep extends Error{}var Cp={ConfigError:mp,DebugError:yp,UndefinedParserError:Dp,ArgExpansionBailout:Ep},bp={},vp=function(e,t){return vp=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t;}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);},vp(e,t)};var Ap=function(){return Ap=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Ap.apply(this,arguments)};function Fp(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return {next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function xp(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),u=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)u.push(r.value);}catch(e){o={error:e};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return u}function Sp(e){return this instanceof Sp?(this.v=e,this):new Sp(e)}var wp=Object.freeze({__proto__:null,__extends:function(e,t){function n(){this.constructor=e;}vp(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n);},get __assign(){return Ap},__rest:function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]]);}return n},__decorate:function(e,t,n,r){var o,i=arguments.length,u=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(u=(i<3?o(u):i>3?o(t,n,u):o(t,n))||u);return i>3&&u&&Object.defineProperty(t,n,u),u},__param:function(e,t){return function(n,r){t(n,r,e);}},__metadata:function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__awaiter:function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function u(e){try{a(r.next(e));}catch(e){i(e);}}function s(e){try{a(r.throw(e));}catch(e){i(e);}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t);}))).then(u,s);}a((r=r.apply(e,t||[])).next());}))},__generator:function(e,t){var n,r,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,r=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!(o=u.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=t.call(e,u);}catch(e){i=[6,e],r=0;}finally{n=o=0;}if(5&i[0])throw i[1];return {value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},__createBinding:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n];},__exportStar:function(e,t){for(var n in e)"default"===n||t.hasOwnProperty(n)||(t[n]=e[n]);},__values:Fp,__read:xp,__spread:function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(xp(arguments[t]));return e},__spreadArrays:function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],u=0,s=i.length;u<s;u++,o++)r[o]=i[u];return r},__await:Sp,__asyncGenerator:function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,o=n.apply(e,t||[]),i=[];return r={},u("next"),u("throw"),u("return"),r[Symbol.asyncIterator]=function(){return this},r;function u(e){o[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||s(e,t);}))});}function s(e,t){try{(n=o[e](t)).value instanceof Sp?Promise.resolve(n.value.v).then(a,c):l(i[0][2],n);}catch(e){l(i[0][3],e);}var n;}function a(e){s("next",e);}function c(e){s("throw",e);}function l(e,t){e(t),i.shift(),i.length&&s(i[0][0],i[0][1]);}},__asyncDelegator:function(e){var t,n;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,o){t[r]=e[r]?function(t){return (n=!n)?{value:Sp(e[r](t)),done:"return"===r}:o?o(t):t}:o;}},__asyncValues:function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=Fp(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){(function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n});}),t);})(r,o,(t=e[n](t)).done,t.value);}))};}},__makeTemplateObject:function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},__importStar:function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},__importDefault:function(e){return e&&e.__esModule?e:{default:e}},__classPrivateFieldGet:function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},__classPrivateFieldSet:function(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,n),n}}),Tp={},Bp={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.apiDescriptor={key:e=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)?e:JSON.stringify(e),value(t){if(null===t||"object"!=typeof t)return JSON.stringify(t);if(Array.isArray(t))return "[".concat(t.map((t=>e.apiDescriptor.value(t))).join(", "),"]");const n=Object.keys(t);return 0===n.length?"{}":"{ ".concat(n.map((n=>"".concat(e.apiDescriptor.key(n),": ").concat(e.apiDescriptor.value(t[n])))).join(", ")," }")},pair:t=>{let{key:n,value:r}=t;return e.apiDescriptor.value({[n]:r})}};}(Bp),function(e){Object.defineProperty(e,"__esModule",{value:!0});wp.__exportStar(Bp,e);}(Tp);var Np={},kp={},Pp={},Op={exports:{}},Ip=/[|\\{}()[\]^$+*?.]/g,Lp=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Ip,"\\$&")},jp={exports:{}},_p={exports:{}},Mp={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Rp={};for(var Vp in Mp)Mp.hasOwnProperty(Vp)&&(Rp[Mp[Vp]]=Vp);var $p=_p.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var Wp in $p)if($p.hasOwnProperty(Wp)){if(!("channels"in $p[Wp]))throw new Error("missing channels property: "+Wp);if(!("labels"in $p[Wp]))throw new Error("missing channel labels property: "+Wp);if($p[Wp].labels.length!==$p[Wp].channels)throw new Error("channel and label counts mismatch: "+Wp);var qp=$p[Wp].channels,Up=$p[Wp].labels;delete $p[Wp].channels,delete $p[Wp].labels,Object.defineProperty($p[Wp],"channels",{value:qp}),Object.defineProperty($p[Wp],"labels",{value:Up});}$p.rgb.hsl=function(e){var t,n,r=e[0]/255,o=e[1]/255,i=e[2]/255,u=Math.min(r,o,i),s=Math.max(r,o,i),a=s-u;return s===u?t=0:r===s?t=(o-i)/a:o===s?t=2+(i-r)/a:i===s&&(t=4+(r-o)/a),(t=Math.min(60*t,360))<0&&(t+=360),n=(u+s)/2,[t,100*(s===u?0:n<=.5?a/(s+u):a/(2-s-u)),100*n]},$p.rgb.hsv=function(e){var t,n,r,o,i,u=e[0]/255,s=e[1]/255,a=e[2]/255,c=Math.max(u,s,a),l=c-Math.min(u,s,a),p=function(e){return (c-e)/6/l+.5};return 0===l?o=i=0:(i=l/c,t=p(u),n=p(s),r=p(a),u===c?o=r-n:s===c?o=1/3+t-r:a===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},$p.rgb.hwb=function(e){var t=e[0],n=e[1],r=e[2];return [$p.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(n,r))),100*(r=1-1/255*Math.max(t,Math.max(n,r)))]},$p.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255;return [100*((1-n-(t=Math.min(1-n,1-r,1-o)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},$p.rgb.keyword=function(e){var t=Rp[e];if(t)return t;var n,r,o,i=1/0;for(var u in Mp)if(Mp.hasOwnProperty(u)){var s=Mp[u],a=(r=e,o=s,Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2)+Math.pow(r[2]-o[2],2));a<i&&(i=a,n=u);}return n},$p.keyword.rgb=function(e){return Mp[e]},$p.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return [100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},$p.rgb.lab=function(e){var t=$p.rgb.xyz(e),n=t[0],r=t[1],o=t[2];return r/=100,o/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(n-r),200*(r-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},$p.hsl.rgb=function(e){var t,n,r,o,i,u=e[0]/360,s=e[1]/100,a=e[2]/100;if(0===s)return [i=255*a,i,i];t=2*a-(n=a<.5?a*(1+s):a+s-a*s),o=[0,0,0];for(var c=0;c<3;c++)(r=u+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[c]=255*i;return o},$p.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,o=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,o*=i<=1?i:2-i,[t,100*(0===r?2*o/(i+o):2*n/(r+n)),100*((r+n)/2)]},$p.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,o=Math.floor(t)%6,i=t-Math.floor(t),u=255*r*(1-n),s=255*r*(1-n*i),a=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return [r,a,u];case 1:return [s,r,u];case 2:return [u,r,a];case 3:return [u,s,r];case 4:return [a,u,r];case 5:return [r,u,s]}},$p.hsv.hsl=function(e){var t,n,r,o=e[0],i=e[1]/100,u=e[2]/100,s=Math.max(u,.01);return r=(2-i)*u,n=i*s,[o,100*(n=(n/=(t=(2-i)*s)<=1?t:2-t)||0),100*(r/=2)]},$p.hwb.rgb=function(e){var t,n,r,o,i,u,s,a=e[0]/360,c=e[1]/100,l=e[2]/100,p=c+l;switch(p>1&&(c/=p,l/=p),r=6*a-(t=Math.floor(6*a)),0!=(1&t)&&(r=1-r),o=c+r*((n=1-l)-c),t){default:case 6:case 0:i=n,u=o,s=c;break;case 1:i=o,u=n,s=c;break;case 2:i=c,u=n,s=o;break;case 3:i=c,u=o,s=n;break;case 4:i=o,u=c,s=n;break;case 5:i=n,u=c,s=o;}return [255*i,255*u,255*s]},$p.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return [255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},$p.xyz.rgb=function(e){var t,n,r,o=e[0]/100,i=e[1]/100,u=e[2]/100;return n=-.9689*o+1.8758*i+.0415*u,r=.0557*o+-.204*i+1.057*u,t=(t=3.2406*o+-1.5372*i+-.4986*u)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},$p.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},$p.lab.xyz=function(e){var t,n,r,o=e[0];t=e[1]/500+(n=(o+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),u=Math.pow(t,3),s=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=u>.008856?u:(t-16/116)/7.787,r=s>.008856?s:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},$p.lab.lch=function(e){var t,n=e[0],r=e[1],o=e[2];return (t=360*Math.atan2(o,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+o*o),t]},$p.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},$p.rgb.ansi16=function(e){var t=e[0],n=e[1],r=e[2],o=1 in arguments?arguments[1]:$p.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var i=30+(Math.round(r/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===o&&(i+=60),i},$p.hsv.ansi16=function(e){return $p.rgb.ansi16($p.hsv.rgb(e),e[2])},$p.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},$p.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return [(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},$p.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return [t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},$p.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return "000000".substring(t.length)+t},$p.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return [0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return [r>>16&255,r>>8&255,255&r]},$p.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255,i=Math.max(Math.max(n,r),o),u=Math.min(Math.min(n,r),o),s=i-u;return t=s<=0?0:i===n?(r-o)/s%6:i===r?2+(o-n)/s:4+(n-r)/s+4,t/=6,[360*(t%=1),100*s,100*(s<1?u/(1-s):0)]},$p.hsl.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=1,o=0;return (r=n<.5?2*t*n:2*t*(1-n))<1&&(o=(n-.5*r)/(1-r)),[e[0],100*r,100*o]},$p.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},$p.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return [255*r,255*r,255*r];var o,i=[0,0,0],u=t%1*6,s=u%1,a=1-s;switch(Math.floor(u)){case 0:i[0]=1,i[1]=s,i[2]=0;break;case 1:i[0]=a,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=s;break;case 3:i[0]=0,i[1]=a,i[2]=1;break;case 4:i[0]=s,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=a;}return o=(1-n)*r,[255*(n*i[0]+o),255*(n*i[1]+o),255*(n*i[2]+o)]},$p.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},$p.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},$p.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return [e[0],100*(n-t),100*(1-n)]},$p.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},$p.apple.rgb=function(e){return [e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},$p.rgb.apple=function(e){return [e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},$p.gray.rgb=function(e){return [e[0]/100*255,e[0]/100*255,e[0]/100*255]},$p.gray.hsl=$p.gray.hsv=function(e){return [0,0,e[0]]},$p.gray.hwb=function(e){return [0,100,e[0]]},$p.gray.cmyk=function(e){return [0,0,0,e[0]]},$p.gray.lab=function(e){return [e[0],0,0]},$p.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return "000000".substring(n.length)+n},$p.rgb.gray=function(e){return [(e[0]+e[1]+e[2])/3/255*100]};var zp=_p.exports;function Gp(e){var t=function(){for(var e={},t=Object.keys(zp),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),o=Object.keys(zp[r]),i=o.length,u=0;u<i;u++){var s=o[u],a=t[s];-1===a.distance&&(a.distance=t[r].distance+1,a.parent=r,n.unshift(s));}return t}function Hp(e,t){return function(n){return t(e(n))}}function Jp(e,t){for(var n=[t[e].parent,e],r=zp[t[e].parent][e],o=t[e].parent;t[o].parent;)n.unshift(t[o].parent),r=Hp(zp[t[o].parent][o],r),o=t[o].parent;return r.conversion=n,r}var Xp=_p.exports,Yp=function(e){for(var t=Gp(e),n={},r=Object.keys(t),o=r.length,i=0;i<o;i++){var u=r[i];null!==t[u].parent&&(n[u]=Jp(u,t));}return n},Kp={};Object.keys(Xp).forEach((function(e){Kp[e]={},Object.defineProperty(Kp[e],"channels",{value:Xp[e].channels}),Object.defineProperty(Kp[e],"labels",{value:Xp[e].labels});var t=Yp(e);Object.keys(t).forEach((function(n){var r=t[n];Kp[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,o=0;o<r;o++)n[o]=Math.round(n[o]);return n};return "conversion"in e&&(t.conversion=e.conversion),t}(r),Kp[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return "conversion"in e&&(t.conversion=e.conversion),t}(r);}));}));var Qp,Zp=Kp;function ef(){if(void 0===Qp){var e=new ArrayBuffer(2),t=new Uint8Array(e),n=new Uint16Array(e);if(t[0]=1,t[1]=2,258===n[0])Qp="BE";else {if(513!==n[0])throw new Error("unable to figure out endianess");Qp="LE";}}return Qp}function tf(){return void 0!==Ns.location?Ns.location.hostname:""}function nf(){return []}function rf(){return 0}function of(){return Number.MAX_VALUE}function uf(){return Number.MAX_VALUE}function sf(){return []}function af(){return "Browser"}function cf(){return void 0!==Ns.navigator?Ns.navigator.appVersion:""}function lf(){}function pf(){}function ff(){return "javascript"}function df(){return "browser"}function hf(){return "/tmp"}!function(e){const t=Zp,n=(e,n)=>function(){const r=e.apply(t,arguments);return "\x1b[".concat(r+n,"m")},r=(e,n)=>function(){const r=e.apply(t,arguments);return "\x1b[".concat(38+n,";5;").concat(r,"m")},o=(e,n)=>function(){const r=e.apply(t,arguments);return "\x1b[".concat(38+n,";2;").concat(r[0],";").concat(r[1],";").concat(r[2],"m")};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,i={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};i.color.grey=i.color.gray;for(const t of Object.keys(i)){const n=i[t];for(const t of Object.keys(n)){const r=n[t];i[t]={open:"\x1b[".concat(r[0],"m"),close:"\x1b[".concat(r[1],"m")},n[t]=i[t],e.set(r[0],r[1]);}Object.defineProperty(i,t,{value:n,enumerable:!1}),Object.defineProperty(i,"codes",{value:e,enumerable:!1});}const u=e=>e,s=(e,t,n)=>[e,t,n];i.color.close="\x1b[39m",i.bgColor.close="\x1b[49m",i.color.ansi={ansi:n(u,0)},i.color.ansi256={ansi256:r(u,0)},i.color.ansi16m={rgb:o(s,0)},i.bgColor.ansi={ansi:n(u,10)},i.bgColor.ansi256={ansi256:r(u,10)},i.bgColor.ansi16m={rgb:o(s,10)};for(let e of Object.keys(t)){if("object"!=typeof t[e])continue;const u=t[e];"ansi16"===e&&(e="ansi"),"ansi16"in u&&(i.color.ansi[e]=n(u.ansi16,0),i.bgColor.ansi[e]=n(u.ansi16,10)),"ansi256"in u&&(i.color.ansi256[e]=r(u.ansi256,0),i.bgColor.ansi256[e]=r(u.ansi256,10)),"rgb"in u&&(i.color.ansi16m[e]=o(u.rgb,0),i.bgColor.ansi16m[e]=o(u.rgb,10));}return i}});}(jp);var gf=hf,mf={EOL:"\n",arch:ff,platform:df,tmpdir:gf,tmpDir:hf,networkInterfaces:lf,getNetworkInterfaces:pf,release:cf,type:af,cpus:sf,totalmem:uf,freemem:of,uptime:rf,loadavg:nf,hostname:tf,endianness:ef},yf=t(Object.freeze({__proto__:null,endianness:ef,hostname:tf,loadavg:nf,uptime:rf,freemem:of,totalmem:uf,cpus:sf,type:af,release:cf,networkInterfaces:lf,getNetworkInterfaces:pf,arch:ff,platform:df,tmpDir:hf,tmpdir:gf,EOL:"\n",default:mf}));const Ef=(e,t)=>{t=t||ta.argv;const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),o=t.indexOf("--");return -1!==r&&(-1===o||r<o)},Cf=ta.env;let bf;function vf(e){const t=function(e){if(!1===bf)return 0;if(Ef("color=16m")||Ef("color=full")||Ef("color=truecolor"))return 3;if(Ef("color=256"))return 2;if(e&&!e.isTTY&&!0!==bf)return 0;const t=bf?1:0;if("CI"in Cf)return ["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in Cf))||"codeship"===Cf.CI_NAME?1:t;if("TEAMCITY_VERSION"in Cf)return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Cf.TEAMCITY_VERSION)?1:0;if("truecolor"===Cf.COLORTERM)return 3;if("TERM_PROGRAM"in Cf){const e=parseInt((Cf.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(Cf.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return /-256(color)?$/i.test(Cf.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Cf.TERM)||"COLORTERM"in Cf?1:(Cf.TERM,t)}(e);return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(t)}Ef("no-color")||Ef("no-colors")||Ef("color=false")?bf=!1:(Ef("color")||Ef("colors")||Ef("color=true")||Ef("color=always"))&&(bf=!0),"FORCE_COLOR"in Cf&&(bf=0===Cf.FORCE_COLOR.length||0!==parseInt(Cf.FORCE_COLOR,10));var Af={supportsColor:vf,stdout:vf(ta.stdout),stderr:vf(ta.stderr)};const Ff=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,xf=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Sf=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,wf=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Tf=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e","\x1b"],["a","\x07"]]);function Bf(e){return "u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Tf.get(e)||e}function Nf(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r)if(isNaN(t)){if(!(o=t.match(Sf)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(wf,((e,t,n)=>t?Bf(t):n)));}else n.push(Number(t));return n}function kf(e){xf.lastIndex=0;const t=[];let n;for(;null!==(n=xf.exec(e));){const e=n[1];if(n[2]){const r=Nf(e,n[2]);t.push([e].concat(r));}else t.push([e]);}return t}function Pf(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e];}return r}var Of=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(Ff,((t,i,u,s,a,c)=>{if(i)o.push(Bf(i));else if(s){const t=o.join("");o=[],r.push(0===n.length?t:Pf(e,n)(t)),n.push({inverse:u,styles:kf(s)});}else if(a){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Pf(e,n)(o.join(""))),o=[],n.pop();}else o.push(c);})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")};!function(e){const t=Lp,n=jp.exports,r=Af.stdout,o=Of,u=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),a=Object.create(null);function c(e,t){t=t||{};const n=r?r.level:0;e.level=void 0===t.level?n:t.level,e.enabled="enabled"in t?t.enabled:e.level>0;}function l(e){if(!this||!(this instanceof l)||this.template){const t={};return c(t,e),t.template=function(){const e=[].slice.call(arguments);return h.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,l.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=l,t.template}c(this,e);}for(const e of Object.keys(n))n[e].closeRe=new RegExp(t(n[e].close),"g"),a[e]={get(){const t=n[e];return f.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};a.visible={get(){return f.call(this,this._styles||[],!0,"visible")}},n.color.closeRe=new RegExp(t(n.color.close),"g");for(const e of Object.keys(n.color.ansi))s.has(e)||(a[e]={get(){const t=this.level;return function(){const r=n.color[u[t]][e].apply(null,arguments),o={open:r,close:n.color.close,closeRe:n.color.closeRe};return f.call(this,this._styles?this._styles.concat(o):[o],this._empty,e)}}});n.bgColor.closeRe=new RegExp(t(n.bgColor.close),"g");for(const e of Object.keys(n.bgColor.ansi)){if(s.has(e))continue;a["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const r=n.bgColor[u[t]][e].apply(null,arguments),o={open:r,close:n.bgColor.close,closeRe:n.bgColor.closeRe};return f.call(this,this._styles?this._styles.concat(o):[o],this._empty,e)}}};}const p=Object.defineProperties((()=>{}),a);function f(e,t,n){const r=function(){return d.apply(r,arguments)};r._styles=e,r._empty=t;const o=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>o.level,set(e){o.level=e;}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>o.enabled,set(e){o.enabled=e;}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=p,r}function d(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return "";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const o=n.dim.open;for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return n.dim.open=o,r}function h(e,t){if(!Array.isArray(t))return [].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return o(e,r.join(""))}Object.defineProperties(l.prototype,a),e.exports=l(),e.exports.supportsColor=r,e.exports.default=e.exports;}(Op),Object.defineProperty(Pp,"__esModule",{value:!0});const If=Op.exports;Pp.commonDeprecatedHandler=(e,t,n)=>{let{descriptor:r}=n;const o=["".concat(If.default.yellow("string"==typeof e?r.key(e):r.pair(e))," is deprecated")];return t&&o.push("we now treat it as ".concat(If.default.blue("string"==typeof t?r.key(t):r.pair(t)))),o.join("; ")+"."},function(e){Object.defineProperty(e,"__esModule",{value:!0});wp.__exportStar(Pp,e);}(kp);var Lf={},jf={};Object.defineProperty(jf,"__esModule",{value:!0});const _f=Op.exports;jf.commonInvalidHandler=(e,t,n)=>["Invalid ".concat(_f.default.red(n.descriptor.key(e))," value."),"Expected ".concat(_f.default.blue(n.schemas[e].expected(n)),","),"but received ".concat(_f.default.red(n.descriptor.value(t)),".")].join(" "),function(e){Object.defineProperty(e,"__esModule",{value:!0});wp.__exportStar(jf,e);}(Lf);var Mf={},Rf={},Vf=[],$f=[];Object.defineProperty(Rf,"__esModule",{value:!0});const Wf=Op.exports,qf=function(e,t){if(e===t)return 0;var n=e;e.length>t.length&&(e=t,t=n);var r=e.length,o=t.length;if(0===r)return o;if(0===o)return r;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-o);)r--,o--;if(0===r)return o;for(var i,u,s,a,c=0;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(o-=c,0===(r-=c))return o;for(var l=0,p=0;l<r;)$f[c+l]=e.charCodeAt(c+l),Vf[l]=++l;for(;p<o;)for(i=t.charCodeAt(c+p),s=p++,u=p,l=0;l<r;l++)a=i===$f[c+l]?s:s+1,s=Vf[l],u=Vf[l]=s>u?a>u?u+1:a:a>s?s+1:a;return u};Rf.levenUnknownHandler=(e,t,n)=>{let{descriptor:r,logger:o,schemas:i}=n;const u=["Ignored unknown option ".concat(Wf.default.yellow(r.pair({key:e,value:t})),".")],s=Object.keys(i).sort().find((t=>qf(e,t)<3));s&&u.push("Did you mean ".concat(Wf.default.blue(r.key(s)),"?")),o.warn(u.join(" "));},function(e){Object.defineProperty(e,"__esModule",{value:!0});wp.__exportStar(Rf,e);}(Mf),function(e){Object.defineProperty(e,"__esModule",{value:!0});const t=wp;t.__exportStar(kp,e),t.__exportStar(Lf,e),t.__exportStar(Mf,e);}(Np);var Uf={},zf={},Gf={};Object.defineProperty(Gf,"__esModule",{value:!0});const Hf=["default","expected","validate","deprecated","forward","redirect","overlap","preprocess","postprocess"];function Jf(e,t){const n=new e(t),r=Object.create(n);for(const e of Hf)e in t&&(r[e]=Yf(t[e],n,Xf.prototype[e].length));return r}Gf.createSchema=Jf;class Xf{constructor(e){this.name=e.name;}static create(e){return Jf(this,e)}default(e){}expected(e){return "nothing"}validate(e,t){return !1}deprecated(e,t){return !1}forward(e,t){}redirect(e,t){}overlap(e,t,n){return e}preprocess(e,t){return e}postprocess(e,t){return e}}function Yf(e,t,n){return "function"==typeof e?function(){for(var r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];return e(...o.slice(0,n-1),t,...o.slice(n-1))}:()=>e}Gf.Schema=Xf,Object.defineProperty(zf,"__esModule",{value:!0});const Kf=Gf;class Qf extends Kf.Schema{constructor(e){super(e),this._sourceName=e.sourceName;}expected(e){return e.schemas[this._sourceName].expected(e)}validate(e,t){return t.schemas[this._sourceName].validate(e,t)}redirect(e,t){return this._sourceName}}zf.AliasSchema=Qf;var Zf={};Object.defineProperty(Zf,"__esModule",{value:!0});const ed=Gf;class td extends ed.Schema{expected(){return "anything"}validate(){return !0}}Zf.AnySchema=td;var nd={};Object.defineProperty(nd,"__esModule",{value:!0});const rd=wp,od=Gf;class id extends od.Schema{constructor(e){var{valueSchema:t,name:n=t.name}=e,r=rd.__rest(e,["valueSchema","name"]);super(Object.assign({},r,{name:n})),this._valueSchema=t;}expected(e){return "an array of ".concat(this._valueSchema.expected(e))}validate(e,t){if(!Array.isArray(e))return !1;const n=[];for(const r of e){const e=t.normalizeValidateResult(this._valueSchema.validate(r,t),r);!0!==e&&n.push(e.value);}return 0===n.length||{value:n}}deprecated(e,t){const n=[];for(const r of e){const e=t.normalizeDeprecatedResult(this._valueSchema.deprecated(r,t),r);!1!==e&&n.push(...e.map((e=>{let{value:t}=e;return {value:[t]}})));}return n}forward(e,t){const n=[];for(const r of e){const e=t.normalizeForwardResult(this._valueSchema.forward(r,t),r);n.push(...e.map(ud));}return n}redirect(e,t){const n=[],r=[];for(const o of e){const e=t.normalizeRedirectResult(this._valueSchema.redirect(o,t),o);"remain"in e&&n.push(e.remain),r.push(...e.redirect.map(ud));}return 0===n.length?{redirect:r}:{redirect:r,remain:n}}overlap(e,t){return e.concat(t)}}function ud(e){let{from:t,to:n}=e;return {from:[t],to:n}}nd.ArraySchema=id;var sd={};Object.defineProperty(sd,"__esModule",{value:!0});const ad=Gf;class cd extends ad.Schema{expected(){return "true or false"}validate(e){return "boolean"==typeof e}}sd.BooleanSchema=cd;var ld={},pd={};function fd(e,t){return "string"==typeof e||"key"in e?{from:t,to:e}:"from"in e?{from:e.from,to:e.to}:{from:t,to:e.to}}function dd(e,t){return void 0===e?[]:Array.isArray(e)?e.map((e=>fd(e,t))):[fd(e,t)]}Object.defineProperty(pd,"__esModule",{value:!0}),pd.recordFromArray=function(e,t){const n=Object.create(null);for(const r of e){const e=r[t];if(n[e])throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n[e]=r;}return n},pd.mapFromArray=function(e,t){const n=new Map;for(const r of e){const e=r[t];if(n.has(e))throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n.set(e,r);}return n},pd.createAutoChecklist=function(){const e=Object.create(null);return t=>{const n=JSON.stringify(t);return !!e[n]||(e[n]=!0,!1)}},pd.partition=function(e,t){const n=[],r=[];for(const o of e)t(o)?n.push(o):r.push(o);return [n,r]},pd.isInt=function(e){return e===Math.floor(e)},pd.comparePrimitive=function(e,t){if(e===t)return 0;const n=typeof e,r=typeof t,o=["undefined","object","boolean","number","string"];return n!==r?o.indexOf(n)-o.indexOf(r):"string"!==n?Number(e)-Number(t):e.localeCompare(t)},pd.normalizeDefaultResult=function(e){return void 0===e?{}:e},pd.normalizeValidateResult=function(e,t){return !0===e||(!1===e?{value:t}:e)},pd.normalizeDeprecatedResult=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return !1!==e&&(!0===e?!!n||[{value:t}]:"value"in e?[e]:0!==e.length&&e)},pd.normalizeTransferResult=fd,pd.normalizeForwardResult=dd,pd.normalizeRedirectResult=function(e,t){const n=dd("object"==typeof e&&"redirect"in e?e.redirect:e,t);return 0===n.length?{remain:t,redirect:n}:"object"==typeof e&&"remain"in e?{remain:e.remain,redirect:n}:{redirect:n}},Object.defineProperty(ld,"__esModule",{value:!0});const hd=Gf,gd=pd;class md extends hd.Schema{constructor(e){super(e),this._choices=gd.mapFromArray(e.choices.map((e=>e&&"object"==typeof e?e:{value:e})),"value");}expected(e){let{descriptor:t}=e;const n=Array.from(this._choices.keys()).map((e=>this._choices.get(e))).filter((e=>!e.deprecated)).map((e=>e.value)).sort(gd.comparePrimitive).map(t.value),r=n.slice(0,-2),o=n.slice(-2);return r.concat(o.join(" or ")).join(", ")}validate(e){return this._choices.has(e)}deprecated(e){const t=this._choices.get(e);return !(!t||!t.deprecated)&&{value:e}}forward(e){const t=this._choices.get(e);return t?t.forward:void 0}redirect(e){const t=this._choices.get(e);return t?t.redirect:void 0}}ld.ChoiceSchema=md;var yd={},Dd={};Object.defineProperty(Dd,"__esModule",{value:!0});const Ed=Gf;class Cd extends Ed.Schema{expected(){return "a number"}validate(e,t){return "number"==typeof e}}Dd.NumberSchema=Cd,Object.defineProperty(yd,"__esModule",{value:!0});const bd=pd,vd=Dd;class Ad extends vd.NumberSchema{expected(){return "an integer"}validate(e,t){return !0===t.normalizeValidateResult(super.validate(e,t),e)&&bd.isInt(e)}}yd.IntegerSchema=Ad;var Fd={};Object.defineProperty(Fd,"__esModule",{value:!0});const xd=Gf;class Sd extends xd.Schema{expected(){return "a string"}validate(e){return "string"==typeof e}}Fd.StringSchema=Sd,function(e){Object.defineProperty(e,"__esModule",{value:!0});const t=wp;t.__exportStar(zf,e),t.__exportStar(Zf,e),t.__exportStar(nd,e),t.__exportStar(sd,e),t.__exportStar(ld,e),t.__exportStar(yd,e),t.__exportStar(Dd,e),t.__exportStar(Fd,e);}(Uf);var wd={},Td={};Object.defineProperty(Td,"__esModule",{value:!0});const Bd=Bp,Nd=Pp,kd=Lf,Pd=Rf;Td.defaultDescriptor=Bd.apiDescriptor,Td.defaultUnknownHandler=Pd.levenUnknownHandler,Td.defaultInvalidHandler=kd.commonInvalidHandler,Td.defaultDeprecatedHandler=Nd.commonDeprecatedHandler,Object.defineProperty(wd,"__esModule",{value:!0});const Od=Td,Id=pd;wd.normalize=(e,t,n)=>new Ld(t,n).normalize(e);class Ld{constructor(e,t){const{logger:n=console,descriptor:r=Od.defaultDescriptor,unknown:o=Od.defaultUnknownHandler,invalid:i=Od.defaultInvalidHandler,deprecated:u=Od.defaultDeprecatedHandler}=t||{};this._utils={descriptor:r,logger:n||{warn:()=>{}},schemas:Id.recordFromArray(e,"name"),normalizeDefaultResult:Id.normalizeDefaultResult,normalizeDeprecatedResult:Id.normalizeDeprecatedResult,normalizeForwardResult:Id.normalizeForwardResult,normalizeRedirectResult:Id.normalizeRedirectResult,normalizeValidateResult:Id.normalizeValidateResult},this._unknownHandler=o,this._invalidHandler=i,this._deprecatedHandler=u,this.cleanHistory();}cleanHistory(){this._hasDeprecationWarned=Id.createAutoChecklist();}normalize(e){const t={},n=[e],r=()=>{for(;0!==n.length;){const e=n.shift(),r=this._applyNormalization(e,t);n.push(...r);}};r();for(const e of Object.keys(this._utils.schemas)){const r=this._utils.schemas[e];if(!(e in t)){const t=Id.normalizeDefaultResult(r.default(this._utils));"value"in t&&n.push({[e]:t.value});}}r();for(const e of Object.keys(this._utils.schemas)){const n=this._utils.schemas[e];e in t&&(t[e]=n.postprocess(t[e],this._utils));}return t}_applyNormalization(e,t){const n=[],[r,o]=Id.partition(Object.keys(e),(e=>e in this._utils.schemas));for(const o of r){const r=this._utils.schemas[o],i=r.preprocess(e[o],this._utils),u=Id.normalizeValidateResult(r.validate(i,this._utils),i);if(!0!==u){const{value:e}=u,t=this._invalidHandler(o,e,this._utils);throw "string"==typeof t?new Error(t):t}const s=e=>{let{from:t,to:r}=e;n.push("string"==typeof r?{[r]:t}:{[r.key]:r.value});},a=e=>{let{value:t,redirectTo:n}=e;const u=Id.normalizeDeprecatedResult(r.deprecated(t,this._utils),i,!0);if(!1!==u)if(!0===u)this._hasDeprecationWarned(o)||this._utils.logger.warn(this._deprecatedHandler(o,n,this._utils));else for(const{value:e}of u){const t={key:o,value:e};if(!this._hasDeprecationWarned(t)){const r="string"==typeof n?{key:n,value:e}:n;this._utils.logger.warn(this._deprecatedHandler(t,r,this._utils));}}};Id.normalizeForwardResult(r.forward(i,this._utils),i).forEach(s);const c=Id.normalizeRedirectResult(r.redirect(i,this._utils),i);if(c.redirect.forEach(s),"remain"in c){const e=c.remain;t[o]=o in t?r.overlap(t[o],e,this._utils):e,a({value:e});}for(const{from:e,to:t}of c.redirect)a({value:e,redirectTo:t});}for(const r of o){const o=e[r],i=this._unknownHandler(r,o,this._utils);if(i)for(const e of Object.keys(i)){const r={[e]:i[e]};e in this._utils.schemas?n.push(r):Object.assign(t,r);}}return n}}wd.Normalizer=Ld,function(e){Object.defineProperty(e,"__esModule",{value:!0});const t=wp;t.__exportStar(Tp,e),t.__exportStar(Np,e),t.__exportStar(Uf,e),t.__exportStar(wd,e),t.__exportStar(Gf,e);}(bp);var jd={exports:{}};const _d=[],Md=[],Rd=(e,t)=>{if(e===t)return 0;const n=e;e.length>t.length&&(e=t,t=n);let r=e.length,o=t.length;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-o);)r--,o--;let i,u,s,a,c=0;for(;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(r-=c,o-=c,0===r)return o;let l=0,p=0;for(;l<r;)Md[l]=e.charCodeAt(c+l),_d[l]=++l;for(;p<o;)for(i=t.charCodeAt(c+p),s=p++,u=p,l=0;l<r;l++)a=i===Md[l]?s:s+1,s=_d[l],u=_d[l]=s>u?a>u?u+1:a:a>s?s+1:a;return u};jd.exports=Rd,jd.exports.default=Rd;var Vd={exports:{}};const $d={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Wd={};for(const e of Object.keys($d))Wd[$d[e]]=e;const qd={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var Ud=qd;for(const e of Object.keys(qd)){if(!("channels"in qd[e]))throw new Error("missing channels property: "+e);if(!("labels"in qd[e]))throw new Error("missing channel labels property: "+e);if(qd[e].labels.length!==qd[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:t,labels:n}=qd[e];delete qd[e].channels,delete qd[e].labels,Object.defineProperty(qd[e],"channels",{value:t}),Object.defineProperty(qd[e],"labels",{value:n});}qd.rgb.hsl=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.min(t,n,r),i=Math.max(t,n,r),u=i-o;let s,a;i===o?s=0:t===i?s=(n-r)/u:n===i?s=2+(r-t)/u:r===i&&(s=4+(t-n)/u),s=Math.min(60*s,360),s<0&&(s+=360);const c=(o+i)/2;return a=i===o?0:c<=.5?u/(i+o):u/(2-i-o),[s,100*a,100*c]},qd.rgb.hsv=function(e){let t,n,r,o,i;const u=e[0]/255,s=e[1]/255,a=e[2]/255,c=Math.max(u,s,a),l=c-Math.min(u,s,a),p=function(e){return (c-e)/6/l+.5};return 0===l?(o=0,i=0):(i=l/c,t=p(u),n=p(s),r=p(a),u===c?o=r-n:s===c?o=1/3+t-r:a===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},qd.rgb.hwb=function(e){const t=e[0],n=e[1];let r=e[2];const o=qd.rgb.hsl(e)[0],i=1/255*Math.min(t,Math.min(n,r));return r=1-1/255*Math.max(t,Math.max(n,r)),[o,100*i,100*r]},qd.rgb.cmyk=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.min(1-t,1-n,1-r);return [100*((1-t-o)/(1-o)||0),100*((1-n-o)/(1-o)||0),100*((1-r-o)/(1-o)||0),100*o]},qd.rgb.keyword=function(e){const t=Wd[e];if(t)return t;let n,r=1/0;for(const t of Object.keys($d)){const u=(i=$d[t],((o=e)[0]-i[0])**2+(o[1]-i[1])**2+(o[2]-i[2])**2);u<r&&(r=u,n=t);}var o,i;return n},qd.keyword.rgb=function(e){return $d[e]},qd.rgb.xyz=function(e){let t=e[0]/255,n=e[1]/255,r=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,n=n>.04045?((n+.055)/1.055)**2.4:n/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;return [100*(.4124*t+.3576*n+.1805*r),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},qd.rgb.lab=function(e){const t=qd.rgb.xyz(e);let n=t[0],r=t[1],o=t[2];n/=95.047,r/=100,o/=108.883,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,o=o>.008856?o**(1/3):7.787*o+16/116;return [116*r-16,500*(n-r),200*(r-o)]},qd.hsl.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;let o,i,u;if(0===n)return u=255*r,[u,u,u];o=r<.5?r*(1+n):r+n-r*n;const s=2*r-o,a=[0,0,0];for(let e=0;e<3;e++)i=t+1/3*-(e-1),i<0&&i++,i>1&&i--,u=6*i<1?s+6*(o-s)*i:2*i<1?o:3*i<2?s+(o-s)*(2/3-i)*6:s,a[e]=255*u;return a},qd.hsl.hsv=function(e){const t=e[0];let n=e[1]/100,r=e[2]/100,o=n;const i=Math.max(r,.01);r*=2,n*=r<=1?r:2-r,o*=i<=1?i:2-i;return [t,100*(0===r?2*o/(i+o):2*n/(r+n)),100*((r+n)/2)]},qd.hsv.rgb=function(e){const t=e[0]/60,n=e[1]/100;let r=e[2]/100;const o=Math.floor(t)%6,i=t-Math.floor(t),u=255*r*(1-n),s=255*r*(1-n*i),a=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return [r,a,u];case 1:return [s,r,u];case 2:return [u,r,a];case 3:return [u,s,r];case 4:return [a,u,r];case 5:return [r,u,s]}},qd.hsv.hsl=function(e){const t=e[0],n=e[1]/100,r=e[2]/100,o=Math.max(r,.01);let i,u;u=(2-n)*r;const s=(2-n)*o;return i=n*o,i/=s<=1?s:2-s,i=i||0,u/=2,[t,100*i,100*u]},qd.hwb.rgb=function(e){const t=e[0]/360;let n=e[1]/100,r=e[2]/100;const o=n+r;let i;o>1&&(n/=o,r/=o);const u=Math.floor(6*t),s=1-r;i=6*t-u,0!=(1&u)&&(i=1-i);const a=n+i*(s-n);let c,l,p;switch(u){default:case 6:case 0:c=s,l=a,p=n;break;case 1:c=a,l=s,p=n;break;case 2:c=n,l=s,p=a;break;case 3:c=n,l=a,p=s;break;case 4:c=a,l=n,p=s;break;case 5:c=s,l=n,p=a;}return [255*c,255*l,255*p]},qd.cmyk.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return [255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},qd.xyz.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100;let o,i,u;return o=3.2406*t+-1.5372*n+-.4986*r,i=-.9689*t+1.8758*n+.0415*r,u=.0557*t+-.204*n+1.057*r,o=o>.0031308?1.055*o**(1/2.4)-.055:12.92*o,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,u=u>.0031308?1.055*u**(1/2.4)-.055:12.92*u,o=Math.min(Math.max(0,o),1),i=Math.min(Math.max(0,i),1),u=Math.min(Math.max(0,u),1),[255*o,255*i,255*u]},qd.xyz.lab=function(e){let t=e[0],n=e[1],r=e[2];t/=95.047,n/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;return [116*n-16,500*(t-n),200*(n-r)]},qd.lab.xyz=function(e){let t,n,r;n=(e[0]+16)/116,t=e[1]/500+n,r=n-e[2]/200;const o=n**3,i=t**3,u=r**3;return n=o>.008856?o:(n-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,r=u>.008856?u:(r-16/116)/7.787,t*=95.047,n*=100,r*=108.883,[t,n,r]},qd.lab.lch=function(e){const t=e[0],n=e[1],r=e[2];let o;o=360*Math.atan2(r,n)/2/Math.PI,o<0&&(o+=360);return [t,Math.sqrt(n*n+r*r),o]},qd.lch.lab=function(e){const t=e[0],n=e[1],r=e[2]/360*2*Math.PI;return [t,n*Math.cos(r),n*Math.sin(r)]},qd.rgb.ansi16=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const[n,r,o]=e;let i=null===t?qd.rgb.hsv(e)[2]:t;if(i=Math.round(i/50),0===i)return 30;let u=30+(Math.round(o/255)<<2|Math.round(r/255)<<1|Math.round(n/255));return 2===i&&(u+=60),u},qd.hsv.ansi16=function(e){return qd.rgb.ansi16(qd.hsv.rgb(e),e[2])},qd.rgb.ansi256=function(e){const t=e[0],n=e[1],r=e[2];if(t===n&&n===r)return t<8?16:t>248?231:Math.round((t-8)/247*24)+232;return 16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},qd.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const n=.5*(1+~~(e>50));return [(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},qd.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return [t,t,t]}let t;e-=16;return [Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},qd.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return "000000".substring(t.length)+t},qd.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return [0,0,0];let n=t[0];3===t[0].length&&(n=n.split("").map((e=>e+e)).join(""));const r=parseInt(n,16);return [r>>16&255,r>>8&255,255&r]},qd.rgb.hcg=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.max(Math.max(t,n),r),i=Math.min(Math.min(t,n),r),u=o-i;let s,a;return s=u<1?i/(1-u):0,a=u<=0?0:o===t?(n-r)/u%6:o===n?2+(r-t)/u:4+(t-n)/u,a/=6,a%=1,[360*a,100*u,100*s]},qd.hsl.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=n<.5?2*t*n:2*t*(1-n);let o=0;return r<1&&(o=(n-.5*r)/(1-r)),[e[0],100*r,100*o]},qd.hsv.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=t*n;let o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},qd.hcg.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return [255*r,255*r,255*r];const o=[0,0,0],i=t%1*6,u=i%1,s=1-u;let a=0;switch(Math.floor(i)){case 0:o[0]=1,o[1]=u,o[2]=0;break;case 1:o[0]=s,o[1]=1,o[2]=0;break;case 2:o[0]=0,o[1]=1,o[2]=u;break;case 3:o[0]=0,o[1]=s,o[2]=1;break;case 4:o[0]=u,o[1]=0,o[2]=1;break;default:o[0]=1,o[1]=0,o[2]=s;}return a=(1-n)*r,[255*(n*o[0]+a),255*(n*o[1]+a),255*(n*o[2]+a)]},qd.hcg.hsv=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);let r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},qd.hcg.hsl=function(e){const t=e[1]/100,n=e[2]/100*(1-t)+.5*t;let r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},qd.hcg.hwb=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);return [e[0],100*(n-t),100*(1-n)]},qd.hwb.hcg=function(e){const t=e[1]/100,n=1-e[2]/100,r=n-t;let o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},qd.apple.rgb=function(e){return [e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},qd.rgb.apple=function(e){return [e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},qd.gray.rgb=function(e){return [e[0]/100*255,e[0]/100*255,e[0]/100*255]},qd.gray.hsl=function(e){return [0,0,e[0]]},qd.gray.hsv=qd.gray.hsl,qd.gray.hwb=function(e){return [0,100,e[0]]},qd.gray.cmyk=function(e){return [0,0,0,e[0]]},qd.gray.lab=function(e){return [e[0],0,0]},qd.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return "000000".substring(n.length)+n},qd.rgb.gray=function(e){return [(e[0]+e[1]+e[2])/3/255*100]};const zd=Ud;function Gd(e){const t=function(){const e={},t=Object.keys(zd);for(let n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;){const e=n.pop(),r=Object.keys(zd[e]);for(let o=r.length,i=0;i<o;i++){const o=r[i],u=t[o];-1===u.distance&&(u.distance=t[e].distance+1,u.parent=e,n.unshift(o));}}return t}function Hd(e,t){return function(n){return t(e(n))}}function Jd(e,t){const n=[t[e].parent,e];let r=zd[t[e].parent][e],o=t[e].parent;for(;t[o].parent;)n.unshift(t[o].parent),r=Hd(zd[t[o].parent][o],r),o=t[o].parent;return r.conversion=n,r}const Xd=Ud,Yd=function(e){const t=Gd(e),n={},r=Object.keys(t);for(let e=r.length,o=0;o<e;o++){const e=r[o];null!==t[e].parent&&(n[e]=Jd(e,t));}return n},Kd={};Object.keys(Xd).forEach((e=>{Kd[e]={},Object.defineProperty(Kd[e],"channels",{value:Xd[e].channels}),Object.defineProperty(Kd[e],"labels",{value:Xd[e].labels});const t=Yd(e);Object.keys(t).forEach((n=>{const r=t[n];Kd[e][n]=function(e){const t=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];const o=n[0];if(null==o)return o;o.length>1&&(n=o);const i=e(n);if("object"==typeof i)for(let e=i.length,t=0;t<e;t++)i[t]=Math.round(i[t]);return i};return "conversion"in e&&(t.conversion=e.conversion),t}(r),Kd[e][n].raw=function(e){const t=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];const o=n[0];return null==o?o:(o.length>1&&(n=o),e(n))};return "conversion"in e&&(t.conversion=e.conversion),t}(r);}));}));var Qd=Kd;function Zd(){return !1}function eh(){throw new Error("tty.ReadStream is not implemented")}function th(){throw new Error("tty.ReadStream is not implemented")}!function(e){const t=(e,t)=>function(){const n=e(...arguments);return "\x1b[".concat(n+t,"m")},n=(e,t)=>function(){const n=e(...arguments);return "\x1b[".concat(38+t,";5;").concat(n,"m")},r=(e,t)=>function(){const n=e(...arguments);return "\x1b[".concat(38+t,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")},o=e=>e,i=(e,t,n)=>[e,t,n],u=(e,t,n)=>{Object.defineProperty(e,t,{get:()=>{const r=n();return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0}),r},enumerable:!0,configurable:!0});};let s;const a=(e,t,n,r)=>{void 0===s&&(s=Qd);const o=r?10:0,i={};for(const[r,u]of Object.entries(s)){const s="ansi16"===r?"ansi":r;r===t?i[s]=e(n,o):"object"==typeof u&&(i[s]=e(u[t],o));}return i};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,s={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};s.color.gray=s.color.blackBright,s.bgColor.bgGray=s.bgColor.bgBlackBright,s.color.grey=s.color.blackBright,s.bgColor.bgGrey=s.bgColor.bgBlackBright;for(const[t,n]of Object.entries(s)){for(const[t,r]of Object.entries(n))s[t]={open:"\x1b[".concat(r[0],"m"),close:"\x1b[".concat(r[1],"m")},n[t]=s[t],e.set(r[0],r[1]);Object.defineProperty(s,t,{value:n,enumerable:!1});}return Object.defineProperty(s,"codes",{value:e,enumerable:!1}),s.color.close="\x1b[39m",s.bgColor.close="\x1b[49m",u(s.color,"ansi",(()=>a(t,"ansi16",o,!1))),u(s.color,"ansi256",(()=>a(n,"ansi256",o,!1))),u(s.color,"ansi16m",(()=>a(r,"rgb",i,!1))),u(s.bgColor,"ansi",(()=>a(t,"ansi16",o,!0))),u(s.bgColor,"ansi256",(()=>a(n,"ansi256",o,!0))),u(s.bgColor,"ansi16m",(()=>a(r,"rgb",i,!0))),s}});}(Vd);var nh={isatty:Zd,ReadStream:eh,WriteStream:th};const oh=t(Object.freeze({__proto__:null,isatty:Zd,ReadStream:eh,WriteStream:th,default:nh})),ih=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ta.argv;const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),o=t.indexOf("--");return -1!==r&&(-1===o||r<o)},{env:uh}=ta;let sh;function ah(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function ch(e,t){if(0===sh)return 0;if(ih("color=16m")||ih("color=full")||ih("color=truecolor"))return 3;if(ih("color=256"))return 2;if(e&&!t&&void 0===sh)return 0;const n=sh||0;if("dumb"===uh.TERM)return n;if("CI"in uh)return ["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in uh))||"codeship"===uh.CI_NAME?1:n;if("TEAMCITY_VERSION"in uh)return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(uh.TEAMCITY_VERSION)?1:0;if("truecolor"===uh.COLORTERM)return 3;if("TERM_PROGRAM"in uh){const e=parseInt((uh.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(uh.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return /-256(color)?$/i.test(uh.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(uh.TERM)||"COLORTERM"in uh?1:n}ih("no-color")||ih("no-colors")||ih("color=false")||ih("color=never")?sh=0:(ih("color")||ih("colors")||ih("color=true")||ih("color=always"))&&(sh=1),"FORCE_COLOR"in uh&&(sh="true"===uh.FORCE_COLOR?1:"false"===uh.FORCE_COLOR?0:0===uh.FORCE_COLOR.length?1:Math.min(parseInt(uh.FORCE_COLOR,10),3));var lh={supportsColor:function(e){return ah(ch(e,e&&e.isTTY))},stdout:ah(ch(!0,oh.isatty(1))),stderr:ah(ch(!0,oh.isatty(2)))};var ph={stringReplaceAll:(e,t,n)=>{let r=e.indexOf(t);if(-1===r)return e;const o=t.length;let i=0,u="";do{u+=e.substr(i,r-i)+t+n,i=r+o,r=e.indexOf(t,i);}while(-1!==r);return u+=e.substr(i),u},stringEncaseCRLFWithFirstIndex:(e,t,n,r)=>{let o=0,i="";do{const u="\r"===e[r-1];i+=e.substr(o,(u?r-1:r)-o)+t+(u?"\r\n":"\n")+n,o=r+1,r=e.indexOf("\n",o);}while(-1!==r);return i+=e.substr(o),i}};const fh=/(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,dh=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,hh=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,gh=/\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,mh=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e","\x1b"],["a","\x07"]]);function yh(e){const t="u"===e[0],n="{"===e[1];return t&&!n&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):t&&n?String.fromCodePoint(parseInt(e.slice(2,-1),16)):mh.get(e)||e}function Dh(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r){const r=Number(t);if(Number.isNaN(r)){if(!(o=t.match(hh)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(gh,((e,t,n)=>t?yh(t):n)));}else n.push(r);}return n}function Eh(e){dh.lastIndex=0;const t=[];let n;for(;null!==(n=dh.exec(e));){const e=n[1];if(n[2]){const r=Dh(e,n[2]);t.push([e].concat(r));}else t.push([e]);}return t}function Ch(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const[e,t]of Object.entries(n))if(Array.isArray(t)){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=t.length>0?r[e](...t):r[e];}return r}var bh=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(fh,((t,i,u,s,a,c)=>{if(i)o.push(yh(i));else if(s){const t=o.join("");o=[],r.push(0===n.length?t:Ch(e,n)(t)),n.push({inverse:u,styles:Eh(s)});}else if(a){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Ch(e,n)(o.join(""))),o=[],n.pop();}else o.push(c);})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")};const vh=Vd.exports,{stdout:Ah,stderr:Fh}=lh,{stringReplaceAll:xh,stringEncaseCRLFWithFirstIndex:Sh}=ph,{isArray:wh}=Array,Th=["ansi","ansi","ansi256","ansi16m"],Bh=Object.create(null);class Nh{constructor(e){return kh(e)}}const kh=e=>{const t={};return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const n=Ah?Ah.level:0;e.level=void 0===t.level?n:t.level;}(t,e),t.template=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return Rh(t.template,...n)},Object.setPrototypeOf(t,Ph.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},t.template.Instance=Nh,t.template};function Ph(e){return kh(e)}for(const[e,t]of Object.entries(vh))Bh[e]={get(){const n=jh(this,Lh(t.open,t.close,this._styler),this._isEmpty);return Object.defineProperty(this,e,{value:n}),n}};Bh.visible={get(){const e=jh(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:e}),e}};const Oh=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(const e of Oh)Bh[e]={get(){const{level:t}=this;return function(){const n=Lh(vh.color[Th[t]][e](...arguments),vh.color.close,this._styler);return jh(this,n,this._isEmpty)}}};for(const e of Oh){Bh["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const{level:t}=this;return function(){const n=Lh(vh.bgColor[Th[t]][e](...arguments),vh.bgColor.close,this._styler);return jh(this,n,this._isEmpty)}}};}const Ih=Object.defineProperties((()=>{}),Object.assign(Object.assign({},Bh),{},{level:{enumerable:!0,get(){return this._generator.level},set(e){this._generator.level=e;}}})),Lh=(e,t,n)=>{let r,o;return void 0===n?(r=e,o=t):(r=n.openAll+e,o=t+n.closeAll),{open:e,close:t,openAll:r,closeAll:o,parent:n}},jh=(e,t,n)=>{const r=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return wh(t[0])&&wh(t[0].raw)?_h(r,Rh(r,...t)):_h(r,1===t.length?""+t[0]:t.join(" "))};return Object.setPrototypeOf(r,Ih),r._generator=e,r._styler=t,r._isEmpty=n,r},_h=(e,t)=>{if(e.level<=0||!t)return e._isEmpty?"":t;let n=e._styler;if(void 0===n)return t;const{openAll:r,closeAll:o}=n;if(-1!==t.indexOf("\x1b"))for(;void 0!==n;)t=xh(t,n.close,n.open),n=n.parent;const i=t.indexOf("\n");return -1!==i&&(t=Sh(t,o,r,i)),r+t+o};let Mh;const Rh=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const[o]=n;if(!wh(o)||!wh(o.raw))return n.join(" ");const i=n.slice(1),u=[o.raw[0]];for(let e=1;e<o.length;e++)u.push(String(i[e-1]).replace(/[{}\\]/g,"\\$&"),String(o.raw[e]));return void 0===Mh&&(Mh=bh),Mh(e,u.join(""))};Object.defineProperties(Ph.prototype,Bh);const Vh=Ph();Vh.supportsColor=Ah,Vh.stderr=Ph({level:Fh?Fh.level:0}),Vh.stderr.supportsColor=Fh;var $h=Vh;const Wh=["_"],qh=bp,Uh=jd.exports,zh=$h,Gh=au,Hh={key:e=>1===e.length?"-".concat(e):"--".concat(e),value:e=>qh.apiDescriptor.value(e),pair:e=>{let{key:t,value:n}=e;return !1===n?"--no-".concat(t):!0===n?Hh.key(t):""===n?"".concat(Hh.key(t)," without an argument"):"".concat(Hh.key(t),"=").concat(n)}};class Jh extends qh.ChoiceSchema{constructor(e){let{name:t,flags:n}=e;super({name:t,choices:n}),this._flags=[...n].sort();}preprocess(e,t){if("string"==typeof e&&e.length>0&&!this._flags.includes(e)){const n=this._flags.find((t=>Uh(t,e)<3));if(n)return t.logger.warn(["Unknown flag ".concat(zh.yellow(t.descriptor.value(e)),","),"did you mean ".concat(zh.blue(t.descriptor.value(n)),"?")].join(" ")),n}return e}expected(){return "a flag"}}let Xh;function Yh(e,t){let{logger:n,isCLI:r=!1,passThrough:o=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=o?Array.isArray(o)?(e,t)=>o.includes(e)?{[e]:t}:void 0:(e,t)=>({[e]:t}):(e,t,n)=>{const r=cu(n.schemas,Wh);return qh.levenUnknownHandler(e,t,Object.assign(Object.assign({},n),{},{schemas:r}))},u=r?Hh:qh.apiDescriptor,s=Kh(t,{isCLI:r}),a=new qh.Normalizer(s,{logger:n,unknown:i,descriptor:u}),c=!1!==n;c&&Xh&&(a._hasDeprecationWarned=Xh);const l=a.normalize(e);return c&&(Xh=a._hasDeprecationWarned),l}function Kh(e,t){let{isCLI:n}=t;const r=[];n&&r.push(qh.AnySchema.create({name:"_"}));for(const t of e)r.push(Qh(t,{isCLI:n,optionInfos:e})),t.alias&&n&&r.push(qh.AliasSchema.create({name:t.alias,sourceName:t.name}));return r}function Qh(e,t){let n,{isCLI:r,optionInfos:o}=t;const i={name:e.name},u={};switch(e.type){case"int":n=qh.IntegerSchema,r&&(i.preprocess=e=>Number(e));break;case"string":case"path":n=qh.StringSchema;break;case"choice":n=qh.ChoiceSchema,i.choices=e.choices.map((t=>"object"==typeof t&&t.redirect?Object.assign(Object.assign({},t),{},{redirect:{to:{key:e.name,value:t.redirect}}}):t));break;case"boolean":n=qh.BooleanSchema;break;case"flag":n=Jh,i.flags=o.flatMap((e=>[e.alias,e.description&&e.name,e.oppositeDescription&&"no-".concat(e.name)].filter(Boolean)));break;default:throw new Error("Unexpected type ".concat(e.type))}if(e.exception?i.validate=(t,n,r)=>e.exception(t)||n.validate(t,r):i.validate=(e,t,n)=>void 0===e||t.validate(e,n),e.redirect&&(u.redirect=t=>t?{to:{key:e.redirect.option,value:e.redirect.value}}:void 0),e.deprecated&&(u.deprecated=!0),r&&!e.array){const e=i.preprocess||(e=>e);i.preprocess=(t,n,r)=>n.preprocess(e(Array.isArray(t)?Gh(t):t),r);}return e.array?qh.ArraySchema.create(Object.assign(Object.assign(Object.assign({},r?{preprocess:e=>Array.isArray(e)?e:[e]}:{}),u),{},{valueSchema:n.create(i)})):n.create(Object.assign(Object.assign({},i),u))}var Zh={normalizeApiOptions:function(e,t,n){return Yh(e,t,n)},normalizeCliOptions:function(e,t,n){return Yh(e,t,Object.assign({isCLI:!0},n))}};const{isNonEmptyArray:eg}=dc;function tg(e,t){const{ignoreDecorators:n}=t||{};if(!n){const t=e.declaration&&e.declaration.decorators||e.decorators;if(eg(t))return tg(t[0])}return e.range?e.range[0]:e.start}function ng(e){return e.range?e.range[1]:e.end}function rg(e,t){return tg(e)===tg(t)}var og={locStart:tg,locEnd:ng,hasSameLocStart:rg,hasSameLoc:function(e,t){return rg(e,t)&&function(e,t){return ng(e)===ng(t)}(e,t)}},ig={},ug={},sg={};Object.defineProperty(sg,"__esModule",{value:!0}),sg.default=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g,sg.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t};var ag={},cg={};Object.defineProperty(cg,"__esModule",{value:!0}),cg.isIdentifierStart=yg,cg.isIdentifierChar=Dg,cg.isIdentifierName=function(e){let t=!0;for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(55296==(64512&r)&&n+1<e.length){const t=e.charCodeAt(++n);56320==(64512&t)&&(r=65536+((1023&r)<<10)+(1023&t));}if(t){if(t=!1,!yg(r))return !1}else if(!Dg(r))return !1}return !t};let lg="\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ca\ua7d0\ua7d1\ua7d3\ua7d5-\ua7d9\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc",pg="\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0898-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";const fg=new RegExp("["+lg+"]"),dg=new RegExp("["+lg+pg+"]");lg=pg=null;const hg=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938],gg=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];function mg(e,t){let n=65536;for(let r=0,o=t.length;r<o;r+=2){if(n+=t[r],n>e)return !1;if(n+=t[r+1],n>=e)return !0}return !1}function yg(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&fg.test(String.fromCharCode(e)):mg(e,hg)))}function Dg(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&dg.test(String.fromCharCode(e)):mg(e,hg)||mg(e,gg))))}var Eg={};Object.defineProperty(Eg,"__esModule",{value:!0}),Eg.isReservedWord=xg,Eg.isStrictReservedWord=Sg,Eg.isStrictBindOnlyReservedWord=wg,Eg.isStrictBindReservedWord=function(e,t){return Sg(e,t)||wg(e)},Eg.isKeyword=function(e){return vg.has(e)};const Cg=["implements","interface","let","package","private","protected","public","static","yield"],bg=["eval","arguments"],vg=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),Ag=new Set(Cg),Fg=new Set(bg);function xg(e,t){return t&&"await"===e||"enum"===e}function Sg(e,t){return xg(e,t)||Ag.has(e)}function wg(e){return Fg.has(e)}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"isIdentifierName",{enumerable:!0,get:function(){return t.isIdentifierName}}),Object.defineProperty(e,"isIdentifierChar",{enumerable:!0,get:function(){return t.isIdentifierChar}}),Object.defineProperty(e,"isIdentifierStart",{enumerable:!0,get:function(){return t.isIdentifierStart}}),Object.defineProperty(e,"isReservedWord",{enumerable:!0,get:function(){return n.isReservedWord}}),Object.defineProperty(e,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return n.isStrictBindOnlyReservedWord}}),Object.defineProperty(e,"isStrictBindReservedWord",{enumerable:!0,get:function(){return n.isStrictBindReservedWord}}),Object.defineProperty(e,"isStrictReservedWord",{enumerable:!0,get:function(){return n.isStrictReservedWord}}),Object.defineProperty(e,"isKeyword",{enumerable:!0,get:function(){return n.isKeyword}});var t=cg,n=Eg;}(ag);var Tg={exports:{}},Bg=/[|\\{}()[\]^$+*?.]/g,Ng=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Bg,"\\$&")};const Pg=(e,t)=>{t=t||ta.argv;const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),o=t.indexOf("--");return -1!==r&&(-1===o||r<o)},Og=ta.env;let Ig;function Lg(e){const t=function(e){if(!1===Ig)return 0;if(Pg("color=16m")||Pg("color=full")||Pg("color=truecolor"))return 3;if(Pg("color=256"))return 2;if(e&&!e.isTTY&&!0!==Ig)return 0;const t=Ig?1:0;if("CI"in Og)return ["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in Og))||"codeship"===Og.CI_NAME?1:t;if("TEAMCITY_VERSION"in Og)return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Og.TEAMCITY_VERSION)?1:0;if("truecolor"===Og.COLORTERM)return 3;if("TERM_PROGRAM"in Og){const e=parseInt((Og.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(Og.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return /-256(color)?$/i.test(Og.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Og.TERM)||"COLORTERM"in Og?1:(Og.TERM,t)}(e);return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(t)}Pg("no-color")||Pg("no-colors")||Pg("color=false")?Ig=!1:(Pg("color")||Pg("colors")||Pg("color=true")||Pg("color=always"))&&(Ig=!0),"FORCE_COLOR"in Og&&(Ig=0===Og.FORCE_COLOR.length||0!==parseInt(Og.FORCE_COLOR,10));var jg={supportsColor:Lg,stdout:Lg(ta.stdout),stderr:Lg(ta.stderr)};const _g=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,Mg=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Rg=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Vg=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,$g=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e","\x1b"],["a","\x07"]]);function Wg(e){return "u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):$g.get(e)||e}function qg(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r)if(isNaN(t)){if(!(o=t.match(Rg)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(Vg,((e,t,n)=>t?Wg(t):n)));}else n.push(Number(t));return n}function Ug(e){Mg.lastIndex=0;const t=[];let n;for(;null!==(n=Mg.exec(e));){const e=n[1];if(n[2]){const r=qg(e,n[2]);t.push([e].concat(r));}else t.push([e]);}return t}function zg(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e];}return r}var Gg=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(_g,((t,i,u,s,a,c)=>{if(i)o.push(Wg(i));else if(s){const t=o.join("");o=[],r.push(0===n.length?t:zg(e,n)(t)),n.push({inverse:u,styles:Ug(s)});}else if(a){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(zg(e,n)(o.join(""))),o=[],n.pop();}else o.push(c);})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")};!function(e){const t=Ng,n=jp.exports,r=jg.stdout,o=Gg,u=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),a=Object.create(null);function c(e,t){t=t||{};const n=r?r.level:0;e.level=void 0===t.level?n:t.level,e.enabled="enabled"in t?t.enabled:e.level>0;}function l(e){if(!this||!(this instanceof l)||this.template){const t={};return c(t,e),t.template=function(){const e=[].slice.call(arguments);return h.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,l.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=l,t.template}c(this,e);}for(const e of Object.keys(n))n[e].closeRe=new RegExp(t(n[e].close),"g"),a[e]={get(){const t=n[e];return f.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};a.visible={get(){return f.call(this,this._styles||[],!0,"visible")}},n.color.closeRe=new RegExp(t(n.color.close),"g");for(const e of Object.keys(n.color.ansi))s.has(e)||(a[e]={get(){const t=this.level;return function(){const r=n.color[u[t]][e].apply(null,arguments),o={open:r,close:n.color.close,closeRe:n.color.closeRe};return f.call(this,this._styles?this._styles.concat(o):[o],this._empty,e)}}});n.bgColor.closeRe=new RegExp(t(n.bgColor.close),"g");for(const e of Object.keys(n.bgColor.ansi)){if(s.has(e))continue;a["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const r=n.bgColor[u[t]][e].apply(null,arguments),o={open:r,close:n.bgColor.close,closeRe:n.bgColor.closeRe};return f.call(this,this._styles?this._styles.concat(o):[o],this._empty,e)}}};}const p=Object.defineProperties((()=>{}),a);function f(e,t,n){const r=function(){return d.apply(r,arguments)};r._styles=e,r._empty=t;const o=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>o.level,set(e){o.level=e;}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>o.enabled,set(e){o.enabled=e;}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=p,r}function d(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return "";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const o=n.dim.open;for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return n.dim.open=o,r}function h(e,t){if(!Array.isArray(t))return [].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return o(e,r.join(""))}Object.defineProperties(l.prototype,a),e.exports=l(),e.exports.supportsColor=r,e.exports.default=e.exports;}(Tg),Object.defineProperty(ug,"__esModule",{value:!0}),ug.default=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(nm(t)){const n=rm(t);return tm(Kg(n),e)}return e},ug.getChalk=rm,ug.shouldHighlight=nm;var Hg=sg,Jg=ag,Xg=Tg.exports;const Yg=new Set(["as","async","from","get","of","set"]);function Kg(e){return {keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}const Qg=/\r\n|[\n\r\u2028\u2029]/,Zg=/^[()[\]{}]$/;let em;{const e=/^[a-z][\w-]*$/i,t=function(t,n,r){if("name"===t.type){if((0, Jg.isKeyword)(t.value)||(0, Jg.isStrictReservedWord)(t.value,!0)||Yg.has(t.value))return "keyword";if(e.test(t.value)&&("<"===r[n-1]||"</"==r.substr(n-2,2)))return "jsxIdentifier";if(t.value[0]!==t.value[0].toLowerCase())return "capitalized"}return "punctuator"===t.type&&Zg.test(t.value)?"bracket":"invalid"!==t.type||"@"!==t.value&&"#"!==t.value?t.type:"punctuator"};em=function*(e){let n;for(;n=Hg.default.exec(e);){const r=Hg.matchToToken(n);yield {type:t(r,n.index,e),value:r.value};}};}function tm(e,t){let n="";for(const{type:r,value:o}of em(t)){const t=e[r];n+=t?o.split(Qg).map((e=>t(e))).join("\n"):o;}return n}function nm(e){return !!Xg.supportsColor||e.forceColor}function rm(e){return e.forceColor?new Xg.constructor({enabled:!0,level:1}):Xg}Object.defineProperty(ig,"__esModule",{value:!0}),ig.codeFrameColumns=cm,ig.default=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!im){im=!0;const e="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";{new Error(e).name="DeprecationWarning",console.warn(new Error(e));}}const o={start:{column:n=Math.max(n,0),line:t}};return cm(e,o,r)};var om=ug;let im=!1;function um(e){return {gutter:e.grey,marker:e.red.bold,message:e.red.bold}}const sm=/\r\n|[\n\r\u2028\u2029]/;function am(e,t,n){const r=Object.assign({column:0,line:-1},e.start),o=Object.assign({},r,e.end),{linesAbove:i=2,linesBelow:u=3}=n||{},s=r.line,a=r.column,c=o.line,l=o.column;let p=Math.max(s-(i+1),0),f=Math.min(t.length,c+u);-1===s&&(p=0),-1===c&&(f=t.length);const d=c-s,h={};if(d)for(let e=0;e<=d;e++){const n=e+s;if(a)if(0===e){const e=t[n-1].length;h[n]=[a,e-a+1];}else if(e===d)h[n]=[0,l];else {const r=t[n-e].length;h[n]=[0,r];}else h[n]=!0;}else h[s]=a===l?!a||[a,0]:[a,l-a];return {start:p,end:f,markerLines:h}}function cm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=(n.highlightCode||n.forceColor)&&(0, om.shouldHighlight)(n),o=(0, om.getChalk)(n),i=um(o),u=(e,t)=>r?e(t):t,s=e.split(sm),{start:a,end:c,markerLines:l}=am(t,s,n),p=t.start&&"number"==typeof t.start.column,f=String(c).length,d=r?(0, om.default)(e,n):e;let h=d.split(sm,c).slice(a,c).map(((e,t)=>{const r=a+1+t,o=" ".concat(r).slice(-f),s=" ".concat(o," |"),c=l[r],p=!l[r+1];if(c){let t="";if(Array.isArray(c)){const r=e.slice(0,Math.max(c[0]-1,0)).replace(/[^\t]/g," "),o=c[1]||1;t=["\n ",u(i.gutter,s.replace(/\d/g," "))," ",r,u(i.marker,"^").repeat(o)].join(""),p&&n.message&&(t+=" "+u(i.message,n.message));}return [u(i.marker,">"),u(i.gutter,s),e.length>0?" ".concat(e):"",t].join("")}return " ".concat(u(i.gutter,s)).concat(e.length>0?" ".concat(e):"")})).join("\n");return n.message&&!p&&(h="".concat(" ".repeat(f+1)).concat(n.message,"\n").concat(h)),r?o.reset(h):h}const{ConfigError:lm}=Cp,pm=og,{locStart:fm,locEnd:dm}=pm,hm=Object.getOwnPropertyNames,gm=Object.getOwnPropertyDescriptor;function mm(e){const t={};for(const n of e.plugins)if(n.parsers)for(const e of hm(n.parsers))Object.defineProperty(t,e,gm(n.parsers,e));return t}function ym(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:mm(e);if("function"==typeof e.parser)return {parse:e.parser,astFormat:"estree",locStart:fm,locEnd:dm};if("string"==typeof e.parser){if(Object.prototype.hasOwnProperty.call(t,e.parser))return t[e.parser];throw new lm("Couldn't resolve parser \"".concat(e.parser,'". Parsers must be explicitly added to the standalone bundle.'))}}var Dm={parse:function(e,t){const n=mm(t),r=Object.defineProperties({},Object.fromEntries(Object.keys(n).map((e=>[e,{enumerable:!0,get:()=>n[e].parse}])))),o=ym(t,n);try{return o.preprocess&&(e=o.preprocess(e,t)),{text:e,ast:o.parse(e,r,t)}}catch(t){const{loc:n}=t;if(n){const{codeFrameColumns:r}=ig;throw t.codeFrame=r(e,n,{highlightCode:!0}),t.message+="\n"+t.codeFrame,t}throw t.stack}},resolveParser:ym};const Em=el,Cm=gl,bm=gp,{UndefinedParserError:vm}=Cp,{getSupportInfo:Am}=za,Fm=Zh,{resolveParser:xm}=Dm,Sm={astFormat:"estree",printer:{},originalText:void 0,locStart:null,locEnd:null};function wm(e){const{astFormat:t}=e;if(!t)throw new Error("getPlugin() requires astFormat to be set");const n=e.plugins.find((e=>e.printers&&e.printers[t]));if(!n)throw new Error("Couldn't find plugin for AST format \"".concat(t,'"'));return n}function Tm(e,t){const n=Cm.basename(e).toLowerCase(),r=Am({plugins:t}).languages.filter((e=>null!==e.since));let o=r.find((e=>e.extensions&&e.extensions.some((e=>n.endsWith(e)))||e.filenames&&e.filenames.some((e=>e.toLowerCase()===n))));if(!o&&!n.includes(".")){const t=function(e){if("string"!=typeof e)return "";let t;try{t=Em.openSync(e,"r");}catch{return ""}try{const e=new bm(t).next().toString("utf8"),n=e.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);if(n)return n[1];const r=e.match(/^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/);return r?r[1]:""}catch{return ""}finally{try{Em.closeSync(t);}catch{}}}(e);o=r.find((e=>e.interpreters&&e.interpreters.includes(t)));}return o&&o.parsers[0]}var Bm={normalize:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Object.assign({},e),r=Am({plugins:e.plugins,showUnreleased:!0,showDeprecated:!0}).options,o=Object.assign(Object.assign({},Sm),Object.fromEntries(r.filter((e=>void 0!==e.default)).map((e=>[e.name,e.default]))));if(!n.parser)if(n.filepath){if(n.parser=Tm(n.filepath,n.plugins),!n.parser)throw new vm("No parser could be inferred for file: ".concat(n.filepath))}else {(t.logger||console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."),n.parser="babel";}const i=xm(Fm.normalizeApiOptions(n,[r.find((e=>"parser"===e.name))],{passThrough:!0,logger:!1}));n.astFormat=i.astFormat,n.locEnd=i.locEnd,n.locStart=i.locStart;const u=wm(n);n.printer=u.printers[n.astFormat];const s=Object.fromEntries(r.filter((e=>e.pluginDefaults&&void 0!==e.pluginDefaults[u.name])).map((e=>[e.name,e.pluginDefaults[u.name]]))),a=Object.assign(Object.assign({},o),s);for(const[e,t]of Object.entries(a))null!==n[e]&&void 0!==n[e]||(n[e]=t);return "json"===n.parser&&(n.trailingComma="none"),Fm.normalizeApiOptions(n,r,Object.assign({passThrough:Object.keys(Sm)},t))},hiddenDefaults:Sm,inferParser:Tm};var Nm=function e(t,n,r){if(Array.isArray(t))return t.map((t=>e(t,n,r))).filter(Boolean);if(!t||"object"!=typeof t)return t;const o=n.printer.massageAstNode;let i;i=o&&o.ignoredProperties?o.ignoredProperties:new Set;const u={};for(const[r,o]of Object.entries(t))i.has(r)||"function"==typeof o||(u[r]=e(o,n,t));if(o){const e=o(t,u,r);if(null===e)return;if(e)return e}return u},km="function"==typeof Object.create?function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}});}:function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e;};function Pm(e,t){var n={seen:[],stylize:Im};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),Mm(t)?n.showHidden=t:t&&Xm(n,t),$m(n.showHidden)&&(n.showHidden=!1),$m(n.depth)&&(n.depth=2),$m(n.colors)&&(n.colors=!1),$m(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=Om),Lm(n,e,n.depth)}function Om(e,t){var n=Pm.styles[t];return n?"\x1b["+Pm.colors[n][0]+"m"+e+"\x1b["+Pm.colors[n][1]+"m":e}function Im(e,t){return e}function Lm(e,t,n){if(e.customInspect&&t&&Gm(t.inspect)&&t.inspect!==Pm&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(n,e);return Vm(r)||(r=Lm(e,r,n)),r}var o=function(e,t){if($m(t))return e.stylize("undefined","undefined");if(Vm(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(r=t,"number"==typeof r)return e.stylize(""+t,"number");var r;if(Mm(t))return e.stylize(""+t,"boolean");if(Rm(t))return e.stylize("null","null")}(e,t);if(o)return o;var i=Object.keys(t),u=function(e){var t={};return e.forEach((function(e,n){t[e]=!0;})),t}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(t)),zm(t)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return jm(t);if(0===i.length){if(Gm(t)){var s=t.name?": "+t.name:"";return e.stylize("[Function"+s+"]","special")}if(Wm(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(Um(t))return e.stylize(Date.prototype.toString.call(t),"date");if(zm(t))return jm(t)}var a,c,l="",p=!1,f=["{","}"];(a=t,Array.isArray(a)&&(p=!0,f=["[","]"]),Gm(t))&&(l=" [Function"+(t.name?": "+t.name:"")+"]");return Wm(t)&&(l=" "+RegExp.prototype.toString.call(t)),Um(t)&&(l=" "+Date.prototype.toUTCString.call(t)),zm(t)&&(l=" "+jm(t)),0!==i.length||p&&0!=t.length?n<0?Wm(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),c=p?function(e,t,n,r,o){for(var i=[],u=0,s=t.length;u<s;++u)Ym(t,String(u))?i.push(_m(e,t,n,r,String(u),!0)):i.push("");return o.forEach((function(o){o.match(/^\d+$/)||i.push(_m(e,t,n,r,o,!0));})),i}(e,t,n,u,i):i.map((function(r){return _m(e,t,n,u,r,p)})),e.seen.pop(),function(e,t,n){if(e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(c,l,f)):f[0]+l+f[1]}function jm(e){return "["+Error.prototype.toString.call(e)+"]"}function _m(e,t,n,r,o,i){var u,s,a;if((a=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?s=a.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):a.set&&(s=e.stylize("[Setter]","special")),Ym(r,o)||(u="["+o+"]"),s||(e.seen.indexOf(a.value)<0?(s=Rm(n)?Lm(e,a.value,null):Lm(e,a.value,n-1)).indexOf("\n")>-1&&(s=i?s.split("\n").map((function(e){return "  "+e})).join("\n").substr(2):"\n"+s.split("\n").map((function(e){return "   "+e})).join("\n")):s=e.stylize("[Circular]","special")),$m(u)){if(i&&o.match(/^\d+$/))return s;(u=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,"name")):(u=u.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),u=e.stylize(u,"string"));}return u+": "+s}function Mm(e){return "boolean"==typeof e}function Rm(e){return null===e}function Vm(e){return "string"==typeof e}function $m(e){return void 0===e}function Wm(e){return qm(e)&&"[object RegExp]"===Jm(e)}function qm(e){return "object"==typeof e&&null!==e}function Um(e){return qm(e)&&"[object Date]"===Jm(e)}function zm(e){return qm(e)&&("[object Error]"===Jm(e)||e instanceof Error)}function Gm(e){return "function"==typeof e}function Hm(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function Jm(e){return Object.prototype.toString.call(e)}function Xm(e,t){if(!t||!qm(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}function Ym(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Km(e,t){if(e===t)return 0;for(var n=e.length,r=t.length,o=0,i=Math.min(n,r);o<i;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0}Pm.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},Pm.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"};var Qm,Zm=Object.prototype.hasOwnProperty,ey=Object.keys||function(e){var t=[];for(var n in e)Zm.call(e,n)&&t.push(n);return t},ty=Array.prototype.slice;function ny(){return void 0!==Qm?Qm:Qm="foo"===function(){}.name}function ry(e){return Object.prototype.toString.call(e)}function oy(e){return !fp(e)&&("function"==typeof Ns.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}function iy(e,t){e||py(e,!0,t,"==",fy);}var uy=/\s*function\s+([^\(\s]*)\s*/;function sy(e){if(Gm(e)){if(ny())return e.name;var t=e.toString().match(uy);return t&&t[1]}}function ay(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return cy(ly(e.actual),128)+" "+e.operator+" "+cy(ly(e.expected),128)}(this),this.generatedMessage=!0);var t=e.stackStartFunction||py;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else {var n=new Error;if(n.stack){var r=n.stack,o=sy(t),i=r.indexOf("\n"+o);if(i>=0){var u=r.indexOf("\n",i+1);r=r.substring(u+1);}this.stack=r;}}}function cy(e,t){return "string"==typeof e?e.length<t?e:e.slice(0,t):e}function ly(e){if(ny()||!Gm(e))return Pm(e);var t=sy(e);return "[Function"+(t?": "+t:"")+"]"}function py(e,t,n,r,o){throw new ay({message:n,actual:e,expected:t,operator:r,stackStartFunction:o})}function fy(e,t){e||py(e,!0,t,"==",fy);}function dy(e,t,n){e!=t&&py(e,t,n,"==",dy);}function hy(e,t,n){e==t&&py(e,t,n,"!=",hy);}function gy(e,t,n){yy(e,t,!1)||py(e,t,n,"deepEqual",gy);}function my(e,t,n){yy(e,t,!0)||py(e,t,n,"deepStrictEqual",my);}function yy(e,t,n,r){if(e===t)return !0;if(fp(e)&&fp(t))return 0===Km(e,t);if(Um(e)&&Um(t))return e.getTime()===t.getTime();if(Wm(e)&&Wm(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(oy(e)&&oy(t)&&ry(e)===ry(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===Km(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(fp(e)!==fp(t))return !1;var o=(r=r||{actual:[],expected:[]}).actual.indexOf(e);return -1!==o&&o===r.expected.indexOf(t)||(r.actual.push(e),r.expected.push(t),function(e,t,n,r){if(null==e||null==t)return !1;if(Hm(e)||Hm(t))return e===t;if(n&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return !1;var o=Dy(e),i=Dy(t);if(o&&!i||!o&&i)return !1;if(o)return yy(e=ty.call(e),t=ty.call(t),n);var u,s,a=ey(e),c=ey(t);if(a.length!==c.length)return !1;for(a.sort(),c.sort(),s=a.length-1;s>=0;s--)if(a[s]!==c[s])return !1;for(s=a.length-1;s>=0;s--)if(!yy(e[u=a[s]],t[u],n,r))return !1;return !0}(e,t,n,r))}return n?e===t:e==t}function Dy(e){return "[object Arguments]"==Object.prototype.toString.call(e)}function Ey(e,t,n){yy(e,t,!1)&&py(e,t,n,"notDeepEqual",Ey);}function Cy(e,t,n){yy(e,t,!0)&&py(e,t,n,"notDeepStrictEqual",Cy);}function by(e,t,n){e!==t&&py(e,t,n,"===",by);}function vy(e,t,n){e===t&&py(e,t,n,"!==",vy);}function Ay(e,t){if(!e||!t)return !1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return !0}catch(e){}return !Error.isPrototypeOf(t)&&!0===t.call({},e)}function Fy(e,t,n,r){var o;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(r=n,n=null),o=function(e){var t;try{e();}catch(e){t=e;}return t}(t),r=(n&&n.name?" ("+n.name+").":".")+(r?" "+r:"."),e&&!o&&py(o,n,"Missing expected exception"+r);var i="string"==typeof r,u=!e&&o&&!n;if((!e&&zm(o)&&i&&Ay(o,n)||u)&&py(o,n,"Got unwanted exception"+r),e&&o&&n&&!Ay(o,n)||!e&&o)throw o}function xy(e,t,n){Fy(!0,e,t,n);}function Sy(e,t,n){Fy(!1,e,t,n);}function wy(e){if(e)throw e}iy.AssertionError=ay,km(ay,Error),iy.fail=py,iy.ok=fy,iy.equal=dy,iy.notEqual=hy,iy.deepEqual=gy,iy.deepStrictEqual=my,iy.notDeepEqual=Ey,iy.notDeepStrictEqual=Cy,iy.strictEqual=by,iy.notStrictEqual=vy,iy.throws=xy,iy.doesNotThrow=Sy,iy.ifError=wy;var Ty=t(Object.freeze({__proto__:null,default:iy,AssertionError:ay,fail:py,ok:fy,assert:fy,equal:dy,notEqual:hy,deepEqual:gy,deepStrictEqual:my,notDeepEqual:Ey,notDeepStrictEqual:Cy,strictEqual:by,notStrictEqual:vy,throws:xy,doesNotThrow:Sy,ifError:wy}));const By=Ty,{builders:{line:Ny,hardline:ky,breakParent:Py,indent:Oy,lineSuffix:Iy,join:Ly,cursor:jy}}=Zc,{hasNewline:_y,skipNewline:My,skipSpaces:Ry,isPreviousLineEmpty:Vy,addLeadingComment:$y,addDanglingComment:Wy,addTrailingComment:qy}=dc,Uy=new WeakMap;function zy(e,t,n){if(!e)return;const{printer:r,locStart:o,locEnd:i}=t;if(n){if(r.canAttachComment&&r.canAttachComment(e)){let t;for(t=n.length-1;t>=0&&!(o(n[t])<=o(e)&&i(n[t])<=i(e));--t);return void n.splice(t+1,0,e)}}else if(Uy.has(e))return Uy.get(e);const u=r.getCommentChildNodes&&r.getCommentChildNodes(e,t)||"object"==typeof e&&Object.entries(e).filter((e=>{let[t]=e;return "enclosingNode"!==t&&"precedingNode"!==t&&"followingNode"!==t&&"tokens"!==t&&"comments"!==t})).map((e=>{let[,t]=e;return t}));if(u){n||(n=[],Uy.set(e,n));for(const e of u)zy(e,t,n);return n}}function Gy(e,t,n,r){const{locStart:o,locEnd:i}=n,u=o(t),s=i(t),a=zy(e,n);let c,l,p=0,f=a.length;for(;p<f;){const e=p+f>>1,r=a[e],d=o(r),h=i(r);if(d<=u&&s<=h)return Gy(r,t,n,r);if(h<=u)c=r,p=e+1;else {if(!(s<=d))throw new Error("Comment location overlaps with node location");l=r,f=e;}}if(r&&"TemplateLiteral"===r.type){const{quasis:e}=r,o=Zy(e,t,n);c&&Zy(e,c,n)!==o&&(c=null),l&&Zy(e,l,n)!==o&&(l=null);}return {enclosingNode:r,precedingNode:c,followingNode:l}}const Hy=()=>!1;const Jy=e=>!/[\S\n\u2028\u2029]/.test(e);function Xy(e,t,n,r){const{comment:o,precedingNode:i}=n[r],{locStart:u,locEnd:s}=t;let a=u(o);if(i)for(let t=r-1;t>=0;t--){const{comment:r,precedingNode:o}=n[t];if(o!==i||!Jy(e.slice(s(r),a)))break;a=u(r);}return _y(e,a,{backwards:!0})}function Yy(e,t,n,r){const{comment:o,followingNode:i}=n[r],{locStart:u,locEnd:s}=t;let a=s(o);if(i)for(let t=r+1;t<n.length;t++){const{comment:r,followingNode:o}=n[t];if(o!==i||!Jy(e.slice(a,u(r))))break;a=s(r);}return _y(e,a)}function Ky(e,t,n){const r=e.length;if(0===r)return;const{precedingNode:o,followingNode:i,enclosingNode:u}=e[0],s=n.printer.getGapRegex&&n.printer.getGapRegex(u)||/^[\s(]*$/;let a,c=n.locStart(i);for(a=r;a>0;--a){const{comment:r,precedingNode:u,followingNode:l}=e[a-1];By.strictEqual(u,o),By.strictEqual(l,i);const p=t.slice(n.locEnd(r),c);if(!s.test(p))break;c=n.locStart(r);}for(const[t,{comment:n}]of e.entries())t<a?qy(o,n):$y(i,n);for(const e of [o,i])e.comments&&e.comments.length>1&&e.comments.sort(((e,t)=>n.locStart(e)-n.locStart(t)));e.length=0;}function Qy(e,t){return e.getValue().printed=!0,t.printer.printComment(e,t)}function Zy(e,t,n){const r=n.locStart(t)-1;for(let t=1;t<e.length;++t)if(r<n.locStart(e[t]))return t-1;return 0}function eD(e,t,n){const r=e.getValue();if(!r)return {};let o=r.comments||[];n&&(o=o.filter((e=>!n.has(e))));const i=r===t.cursorNode;if(0===o.length){const e=i?jy:"";return {leading:e,trailing:e}}const u=[],s=[];return e.each((()=>{const r=e.getValue();if(n&&n.has(r))return;const{leading:o,trailing:i}=r;o?u.push(function(e,t){const n=e.getValue(),r=[Qy(e,t)],{printer:o,originalText:i,locStart:u,locEnd:s}=t;if(o.isBlockComment&&o.isBlockComment(n)){const e=_y(i,s(n))?_y(i,u(n),{backwards:!0})?ky:Ny:" ";r.push(e);}else r.push(ky);const a=My(i,Ry(i,s(n)));return !1!==a&&_y(i,a)&&r.push(ky),r}(e,t)):i&&s.push(function(e,t){const n=e.getValue(),r=Qy(e,t),{printer:o,originalText:i,locStart:u}=t,s=o.isBlockComment&&o.isBlockComment(n);if(_y(i,u(n),{backwards:!0})){const e=Vy(i,n,u);return Iy([ky,e?ky:"",r])}let a=[" ",r];return s||(a=[Iy(a),Py]),a}(e,t));}),"comments"),i&&(u.unshift(jy),s.push(jy)),{leading:u,trailing:s}}var tD={attach:function(e,t,n,r){if(!Array.isArray(e))return;const o=[],{locStart:i,locEnd:u,printer:{handleComments:s={}}}=r,{avoidAstMutation:a,ownLine:c=Hy,endOfLine:l=Hy,remaining:p=Hy}=s,f=e.map(((o,i)=>Object.assign(Object.assign({},Gy(t,o,r)),{},{comment:o,text:n,options:r,ast:t,isLastComment:e.length-1===i})));for(const[e,t]of f.entries()){const{comment:n,precedingNode:r,enclosingNode:s,followingNode:d,text:h,options:g,ast:m,isLastComment:y}=t;if("json"===g.parser||"json5"===g.parser||"__js_expression"===g.parser||"__vue_expression"===g.parser){if(i(n)-i(m)<=0){$y(m,n);continue}if(u(n)-u(m)>=0){qy(m,n);continue}}let D;if(a?D=[t]:(n.enclosingNode=s,n.precedingNode=r,n.followingNode=d,D=[n,h,g,m,y]),Xy(h,g,f,e))n.placement="ownLine",c(...D)||(d?$y(d,n):r?qy(r,n):Wy(s||m,n));else if(Yy(h,g,f,e))n.placement="endOfLine",l(...D)||(r?qy(r,n):d?$y(d,n):Wy(s||m,n));else if(n.placement="remaining",p(...D));else if(r&&d){const e=o.length;if(e>0){o[e-1].followingNode!==d&&Ky(o,h,g);}o.push(t);}else r?qy(r,n):d?$y(d,n):Wy(s||m,n);}if(Ky(o,n,r),!a)for(const t of e)delete t.precedingNode,delete t.enclosingNode,delete t.followingNode;},printComments:function(e,t,n,r){const{leading:o,trailing:i}=eD(e,n,r);return o||i?[o,t,i]:t},printCommentsSeparately:eD,printDanglingComments:function(e,t,n,r){const o=[],i=e.getValue();return i&&i.comments?(e.each((()=>{const n=e.getValue();n.leading||n.trailing||r&&!r(n)||o.push(Qy(e,t));}),"comments"),0===o.length?"":n?Ly(ky,o):Oy([ky,Ly(ky,o)])):""},getSortedChildNodes:zy,ensureAllCommentsPrinted:function(e){if(e)for(const t of e){if(!t.printed)throw new Error('Comment "'+t.value.trim()+'" was not printed. Please report this error!');delete t.printed;}}};const nD=au;function rD(e,t){const n=oD(e.stack,t);return -1===n?null:e.stack[n]}function oD(e,t){for(let n=e.length-1;n>=0;n-=2){const r=e[n];if(r&&!Array.isArray(r)&&--t<0)return n}return -1}var iD=class{constructor(e){this.stack=[e];}getName(){const{stack:e}=this,{length:t}=e;return t>1?e[t-2]:null}getValue(){return nD(this.stack)}getNode(){return rD(this,arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)}getParentNode(){return rD(this,(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)+1)}call(e){const{stack:t}=this,{length:n}=t;let r=nD(t);for(var o=arguments.length,i=new Array(o>1?o-1:0),u=1;u<o;u++)i[u-1]=arguments[u];for(const e of i)r=r[e],t.push(e,r);const s=e(this);return t.length=n,s}callParent(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=oD(this.stack,t+1),r=this.stack.splice(n+1),o=e(this);return this.stack.push(...r),o}each(e){const{stack:t}=this,{length:n}=t;let r=nD(t);for(var o=arguments.length,i=new Array(o>1?o-1:0),u=1;u<o;u++)i[u-1]=arguments[u];for(const e of i)r=r[e],t.push(e,r);for(let n=0;n<r.length;++n)t.push(n,r[n]),e(this,n,r),t.length-=2;t.length=n;}map(e){const t=[];for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return this.each(((n,r,o)=>{t[r]=e(n,r,o);}),...r),t}try(e){const{stack:t}=this,n=[...t];try{return e()}finally{t.length=0,t.push(...n);}}match(){let e=this.stack.length-1,t=null,n=this.stack[e--];for(var r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];for(const r of o){if(void 0===n)return !1;let o=null;if("number"==typeof t&&(o=t,t=this.stack[e--],n=this.stack[e--]),r&&!r(n,t,o))return !1;t=this.stack[e--],n=this.stack[e--];}return !0}findAncestor(e){let t=this.stack.length-1,n=null,r=this.stack[t--];for(;r;){let o=null;if("number"==typeof n&&(o=n,n=this.stack[t--],r=this.stack[t--]),null!==n&&e(r,n,o))return r;n=this.stack[t--],r=this.stack[t--];}}};const{utils:{stripTrailingHardline:uD}}=Zc,{normalize:sD}=Bm,aD=tD;var cD={printSubtree:function(e,t,n,r){if(n.printer.embed&&"auto"===n.embeddedLanguageFormatting)return n.printer.embed(e,t,((e,t,o)=>function(e,t,n,r){let{stripTrailingHardline:o=!1}=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const i=sD(Object.assign(Object.assign(Object.assign({},n),t),{},{parentParser:n.parser,originalText:e}),{passThrough:!0}),u=Dm.parse(e,i),{ast:s}=u;e=u.text;const a=s.comments;delete s.comments,aD.attach(a,s,e,i),i[Symbol.for("comments")]=a||[],i[Symbol.for("tokens")]=s.tokens||[];const c=r(s,i);if(aD.ensureAllCommentsPrinted(a),o)return "string"==typeof c?c.replace(/(?:\r?\n)*$/,""):uD(c);return c}(e,t,n,r,o)),n)}};const lD=iD,{builders:{hardline:pD,addAlignmentToDoc:fD},utils:{propagateBreaks:dD}}=Zc,{printComments:hD}=tD,gD=cD;function mD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{printer:r}=t;r.preprocess&&(e=r.preprocess(e,t));const o=new Map,i=new lD(e);let u=s();return n>0&&(u=fD([pD,u],n,t.tabWidth)),dD(u),u;function s(e,t){return void 0===e||e===i?a(t):Array.isArray(e)?i.call((()=>a(t)),...e):i.call((()=>a(t)),e)}function a(e){const n=i.getValue(),r=n&&"object"==typeof n&&void 0===e;if(r&&o.has(n))return o.get(n);const u=yD(i,t,s,e);return r&&o.set(n,u),u}}function yD(t,n,r,o){const i=t.getValue(),{printer:u}=n;let s,a;if(u.hasPrettierIgnore&&u.hasPrettierIgnore(t))({doc:s,printedComments:a}=function(e,t){const{originalText:n,[Symbol.for("comments")]:r,locStart:o,locEnd:i}=t,u=o(e),s=i(e),a=new Set;for(const e of r)o(e)>=u&&i(e)<=s&&(e.printed=!0,a.add(e));return {doc:n.slice(u,s),printedComments:a}}(i,n));else {if(i)try{s=gD.printSubtree(t,r,n,mD);}catch(t){if(e.PRETTIER_DEBUG)throw t}s||(s=u.print(t,n,r,o));}return u.willPrintOwnComments&&u.willPrintOwnComments(t,n)||(s=hD(t,s,n,a)),s}var DD=mD;const ED=Ty,CD=tD;function bD(e){let t=e.length-1;for(;;){const n=e[t];if(!n||"Program"!==n.type&&"File"!==n.type)break;t--;}return e.slice(0,t+1)}function vD(e,t,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],i=arguments.length>5?arguments[5]:void 0;const{locStart:u,locEnd:s}=n,a=u(e),c=s(e);if(!(t>c||t<a||"rangeEnd"===i&&t===a||"rangeStart"===i&&t===c)){for(const u of CD.getSortedChildNodes(e,n)){const s=vD(u,t,n,r,[e,...o],i);if(s)return s}return !r||r(e,o[0])?{node:e,parentNodes:o}:void 0}}const AD=new Set(["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","UnaryExpression","TemplateLiteral"]),FD=new Set(["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"]);function xD(e,t,n){if(!t)return !1;switch(e.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":case"espree":case"meriyah":case"__babel_estree":return function(e,t){return "DeclareExportDeclaration"!==t&&"TypeParameterDeclaration"!==e&&("Directive"===e||"TypeAlias"===e||"TSExportAssignment"===e||e.startsWith("Declare")||e.startsWith("TSDeclare")||e.endsWith("Statement")||e.endsWith("Declaration"))}(t.type,n&&n.type);case"json":case"json5":case"json-stringify":return AD.has(t.type);case"graphql":return FD.has(t.kind);case"vue":return "root"!==t.tag}return !1}var SD={calculateRange:function(e,t,n){let{rangeStart:r,rangeEnd:o,locStart:i,locEnd:u}=t;ED.ok(o>r);const s=e.slice(r,o).search(/\S/),a=-1===s;if(!a)for(r+=s;o>r&&!/\S/.test(e[o-1]);--o);const c=vD(n,r,t,((e,n)=>xD(t,e,n)),[],"rangeStart"),l=a?c:vD(n,o,t,(e=>xD(t,e)),[],"rangeEnd");if(!c||!l)return {rangeStart:0,rangeEnd:0};let p,f;if((e=>{let{parser:t}=e;return "json"===t||"json5"===t||"json-stringify"===t})(t)){const e=function(e,t){const n=[e.node,...e.parentNodes],r=new Set([t.node,...t.parentNodes]);return n.find((e=>AD.has(e.type)&&r.has(e)))}(c,l);p=e,f=e;}else ({startNode:p,endNode:f}=function(e,t,n){let{locStart:r,locEnd:o}=n,i=e.node,u=t.node;if(i===u)return {startNode:i,endNode:u};const s=r(e.node);for(const e of bD(t.parentNodes)){if(!(r(e)>=s))break;u=e;}const a=o(t.node);for(const t of bD(e.parentNodes)){if(!(o(t)<=a))break;i=t;}return {startNode:i,endNode:u}}(c,l,t));return {rangeStart:Math.min(i(p),i(f)),rangeEnd:Math.max(u(p),u(f))}},findNodeAtOffset:vD};const wD=r,{printer:{printDocToString:TD},debug:{printDocToDebug:BD}}=Zc,{getAlignmentSize:ND}=dc,{guessEndOfLine:kD,convertEndOfLineToChars:PD,countEndOfLineChars:OD,normalizeEndOfLine:ID}=hc,LD=Bm.normalize,jD=Nm,_D=tD,MD=Dm,RD=DD,VD=SD,$D=Symbol("cursor");function WD(e,t,n){const r=t.comments;return r&&(delete t.comments,_D.attach(r,t,e,n)),n[Symbol.for("comments")]=r||[],n[Symbol.for("tokens")]=t.tokens||[],n.originalText=e,r}function qD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!e||0===e.trim().length)return {formatted:"",cursorOffset:-1,comments:[]};const{ast:r,text:o}=MD.parse(e,t);if(t.cursorOffset>=0){const e=VD.findNodeAtOffset(r,t.cursorOffset,t);e&&e.node&&(t.cursorNode=e.node);}const i=WD(o,r,t),u=RD(r,t,n),s=TD(u,t);if(_D.ensureAllCommentsPrinted(i),n>0){const e=s.formatted.trim();void 0!==s.cursorNodeStart&&(s.cursorNodeStart-=s.formatted.indexOf(e)),s.formatted=e+PD(t.endOfLine);}if(t.cursorOffset>=0){let e,n,r,u,a;if(t.cursorNode&&s.cursorNodeText?(e=t.locStart(t.cursorNode),n=o.slice(e,t.locEnd(t.cursorNode)),r=t.cursorOffset-e,u=s.cursorNodeStart,a=s.cursorNodeText):(e=0,n=o,r=t.cursorOffset,u=0,a=s.formatted),n===a)return {formatted:s.formatted,cursorOffset:u+r,comments:i};const c=[...n];c.splice(r,0,$D);const l=[...a],p=wD.diffArrays(c,l);let f=u;for(const e of p)if(e.removed){if(e.value.includes($D))break}else f+=e.count;return {formatted:s.formatted,cursorOffset:f,comments:i}}return {formatted:s.formatted,cursorOffset:-1,comments:i}}function UD(e,t,n){return "number"!=typeof t||Number.isNaN(t)||t<0||t>e.length?n:t}function zD(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:o}=t;return n=UD(e,n,-1),r=UD(e,r,0),o=UD(e,o,e.length),Object.assign(Object.assign({},t),{},{cursorOffset:n,rangeStart:r,rangeEnd:o})}function GD(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:o,endOfLine:i}=zD(e,t);const u="\ufeff"===e.charAt(0);if(u&&(e=e.slice(1),n--,r--,o--),"auto"===i&&(i=kD(e)),e.includes("\r")){const t=t=>OD(e.slice(0,Math.max(t,0)),"\r\n");n-=t(n),r-=t(r),o-=t(o),e=ID(e);}return {hasBOM:u,text:e,options:zD(e,Object.assign(Object.assign({},t),{},{cursorOffset:n,rangeStart:r,rangeEnd:o,endOfLine:i}))}}function HD(e,t){const n=MD.resolveParser(t);return !n.hasPragma||n.hasPragma(e)}function JD(e,t){let n,{hasBOM:r,text:o,options:i}=GD(e,LD(t));return i.rangeStart>=i.rangeEnd&&""!==o||i.requirePragma&&!HD(o,i)?{formatted:e,cursorOffset:t.cursorOffset,comments:[]}:(i.rangeStart>0||i.rangeEnd<o.length?n=function(e,t){const{ast:n,text:r}=MD.parse(e,t),{rangeStart:o,rangeEnd:i}=VD.calculateRange(r,t,n),u=r.slice(o,i),s=Math.min(o,r.lastIndexOf("\n",o)+1),a=r.slice(s,o).match(/^\s*/)[0],c=ND(a,t.tabWidth),l=qD(u,Object.assign(Object.assign({},t),{},{rangeStart:0,rangeEnd:Number.POSITIVE_INFINITY,cursorOffset:t.cursorOffset>o&&t.cursorOffset<=i?t.cursorOffset-o:-1,endOfLine:"lf"}),c),p=l.formatted.trimEnd();let{cursorOffset:f}=t;f>i?f+=p.length-u.length:l.cursorOffset>=0&&(f=l.cursorOffset+o);let d=r.slice(0,o)+p+r.slice(i);if("lf"!==t.endOfLine){const e=PD(t.endOfLine);f>=0&&"\r\n"===e&&(f+=OD(d.slice(0,f),"\n")),d=d.replace(/\n/g,e);}return {formatted:d,cursorOffset:f,comments:l.comments}}(o,i):(!i.requirePragma&&i.insertPragma&&i.printer.insertPragma&&!HD(o,i)&&(o=i.printer.insertPragma(o)),n=qD(o,i)),r&&(n.formatted="\ufeff"+n.formatted,n.cursorOffset>=0&&n.cursorOffset++),n)}var XD={formatWithCursor:JD,parse(e,t,n){const{text:r,options:o}=GD(e,LD(t)),i=MD.parse(r,o);return n&&(i.ast=jD(i.ast,o)),i},formatAST(e,t){t=LD(t);const n=RD(e,t);return TD(n,t)},formatDoc:(e,t)=>JD(BD(e),Object.assign(Object.assign({},t),{},{parser:"__js_expression"})).formatted,printToDoc(e,t){t=LD(t);const{ast:n,text:r}=MD.parse(e,t);return WD(r,n,t),RD(n,t)},printDocToString:(e,t)=>TD(e,LD(t))};const{getMaxContinuousCount:YD,getStringWidth:KD,getAlignmentSize:QD,getIndentSize:ZD,skip:eE,skipWhitespace:tE,skipSpaces:nE,skipNewline:rE,skipToLineEnd:oE,skipEverythingButNewLine:iE,skipInlineComment:uE,skipTrailingComment:sE,hasNewline:aE,hasNewlineInRange:cE,hasSpaces:lE,isNextLineEmpty:pE,isNextLineEmptyAfterIndex:fE,isPreviousLineEmpty:dE,getNextNonSpaceNonCommentCharacterIndex:hE,makeString:gE,addLeadingComment:mE,addDanglingComment:yE,addTrailingComment:DE}=dc;var EE={getMaxContinuousCount:YD,getStringWidth:KD,getAlignmentSize:QD,getIndentSize:ZD,skip:eE,skipWhitespace:tE,skipSpaces:nE,skipNewline:rE,skipToLineEnd:oE,skipEverythingButNewLine:iE,skipInlineComment:uE,skipTrailingComment:sE,hasNewline:aE,hasNewlineInRange:cE,hasSpaces:lE,isNextLineEmpty:pE,isNextLineEmptyAfterIndex:fE,isPreviousLineEmpty:dE,getNextNonSpaceNonCommentCharacterIndex:hE,makeString:gE,addLeadingComment:mE,addDanglingComment:yE,addTrailingComment:DE};const CE=["languageId"];var bE=function(e,t){const{languageId:n}=e,r=cu(e,CE);return Object.assign(Object.assign({linguistLanguageId:n},r),t(e))},vE={},AE={exports:{}};!function(){function e(e){if(null==e)return !1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return !0}return !1}function t(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}AE.exports={isExpression:function(e){if(null==e)return !1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return !0}return !1},isStatement:e,isIterationStatement:function(e){if(null==e)return !1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return !0}return !1},isSourceElement:function(t){return e(t)||null!=t&&"FunctionDeclaration"===t.type},isProblematicIfStatement:function(e){var n;if("IfStatement"!==e.type)return !1;if(null==e.alternate)return !1;n=e.consequent;do{if("IfStatement"===n.type&&null==n.alternate)return !0;n=t(n);}while(n);return !1},trailingStatement:t};}();var FE={exports:{}};!function(){var e,t,n,r,o,i;function u(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},e={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},n=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],r=new Array(128),i=0;i<128;++i)r[i]=i>=97&&i<=122||i>=65&&i<=90||36===i||95===i;for(o=new Array(128),i=0;i<128;++i)o[i]=i>=97&&i<=122||i>=65&&i<=90||i>=48&&i<=57||36===i||95===i;FE.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&n.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?r[e]:t.NonAsciiIdentifierStart.test(u(e))},isIdentifierPartES5:function(e){return e<128?o[e]:t.NonAsciiIdentifierPart.test(u(e))},isIdentifierStartES6:function(t){return t<128?r[t]:e.NonAsciiIdentifierStart.test(u(t))},isIdentifierPartES6:function(t){return t<128?o[t]:e.NonAsciiIdentifierPart.test(u(t))}};}();var xE={exports:{}};!function(){var e=FE.exports;function t(e,t){return !(!t&&"yield"===e)&&n(e,t)}function n(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return !0;default:return !1}}(e))return !0;switch(e.length){case 2:return "if"===e||"in"===e||"do"===e;case 3:return "var"===e||"for"===e||"new"===e||"try"===e;case 4:return "this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return "while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return "return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return "default"===e||"finally"===e||"extends"===e;case 8:return "function"===e||"continue"===e||"debugger"===e;case 10:return "instanceof"===e;default:return !1}}function r(e,n){return "null"===e||"true"===e||"false"===e||t(e,n)}function o(e,t){return "null"===e||"true"===e||"false"===e||n(e,t)}function i(t){var n,r,o;if(0===t.length)return !1;if(o=t.charCodeAt(0),!e.isIdentifierStartES5(o))return !1;for(n=1,r=t.length;n<r;++n)if(o=t.charCodeAt(n),!e.isIdentifierPartES5(o))return !1;return !0}function u(t){var n,r,o,i,u;if(0===t.length)return !1;for(u=e.isIdentifierStartES6,n=0,r=t.length;n<r;++n){if(55296<=(o=t.charCodeAt(n))&&o<=56319){if(++n>=r)return !1;if(!(56320<=(i=t.charCodeAt(n))&&i<=57343))return !1;o=1024*(o-55296)+(i-56320)+65536;}if(!u(o))return !1;u=e.isIdentifierPartES6;}return !0}xE.exports={isKeywordES5:t,isKeywordES6:n,isReservedWordES5:r,isReservedWordES6:o,isRestrictedWord:function(e){return "eval"===e||"arguments"===e},isIdentifierNameES5:i,isIdentifierNameES6:u,isIdentifierES5:function(e,t){return i(e)&&!r(e,t)},isIdentifierES6:function(e,t){return u(e)&&!o(e,t)}};}(),vE.ast=AE.exports,vE.code=FE.exports,vE.keyword=xE.exports;const SE=vE.keyword.isIdentifierNameES5,{getLast:wE,hasNewline:TE,skipWhitespace:BE,isNonEmptyArray:NE,isNextLineEmptyAfterIndex:kE,getStringWidth:PE}=dc,{locStart:OE,locEnd:IE,hasSameLocStart:LE}=og,jE="(?:(?=.)\\s)",_E=new RegExp("^".concat(jE,"*:")),ME=new RegExp("^".concat(jE,"*::"));function RE(e){return "Block"===e.type||"CommentBlock"===e.type||"MultiLine"===e.type}function VE(e){return "Line"===e.type||"CommentLine"===e.type||"SingleLine"===e.type||"HashbangComment"===e.type||"HTMLOpen"===e.type||"HTMLClose"===e.type}const $E=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function WE(e){return e&&$E.has(e.type)}function qE(e){return "NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function UE(e){return "StringLiteral"===e.type||"Literal"===e.type&&"string"==typeof e.value}function zE(e){return "FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type}function GE(e){return ZE(e)&&"Identifier"===e.callee.type&&("async"===e.callee.name||"inject"===e.callee.name||"fakeAsync"===e.callee.name)}function HE(e){return "JSXElement"===e.type||"JSXFragment"===e.type}function JE(e){return "get"===e.kind||"set"===e.kind}function XE(e){return JE(e)||LE(e,e.value)}const YE=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]);const KE=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]);const QE=/^(?:skip|[fx]?(?:it|describe|test))$/;function ZE(e){return e&&("CallExpression"===e.type||"OptionalCallExpression"===e.type)}function eC(e){return e&&("MemberExpression"===e.type||"OptionalMemberExpression"===e.type)}function tC(e){return /^(?:\d+|\d+\.\d+)$/.test(e)}function nC(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function rC(e){return e.extra?e.extra.raw:e.raw}const oC={"==":!0,"!=":!0,"===":!0,"!==":!0},iC={"*":!0,"/":!0,"%":!0},uC={">>":!0,">>>":!0,"<<":!0};const sC={};for(const[e,t]of [["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].entries())for(const n of t)sC[n]=e;function aC(e){return sC[e]}const cC=new WeakMap;function lC(e){if(cC.has(e))return cC.get(e);const t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),cC.set(e,t),t}const pC=new WeakMap;function fC(e){if(pC.has(e))return pC.get(e);let t=e.arguments;return "ImportExpression"===e.type&&(t=[e.source],e.attributes&&t.push(e.attributes)),pC.set(e,t),t}function dC(e){return "prettier-ignore"===e.value.trim()&&!e.unignore}function hC(e){return e&&(e.prettierIgnore||yC(e,gC.PrettierIgnore))}const gC={Leading:2,Trailing:4,Dangling:8,Block:16,Line:32,PrettierIgnore:64,First:128,Last:256},mC=(e,t)=>{if("function"==typeof e&&(t=e,e=0),e||t)return (n,r,o)=>!(e&gC.Leading&&!n.leading||e&gC.Trailing&&!n.trailing||e&gC.Dangling&&(n.leading||n.trailing)||e&gC.Block&&!RE(n)||e&gC.Line&&!VE(n)||e&gC.First&&0!==r||e&gC.Last&&r!==o.length-1||e&gC.PrettierIgnore&&!dC(n)||t&&!t(n))};function yC(e,t,n){if(!e||!NE(e.comments))return !1;const r=mC(t,n);return !r||e.comments.some(r)}function DC(e,t,n){if(!e||!Array.isArray(e.comments))return [];const r=mC(t,n);return r?e.comments.filter(r):e.comments}function EC(e){return ZE(e)||"NewExpression"===e.type||"ImportExpression"===e.type}var CC={getFunctionParameters:lC,iterateFunctionParametersPath:function(e,t){const n=e.getValue();let r=0;const o=e=>t(e,r++);n.this&&e.call(o,"this"),Array.isArray(n.parameters)?e.each(o,"parameters"):Array.isArray(n.params)&&e.each(o,"params"),n.rest&&e.call(o,"rest");},getCallArguments:fC,iterateCallArgumentsPath:function(e,t){const n=e.getValue();"ImportExpression"===n.type?(e.call((e=>t(e,0)),"source"),n.attributes&&e.call((e=>t(e,1)),"attributes")):e.each(t,"arguments");},hasRestParameter:function(e){if(e.rest)return !0;const t=lC(e);return t.length>0&&"RestElement"===wE(t).type},getLeftSide:function(e){return e.expressions?e.expressions[0]:e.left||e.test||e.callee||e.object||e.tag||e.argument||e.expression},getLeftSidePathName:function(e,t){if(t.expressions)return ["expressions",0];if(t.left)return ["left"];if(t.test)return ["test"];if(t.object)return ["object"];if(t.callee)return ["callee"];if(t.tag)return ["tag"];if(t.argument)return ["argument"];if(t.expression)return ["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function(e){const t=e.getParentNode();return "declaration"===e.getName()&&WE(t)?t:null},getTypeScriptMappedTypeModifier:function(e,t){return "+"===e?"+"+t:"-"===e?"-"+t:t},hasFlowAnnotationComment:function(e){return NE(e)&&RE(e[0])&&ME.test(e[0].value)},hasFlowShorthandAnnotationComment:function(e){return e.extra&&e.extra.parenthesized&&NE(e.trailingComments)&&RE(e.trailingComments[0])&&_E.test(e.trailingComments[0].value)},hasLeadingOwnLineComment:function(e,t){return HE(t)?hC(t):yC(t,gC.Leading,(t=>TE(e,IE(t))))},hasNakedLeftSide:function(e){return "AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||ZE(e)||eC(e)||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||"TSAsExpression"===e.type||"TSNonNullExpression"===e.type},hasNode:function e(t,n){if(!t||"object"!=typeof t)return !1;if(Array.isArray(t))return t.some((t=>e(t,n)));const r=n(t);return "boolean"==typeof r?r:Object.values(t).some((t=>e(t,n)))},hasIgnoreComment:function(e){return hC(e.getValue())},hasNodeIgnoreComment:hC,identity:function(e){return e},isBinaryish:function(e){return YE.has(e.type)},isBlockComment:RE,isCallLikeExpression:EC,isEnabledHackPipeline:function(e){return Boolean(e.__isUsingHackPipeline)},isLineComment:VE,isPrettierIgnoreComment:dC,isCallExpression:ZE,isMemberExpression:eC,isExportDeclaration:WE,isFlowAnnotationComment:function(e,t){const n=OE(t),r=BE(e,IE(t));return !1!==r&&"/*"===e.slice(n,n+2)&&"*/"===e.slice(r,r+2)},isFunctionCompositionArgs:function(e){if(e.length<=1)return !1;let t=0;for(const n of e)if(zE(n)){if(t+=1,t>1)return !0}else if(ZE(n))for(const e of n.arguments)if(zE(e))return !0;return !1},isFunctionNotation:XE,isFunctionOrArrowExpression:zE,isGetterOrSetter:JE,isJestEachTemplateLiteral:function(e,t){const n=/^[fx]?(?:describe|it|test)$/;return "TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))},isJsxNode:HE,isLiteral:function(e){return "BooleanLiteral"===e.type||"DirectiveLiteral"===e.type||"Literal"===e.type||"NullLiteral"===e.type||"NumericLiteral"===e.type||"BigIntLiteral"===e.type||"DecimalLiteral"===e.type||"RegExpLiteral"===e.type||"StringLiteral"===e.type||"TemplateLiteral"===e.type||"TSTypeLiteral"===e.type||"JSXText"===e.type},isLongCurriedCallExpression:function(e){const t=e.getValue(),n=e.getParentNode();return ZE(t)&&ZE(n)&&n.callee===t&&t.arguments.length>n.arguments.length&&n.arguments.length>0},isSimpleCallArgument:function e(t,n){if(n>=2)return !1;const r=t=>e(t,n+1),o="Literal"===t.type&&"regex"in t&&t.regex.pattern||"RegExpLiteral"===t.type&&t.pattern;return !(o&&PE(o)>5)&&("Literal"===t.type||"BigIntLiteral"===t.type||"DecimalLiteral"===t.type||"BooleanLiteral"===t.type||"NullLiteral"===t.type||"NumericLiteral"===t.type||"RegExpLiteral"===t.type||"StringLiteral"===t.type||"Identifier"===t.type||"ThisExpression"===t.type||"Super"===t.type||"PrivateName"===t.type||"PrivateIdentifier"===t.type||"ArgumentPlaceholder"===t.type||"Import"===t.type||("TemplateLiteral"===t.type?t.quasis.every((e=>!e.value.raw.includes("\n")))&&t.expressions.every(r):"ObjectExpression"===t.type?t.properties.every((e=>!e.computed&&(e.shorthand||e.value&&r(e.value)))):"ArrayExpression"===t.type?t.elements.every((e=>null===e||r(e))):EC(t)?("ImportExpression"===t.type||e(t.callee,n))&&fC(t).every(r):eC(t)?e(t.object,n)&&e(t.property,n):"UnaryExpression"!==t.type||"!"!==t.operator&&"-"!==t.operator?"TSNonNullExpression"===t.type&&e(t.expression,n):e(t.argument,n)))},isMemberish:function(e){return eC(e)||"BindExpression"===e.type&&Boolean(e.object)},isNumericLiteral:qE,isSignedNumericLiteral:function(e){return "UnaryExpression"===e.type&&("+"===e.operator||"-"===e.operator)&&qE(e.argument)},isObjectProperty:function(e){return e&&("ObjectProperty"===e.type||"Property"===e.type&&!e.method&&"init"===e.kind)},isObjectType:function(e){return "ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"TSMappedType"===e.type},isObjectTypePropertyAFunction:function(e){return !("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||"FunctionTypeAnnotation"!==e.value.type||e.static||XE(e))},isSimpleType:function(e){return !!e&&(!("GenericTypeAnnotation"!==e.type&&"TSTypeReference"!==e.type||e.typeParameters)||!!KE.has(e.type))},isSimpleNumber:tC,isSimpleTemplateLiteral:function(e){let t="expressions";"TSTemplateLiteralType"===e.type&&(t="types");const n=e[t];return 0!==n.length&&n.every((e=>{if(yC(e))return !1;if("Identifier"===e.type||"ThisExpression"===e.type)return !0;if(eC(e)){let t=e;for(;eC(t);){if("Identifier"!==t.property.type&&"Literal"!==t.property.type&&"StringLiteral"!==t.property.type&&"NumericLiteral"!==t.property.type)return !1;if(t=t.object,yC(t))return !1}return "Identifier"===t.type||"ThisExpression"===t.type}return !1}))},isStringLiteral:UE,isStringPropSafeToUnquote:function(e,t){return "json"!==t.parser&&UE(e.key)&&rC(e.key).slice(1,-1)===e.key.value&&(SE(e.key.value)&&!("babel-ts"===t.parser&&"ClassProperty"===e.type||"typescript"===t.parser&&"PropertyDefinition"===e.type)||tC(e.key.value)&&String(Number(e.key.value))===e.key.value&&("babel"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser))},isTemplateOnItsOwnLine:function(e,t){return ("TemplateLiteral"===e.type&&nC(e)||"TaggedTemplateExpression"===e.type&&nC(e.quasi))&&!TE(t,OE(e),{backwards:!0})},isTestCall:function e(t,n){if("CallExpression"!==t.type)return !1;if(1===t.arguments.length){if(GE(t)&&n&&e(n))return zE(t.arguments[0]);if(function(e){return "Identifier"===e.callee.type&&/^(?:before|after)(?:Each|All)$/.test(e.callee.name)&&1===e.arguments.length}(t))return GE(t.arguments[0])}else if((2===t.arguments.length||3===t.arguments.length)&&("Identifier"===t.callee.type&&QE.test(t.callee.name)||function(e){return eC(e.callee)&&"Identifier"===e.callee.object.type&&"Identifier"===e.callee.property.type&&QE.test(e.callee.object.name)&&("only"===e.callee.property.name||"skip"===e.callee.property.name)}(t))&&(function(e){return "TemplateLiteral"===e.type}(t.arguments[0])||UE(t.arguments[0])))return !(t.arguments[2]&&!qE(t.arguments[2]))&&((2===t.arguments.length?zE(t.arguments[1]):function(e){return "FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(t.arguments[1])&&lC(t.arguments[1]).length<=1)||GE(t.arguments[1]));return !1},isTheOnlyJsxElementInMarkdown:function(e,t){if("markdown"!==e.parentParser&&"mdx"!==e.parentParser)return !1;const n=t.getNode();if(!n.expression||!HE(n.expression))return !1;const r=t.getParentNode();return "Program"===r.type&&1===r.body.length},isTSXFile:function(e){return e.filepath&&/\.tsx$/i.test(e.filepath)},isTypeAnnotationAFunction:function(e){return !("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||LE(e,e.typeAnnotation))},isNextLineEmpty:(e,t)=>{let{originalText:n}=t;return kE(n,IE(e))},needsHardlineAfterDanglingComment:function(e){if(!yC(e))return !1;const t=wE(DC(e,gC.Dangling));return t&&!RE(t)},rawText:rC,shouldPrintComma:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"es5";return "es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)},isBitwiseOperator:function(e){return Boolean(uC[e])||"|"===e||"^"===e||"&"===e},shouldFlatten:function(e,t){return aC(t)===aC(e)&&("**"!==e&&((!oC[e]||!oC[t])&&(!("%"===t&&iC[e]||"%"===e&&iC[t])&&((t===e||!iC[t]||!iC[e])&&(!uC[e]||!uC[t])))))},startsWithNoLookaheadToken:function e(t,n){switch((t=function(e){for(;e.left;)e=e.left;return e}(t)).type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return n;case"ObjectExpression":return !0;case"MemberExpression":case"OptionalMemberExpression":return e(t.object,n);case"TaggedTemplateExpression":return "FunctionExpression"!==t.tag.type&&e(t.tag,n);case"CallExpression":case"OptionalCallExpression":return "FunctionExpression"!==t.callee.type&&e(t.callee,n);case"ConditionalExpression":return e(t.test,n);case"UpdateExpression":return !t.prefix&&e(t.argument,n);case"BindExpression":return t.object&&e(t.object,n);case"SequenceExpression":return e(t.expressions[0],n);case"TSAsExpression":case"TSNonNullExpression":return e(t.expression,n);default:return !1}},getPrecedence:aC,hasComment:yC,getComments:DC,CommentCheckFlags:gC};const bC=au,{getStringWidth:vC,getIndentSize:AC}=dc,{builders:{join:FC,hardline:xC,softline:SC,group:wC,indent:TC,align:BC,lineSuffixBoundary:NC,addAlignmentToDoc:kC},printer:{printDocToString:PC},utils:{mapDoc:OC}}=Zc,{isBinaryish:IC,isJestEachTemplateLiteral:LC,isSimpleTemplateLiteral:jC,hasComment:_C,isMemberExpression:MC}=CC;function RC(e){return e.replace(/([\\`]|\${)/g,"\\$1")}var VC={printTemplateLiteral:function(e,t,n){const r=e.getValue();if("TemplateLiteral"===r.type&&LC(r,e.getParentNode())){const r=function(e,t,n){const r=e.getNode(),o=r.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(o.length>1||o.some((e=>e.length>0))){t.__inJestEach=!0;const i=e.map(n,"expressions");t.__inJestEach=!1;const u=[],s=i.map((e=>"${"+PC(e,Object.assign(Object.assign({},t),{},{printWidth:Number.POSITIVE_INFINITY,endOfLine:"lf"})).formatted+"}")),a=[{hasLineBreak:!1,cells:[]}];for(let e=1;e<r.quasis.length;e++){const t=bC(a),n=s[e-1];t.cells.push(n),n.includes("\n")&&(t.hasLineBreak=!0),r.quasis[e].value.raw.includes("\n")&&a.push({hasLineBreak:!1,cells:[]});}const c=Math.max(o.length,...a.map((e=>e.cells.length))),l=Array.from({length:c}).fill(0),p=[{cells:o},...a.filter((e=>e.cells.length>0))];for(const{cells:e}of p.filter((e=>!e.hasLineBreak)))for(const[t,n]of e.entries())l[t]=Math.max(l[t],vC(n));return u.push(NC,"`",TC([xC,FC(xC,p.map((e=>FC(" | ",e.cells.map(((t,n)=>e.hasLineBreak?t:t+" ".repeat(l[n]-vC(t))))))))]),xC,"`"),u}}(e,n,t);if(r)return r}let o="expressions";"TSTemplateLiteralType"===r.type&&(o="types");const i=[];let u=e.map(t,o);const s=jC(r);return s&&(u=u.map((e=>PC(e,Object.assign(Object.assign({},n),{},{printWidth:Number.POSITIVE_INFINITY})).formatted))),i.push(NC,"`"),e.each((e=>{const a=e.getName();if(i.push(t()),a<u.length){const{tabWidth:t}=n,c=e.getValue(),l=AC(c.value.raw,t);let p=u[a];if(!s){const e=r[o][a];(_C(e)||MC(e)||"ConditionalExpression"===e.type||"SequenceExpression"===e.type||"TSAsExpression"===e.type||IC(e))&&(p=[TC([SC,p]),SC]);}const f=0===l&&c.value.raw.endsWith("\n")?BC(Number.NEGATIVE_INFINITY,p):kC(p,l,t);i.push(wC(["${",f,NC,"}"]));}}),"quasis"),i.push("`"),i},printTemplateExpressions:function(e,t){return e.map((e=>function(e,t){const n=e.getValue();let r=t();return _C(n)&&(r=wC([TC([SC,r]),SC])),["${",r,NC,"}"]}(e,t)),"expressions")},escapeTemplateCharacters:function(e,t){return OC(e,(e=>"string"==typeof e?t?e.replace(/(\\*)`/g,"$1$1\\`"):RC(e):e))},uncookTemplateElementValue:RC};const{builders:{indent:$C,softline:WC,literalline:qC,dedentToRoot:UC}}=Zc,{escapeTemplateCharacters:zC}=VC;var GC=function(e,t,n){let r=e.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g,((e,t)=>"\\".repeat(t.length/2)+"`"));const o=function(e){const t=e.match(/^([^\S\n]*)\S/m);return null===t?"":t[1]}(r),i=""!==o;i&&(r=r.replace(new RegExp("^".concat(o),"gm"),""));const u=zC(n(r,{parser:"markdown",__inJsTemplate:!0},{stripTrailingHardline:!0}),!0);return ["`",i?$C([WC,u]):[qC,UC(u)],WC,"`"]};const{isNonEmptyArray:HC}=dc,{builders:{indent:JC,hardline:XC,softline:YC},utils:{mapDoc:KC,replaceEndOfLine:QC,cleanDoc:ZC}}=Zc,{printTemplateExpressions:eb}=VC;var tb=function(e,t,n){const r=e.getValue(),o=r.quasis.map((e=>e.value.raw));let i=0;return function(e,t,n){if(1===t.quasis.length&&!t.quasis[0].value.raw.trim())return "``";const r=function(e,t){if(!HC(t))return e;let n=0;const r=KC(ZC(e),(e=>"string"==typeof e&&e.includes("@prettier-placeholder")?e.split(/@prettier-placeholder-(\d+)-id/).map(((e,r)=>r%2==0?QC(e):(n++,t[e]))):e));return t.length===n?r:null}(e,n);if(!r)throw new Error("Couldn't insert all the expressions");return ["`",JC([XC,r]),YC,"`"]}(n(o.reduce(((e,t,n)=>0===n?t:e+"@prettier-placeholder-"+i+++"-id"+t),""),{parser:"scss"},{stripTrailingHardline:!0}),r,eb(e,t))};const{builders:{indent:nb,join:rb,hardline:ob}}=Zc,{escapeTemplateCharacters:ib,printTemplateExpressions:ub}=VC;function sb(e){const t=[];let n=!1;const r=e.map((e=>e.trim()));for(const[e,o]of r.entries())""!==o&&(""===r[e-1]&&n?t.push([ob,o]):t.push(o),n=!0);return 0===t.length?null:rb(ob,t)}var ab=function(e,t,n){const r=e.getValue(),o=r.quasis.length;if(1===o&&""===r.quasis[0].value.raw.trim())return "``";const i=ub(e,t),u=[];for(let e=0;e<o;e++){const t=0===e,s=e===o-1,a=r.quasis[e].value.cooked,c=a.split("\n"),l=c.length,p=i[e],f=l>2&&""===c[0].trim()&&""===c[1].trim(),d=l>2&&""===c[l-1].trim()&&""===c[l-2].trim(),h=c.every((e=>/^\s*(?:#[^\n\r]*)?$/.test(e)));if(!s&&/#[^\n\r]*$/.test(c[l-1]))return null;let g=null;g=h?sb(c):n(a,{parser:"graphql"},{stripTrailingHardline:!0}),g?(g=ib(g,!1),!t&&f&&u.push(""),u.push(g),!s&&d&&u.push("")):t||s||!f||u.push(""),p&&u.push(p);}return ["`",nb([ob,rb(ob,u)]),ob,"`"]};const{builders:{indent:cb,line:lb,hardline:pb,group:fb},utils:{mapDoc:db}}=Zc,{printTemplateExpressions:hb,uncookTemplateElementValue:gb}=VC;let mb=0;var yb=function(e,t,n,r,o){let{parser:i}=o;const u=e.getValue(),s=mb;mb=mb+1>>>0;const a=e=>"PRETTIER_HTML_PLACEHOLDER_".concat(e,"_").concat(s,"_IN_JS"),c=u.quasis.map(((e,t,n)=>t===n.length-1?e.value.cooked:e.value.cooked+a(t))).join(""),l=hb(e,t);if(0===l.length&&0===c.trim().length)return "``";const p=new RegExp(a("(\\d+)"),"g");let f=0;const d=n(c,{parser:i,__onHtmlRoot(e){f=e.children.length;}},{stripTrailingHardline:!0}),h=db(d,(e=>{if("string"!=typeof e)return e;const t=[],n=e.split(p);for(let e=0;e<n.length;e++){let o=n[e];if(e%2==0){o&&(o=gb(o),r.__embeddedInHtml&&(o=o.replace(/<\/(script)\b/gi,"<\\/$1")),t.push(o));continue}const i=Number(o);t.push(l[i]);}return t})),g=/^\s/.test(c)?" ":"",m=/\s$/.test(c)?" ":"",y="ignore"===r.htmlWhitespaceSensitivity?pb:g&&m?lb:null;return fb(y?["`",cb([y,fb(h)]),y,"`"]:["`",g,f>1?cb(fb(h)):fb(h),m,"`"])};const{hasComment:Db,CommentCheckFlags:Eb,isObjectProperty:Cb}=CC,bb=GC,vb=tb,Ab=ab,Fb=yb;function xb(e){return function(e){const t=e.getValue(),n=e.getParentNode(),r=e.getParentNode(1);return r&&t.quasis&&"JSXExpressionContainer"===n.type&&"JSXElement"===r.type&&"style"===r.openingElement.name.name&&r.openingElement.attributes.some((e=>"jsx"===e.name.name))||n&&"TaggedTemplateExpression"===n.type&&"Identifier"===n.tag.type&&"css"===n.tag.name||n&&"TaggedTemplateExpression"===n.type&&"MemberExpression"===n.tag.type&&"css"===n.tag.object.name&&("global"===n.tag.property.name||"resolve"===n.tag.property.name)}(e)||function(e){const t=e.getParentNode();if(!t||"TaggedTemplateExpression"!==t.type)return !1;const n="ParenthesizedExpression"===t.tag.type?t.tag.expression:t.tag;switch(n.type){case"MemberExpression":return wb(n.object)||Tb(n);case"CallExpression":return wb(n.callee)||"MemberExpression"===n.callee.type&&("MemberExpression"===n.callee.object.type&&(wb(n.callee.object.object)||Tb(n.callee.object))||"CallExpression"===n.callee.object.type&&wb(n.callee.object.callee));case"Identifier":return "css"===n.name;default:return !1}}(e)||function(e){const t=e.getParentNode(),n=e.getParentNode(1);return n&&"JSXExpressionContainer"===t.type&&"JSXAttribute"===n.type&&"JSXIdentifier"===n.name.type&&"css"===n.name.name}(e)||function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"ArrayExpression"===e.type&&"elements"===t),((e,t)=>Cb(e)&&"Identifier"===e.key.type&&"styles"===e.key.name&&"value"===t),...Sb)}(e)?"css":function(e){const t=e.getValue(),n=e.getParentNode();return Bb(t,"GraphQL")||n&&("TaggedTemplateExpression"===n.type&&("MemberExpression"===n.tag.type&&"graphql"===n.tag.object.name&&"experimental"===n.tag.property.name||"Identifier"===n.tag.type&&("gql"===n.tag.name||"graphql"===n.tag.name))||"CallExpression"===n.type&&"Identifier"===n.callee.type&&"graphql"===n.callee.name)}(e)?"graphql":function(e){return Bb(e.getValue(),"HTML")||e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"TaggedTemplateExpression"===e.type&&"Identifier"===e.tag.type&&"html"===e.tag.name&&"quasi"===t))}(e)?"html":function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>Cb(e)&&"Identifier"===e.key.type&&"template"===e.key.name&&"value"===t),...Sb)}(e)?"angular":function(e){const t=e.getValue(),n=e.getParentNode();return n&&"TaggedTemplateExpression"===n.type&&1===t.quasis.length&&"Identifier"===n.tag.type&&("md"===n.tag.name||"markdown"===n.tag.name)}(e)?"markdown":void 0}const Sb=[(e,t)=>"ObjectExpression"===e.type&&"properties"===t,(e,t)=>"CallExpression"===e.type&&"Identifier"===e.callee.type&&"Component"===e.callee.name&&"arguments"===t,(e,t)=>"Decorator"===e.type&&"expression"===t];function wb(e){return "Identifier"===e.type&&"styled"===e.name}function Tb(e){return /^[A-Z]/.test(e.object.name)&&"extend"===e.property.name}function Bb(e,t){return Db(e,Eb.Block|Eb.Leading,(e=>{let{value:n}=e;return n===" ".concat(t," ")}))}var Nb=function(e,t,n,r){const o=e.getValue();if("TemplateLiteral"!==o.type||function(e){let{quasis:t}=e;return t.some((e=>{let{value:{cooked:t}}=e;return null===t}))}(o))return;const i=xb(e);return i?"markdown"===i?bb(e,t,n):"css"===i?vb(e,t,n):"graphql"===i?Ab(e,t,n):"html"===i||"angular"===i?Fb(e,t,n,r,{parser:i}):void 0:void 0};const{isBlockComment:kb}=CC,Pb=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]),Ob=e=>{for(const t of e.quasis)delete t.value;};function Ib(e,t,n){if("Program"===e.type&&delete t.sourceType,"BigIntLiteral"!==e.type&&"BigIntLiteralTypeAnnotation"!==e.type||t.value&&(t.value=t.value.toLowerCase()),"BigIntLiteral"!==e.type&&"Literal"!==e.type||t.bigint&&(t.bigint=t.bigint.toLowerCase()),"DecimalLiteral"===e.type&&(t.value=Number(t.value)),"Literal"===e.type&&t.decimal&&(t.decimal=Number(t.decimal)),"EmptyStatement"===e.type)return null;if("JSXText"===e.type)return null;if("JSXExpressionContainer"===e.type&&("Literal"===e.expression.type||"StringLiteral"===e.expression.type)&&" "===e.expression.value)return null;if("Property"!==e.type&&"ObjectProperty"!==e.type&&"MethodDefinition"!==e.type&&"ClassProperty"!==e.type&&"ClassMethod"!==e.type&&"PropertyDefinition"!==e.type&&"TSDeclareMethod"!==e.type&&"TSPropertySignature"!==e.type&&"ObjectTypeProperty"!==e.type||"object"!=typeof e.key||!e.key||"Literal"!==e.key.type&&"NumericLiteral"!==e.key.type&&"StringLiteral"!==e.key.type&&"Identifier"!==e.key.type||delete t.key,"JSXElement"===e.type&&"style"===e.openingElement.name.name&&e.openingElement.attributes.some((e=>"jsx"===e.name.name)))for(const{type:e,expression:n}of t.children)"JSXExpressionContainer"===e&&"TemplateLiteral"===n.type&&Ob(n);"JSXAttribute"===e.type&&"css"===e.name.name&&"JSXExpressionContainer"===e.value.type&&"TemplateLiteral"===e.value.expression.type&&Ob(t.value.expression),"JSXAttribute"===e.type&&e.value&&"Literal"===e.value.type&&/["']|&quot;|&apos;/.test(e.value.value)&&(t.value.value=t.value.value.replace(/["']|&quot;|&apos;/g,'"'));const r=e.expression||e.callee;if("Decorator"===e.type&&"CallExpression"===r.type&&"Component"===r.callee.name&&1===r.arguments.length){const n=e.expression.arguments[0].properties;for(const[e,r]of t.expression.arguments[0].properties.entries())switch(n[e].key.name){case"styles":"ArrayExpression"===r.value.type&&Ob(r.value.elements[0]);break;case"template":"TemplateLiteral"===r.value.type&&Ob(r.value);}}if("TaggedTemplateExpression"!==e.type||"MemberExpression"!==e.tag.type&&("Identifier"!==e.tag.type||"gql"!==e.tag.name&&"graphql"!==e.tag.name&&"css"!==e.tag.name&&"md"!==e.tag.name&&"markdown"!==e.tag.name&&"html"!==e.tag.name)&&"CallExpression"!==e.tag.type||Ob(t.quasi),"TemplateLiteral"===e.type){const r=e.leadingComments&&e.leadingComments.some((e=>kb(e)&&["GraphQL","HTML"].some((t=>e.value===" ".concat(t," ")))));(r||"CallExpression"===n.type&&"graphql"===n.callee.name||!e.leadingComments)&&Ob(t);}return "InterpreterDirective"===e.type&&(t.value=t.value.trimEnd()),"TSIntersectionType"!==e.type&&"TSUnionType"!==e.type||1!==e.types.length?void 0:t.types[0]}Ib.ignoredProperties=Pb;var Lb=Ib,jb={},_b={exports:{}};const Mb=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");const t=e.match(/(?:\r?\n)/g)||[];if(0===t.length)return;const n=t.filter((e=>"\r\n"===e)).length;return n>t.length-n?"\r\n":"\n"};function Rb(){const e=yf;return Rb=function(){return e},e}function Vb(){const e=function(e){return e&&e.__esModule?e:{default:e}}(_b.exports);return Vb=function(){return e},e}_b.exports=Mb,_b.exports.graceful=e=>"string"==typeof e&&Mb(e)||"\n",Object.defineProperty(jb,"__esModule",{value:!0}),jb.extract=function(e){const t=e.match(qb);return t?t[0].trimLeft():""},jb.strip=function(e){const t=e.match(qb);return t&&t[0]?e.substring(t[0].length):e},jb.parse=function(e){return Yb(e).pragmas},jb.parseWithComments=Yb,jb.print=function(e){let{comments:t="",pragmas:n={}}=e;const r=(0, Vb().default)(t)||Rb().EOL,o=" *",i=Object.keys(n),u=i.map((e=>Kb(e,n[e]))).reduce(((e,t)=>e.concat(t)),[]).map((e=>" * "+e+r)).join("");if(!t){if(0===i.length)return "";if(1===i.length&&!Array.isArray(n[i[0]])){const e=n[i[0]];return "".concat("/**"," ").concat(Kb(i[0],e)[0]).concat(" */")}}const s=t.split(r).map((e=>"".concat(o," ").concat(e))).join(r)+r;return "/**"+r+(t?s:"")+(t&&i.length?o+r:"")+u+" */"};const $b=/\*\/$/,Wb=/^\/\*\*/,qb=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,Ub=/(^|\s+)\/\/([^\r\n]*)/g,zb=/^(\r?\n)+/,Gb=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,Hb=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,Jb=/(\r?\n|^) *\* ?/g,Xb=[];function Yb(e){const t=(0, Vb().default)(e)||Rb().EOL;e=e.replace(Wb,"").replace($b,"").replace(Jb,"$1");let n="";for(;n!==e;)n=e,e=e.replace(Gb,"".concat(t,"$1 $2").concat(t));e=e.replace(zb,"").trimRight();const r=Object.create(null),o=e.replace(Hb,"").replace(zb,"").trimRight();let i;for(;i=Hb.exec(e);){const e=i[2].replace(Ub,"");"string"==typeof r[i[1]]||Array.isArray(r[i[1]])?r[i[1]]=Xb.concat(r[i[1]],e):r[i[1]]=e;}return {comments:o,pragmas:r}}function Kb(e,t){return Xb.concat(t).map((t=>"@".concat(e," ").concat(t).trim()))}const{parseWithComments:Qb,strip:Zb,extract:ev,print:tv}=jb,{getShebang:nv}=dc,{normalizeEndOfLine:rv}=hc;function ov(e){const t=nv(e);t&&(e=e.slice(t.length+1));const n=ev(e),{pragmas:r,comments:o}=Qb(n);return {shebang:t,text:e,pragmas:r,comments:o}}var iv={hasPragma:function(e){const t=Object.keys(ov(e).pragmas);return t.includes("prettier")||t.includes("format")},insertPragma:function(e){const{shebang:t,text:n,pragmas:r,comments:o}=ov(e),i=Zb(n),u=tv({pragmas:Object.assign({format:""},r),comments:o.trimStart()});return (t?"".concat(t,"\n"):"")+rv(u)+(i.startsWith("\n")?"\n":"\n\n")+i}};const{getLast:uv,hasNewline:sv,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:av,getNextNonSpaceNonCommentCharacter:cv,hasNewlineInRange:lv,addLeadingComment:pv,addTrailingComment:fv,addDanglingComment:dv,getNextNonSpaceNonCommentCharacterIndex:hv,isNonEmptyArray:gv}=dc,{isBlockComment:mv,getFunctionParameters:yv,isPrettierIgnoreComment:Dv,isJsxNode:Ev,hasFlowShorthandAnnotationComment:Cv,hasFlowAnnotationComment:bv,hasIgnoreComment:vv,isCallLikeExpression:Av,getCallArguments:Fv,isCallExpression:xv,isMemberExpression:Sv,isObjectProperty:wv,getComments:Tv,CommentCheckFlags:Bv}=CC,{locStart:Nv,locEnd:kv}=og;function Pv(e,t){const n=(e.body||e.properties).find((e=>{let{type:t}=e;return "EmptyStatement"!==t}));n?pv(n,t):dv(e,t);}function Ov(e,t){"BlockStatement"===e.type?Pv(e,t):pv(e,t);}function Iv(e){let{comment:t,followingNode:n}=e;return !(!n||!cA(t))&&(pv(n,t),!0)}function Lv(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o,text:i}=e;if(!r||"IfStatement"!==r.type||!o)return !1;return ")"===cv(i,t,kv)?(fv(n,t),!0):n===r.consequent&&o===r.alternate?("BlockStatement"===n.type?fv(n,t):dv(r,t),!0):"BlockStatement"===o.type?(Pv(o,t),!0):"IfStatement"===o.type?(Ov(o.consequent,t),!0):r.consequent===o&&(pv(o,t),!0)}function jv(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o,text:i}=e;if(!r||"WhileStatement"!==r.type||!o)return !1;return ")"===cv(i,t,kv)?(fv(n,t),!0):"BlockStatement"===o.type?(Pv(o,t),!0):r.body===o&&(pv(o,t),!0)}function _v(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o}=e;return !(!r||"TryStatement"!==r.type&&"CatchClause"!==r.type||!o)&&("CatchClause"===r.type&&n?(fv(n,t),!0):"BlockStatement"===o.type?(Pv(o,t),!0):"TryStatement"===o.type?(Ov(o.finalizer,t),!0):"CatchClause"===o.type&&(Ov(o.body,t),!0))}function Mv(e){let{comment:t,enclosingNode:n,followingNode:r}=e;return !(!Sv(n)||!r||"Identifier"!==r.type)&&(pv(n,t),!0)}function Rv(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o,text:i}=e;const u=n&&!lv(i,kv(n),Nv(t));return !(n&&u||!r||"ConditionalExpression"!==r.type&&"TSConditionalType"!==r.type||!o)&&(pv(o,t),!0)}function Vv(e){let{comment:t,precedingNode:n,enclosingNode:r}=e;return !(!wv(r)||!r.shorthand||r.key!==n||"AssignmentPattern"!==r.value.type)&&(fv(r.value.left,t),!0)}function $v(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o}=e;if(r&&("ClassDeclaration"===r.type||"ClassExpression"===r.type||"DeclareClass"===r.type||"DeclareInterface"===r.type||"InterfaceDeclaration"===r.type||"TSInterfaceDeclaration"===r.type)){if(gv(r.decorators)&&(!o||"Decorator"!==o.type))return fv(uv(r.decorators),t),!0;if(r.body&&o===r.body)return Pv(r.body,t),!0;if(o)for(const e of ["implements","extends","mixins"])if(r[e]&&o===r[e][0])return !n||n!==r.id&&n!==r.typeParameters&&n!==r.superClass?dv(r,t,e):fv(n,t),!0}return !1}function Wv(e){let{comment:t,precedingNode:n,enclosingNode:r,text:o}=e;return (r&&n&&("Property"===r.type||"TSDeclareMethod"===r.type||"TSAbstractMethodDefinition"===r.type)&&"Identifier"===n.type&&r.key===n&&":"!==cv(o,n,kv)||!(!n||!r||"Decorator"!==n.type||"ClassMethod"!==r.type&&"ClassProperty"!==r.type&&"PropertyDefinition"!==r.type&&"TSAbstractPropertyDefinition"!==r.type&&"TSAbstractMethodDefinition"!==r.type&&"TSDeclareMethod"!==r.type&&"MethodDefinition"!==r.type))&&(fv(n,t),!0)}function qv(e){let{comment:t,precedingNode:n,enclosingNode:r,text:o}=e;return "("===cv(o,t,kv)&&(!(!n||!r||"FunctionDeclaration"!==r.type&&"FunctionExpression"!==r.type&&"ClassMethod"!==r.type&&"MethodDefinition"!==r.type&&"ObjectMethod"!==r.type)&&(fv(n,t),!0))}function Uv(e){let{comment:t,enclosingNode:n,text:r}=e;if(!n||"ArrowFunctionExpression"!==n.type)return !1;const o=hv(r,t,kv);return !1!==o&&"=>"===r.slice(o,o+2)&&(dv(n,t),!0)}function zv(e){let{comment:t,enclosingNode:n,text:r}=e;return ")"===cv(r,t,kv)&&(n&&(aA(n)&&0===yv(n).length||Av(n)&&0===Fv(n).length)?(dv(n,t),!0):!(!n||"MethodDefinition"!==n.type&&"TSAbstractMethodDefinition"!==n.type||0!==yv(n.value).length)&&(dv(n.value,t),!0))}function Gv(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o,text:i}=e;if(n&&"FunctionTypeParam"===n.type&&r&&"FunctionTypeAnnotation"===r.type&&o&&"FunctionTypeParam"!==o.type)return fv(n,t),!0;if(n&&("Identifier"===n.type||"AssignmentPattern"===n.type)&&r&&aA(r)&&")"===cv(i,t,kv))return fv(n,t),!0;if(r&&"FunctionDeclaration"===r.type&&o&&"BlockStatement"===o.type){const e=(()=>{const e=yv(r);if(e.length>0)return av(i,kv(uv(e)));const t=av(i,kv(r.id));return !1!==t&&av(i,t+1)})();if(Nv(t)>e)return Pv(o,t),!0}return !1}function Hv(e){let{comment:t,enclosingNode:n}=e;return !(!n||"ImportSpecifier"!==n.type)&&(pv(n,t),!0)}function Jv(e){let{comment:t,enclosingNode:n}=e;return !(!n||"LabeledStatement"!==n.type)&&(pv(n,t),!0)}function Xv(e){let{comment:t,enclosingNode:n}=e;return !(!n||"ContinueStatement"!==n.type&&"BreakStatement"!==n.type||n.label)&&(fv(n,t),!0)}function Yv(e){let{comment:t,precedingNode:n,enclosingNode:r}=e;return !!(xv(r)&&n&&r.callee===n&&r.arguments.length>0)&&(pv(r.arguments[0],t),!0)}function Kv(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o}=e;return !r||"UnionTypeAnnotation"!==r.type&&"TSUnionType"!==r.type?(o&&("UnionTypeAnnotation"===o.type||"TSUnionType"===o.type)&&Dv(t)&&(o.types[0].prettierIgnore=!0,t.unignore=!0),!1):(Dv(t)&&(o.prettierIgnore=!0,t.unignore=!0),!!n&&(fv(n,t),!0))}function Qv(e){let{comment:t,enclosingNode:n}=e;return !!wv(n)&&(pv(n,t),!0)}function Zv(e){let{comment:t,enclosingNode:n,followingNode:r,ast:o,isLastComment:i}=e;return o&&o.body&&0===o.body.length?(i?dv(o,t):pv(o,t),!0):n&&"Program"===n.type&&0===n.body.length&&!gv(n.directives)?(i?dv(n,t):pv(n,t),!0):!(!r||"Program"!==r.type||0!==r.body.length||!n||"ModuleExpression"!==n.type)&&(dv(r,t),!0)}function eA(e){let{comment:t,enclosingNode:n}=e;return !(!n||"ForInStatement"!==n.type&&"ForOfStatement"!==n.type)&&(pv(n,t),!0)}function tA(e){let{comment:t,precedingNode:n,enclosingNode:r,text:o}=e;return !!(n&&"ImportSpecifier"===n.type&&r&&"ImportDeclaration"===r.type&&sv(o,kv(t)))&&(fv(n,t),!0)}function nA(e){let{comment:t,enclosingNode:n}=e;return !(!n||"AssignmentPattern"!==n.type)&&(pv(n,t),!0)}function rA(e){let{comment:t,enclosingNode:n}=e;return !(!n||"TypeAlias"!==n.type)&&(pv(n,t),!0)}function oA(e){let{comment:t,enclosingNode:n,followingNode:r}=e;return !(!n||"VariableDeclarator"!==n.type&&"AssignmentExpression"!==n.type||!r||"ObjectExpression"!==r.type&&"ArrayExpression"!==r.type&&"TemplateLiteral"!==r.type&&"TaggedTemplateExpression"!==r.type&&!mv(t))&&(pv(r,t),!0)}function iA(e){let{comment:t,enclosingNode:n,followingNode:r,text:o}=e;return !(r||!n||"TSMethodSignature"!==n.type&&"TSDeclareFunction"!==n.type&&"TSAbstractMethodDefinition"!==n.type||";"!==cv(o,t,kv))&&(fv(n,t),!0)}function uA(e){let{comment:t,enclosingNode:n,followingNode:r}=e;if(Dv(t)&&n&&"TSMappedType"===n.type&&r&&"TSTypeParameter"===r.type&&r.constraint)return n.prettierIgnore=!0,t.unignore=!0,!0}function sA(e){let{comment:t,precedingNode:n,enclosingNode:r,followingNode:o}=e;return !(!r||"TSMappedType"!==r.type)&&(o&&"TSTypeParameter"===o.type&&o.name?(pv(o.name,t),!0):!(!n||"TSTypeParameter"!==n.type||!n.constraint)&&(fv(n.constraint,t),!0))}function aA(e){return "ArrowFunctionExpression"===e.type||"FunctionExpression"===e.type||"FunctionDeclaration"===e.type||"ObjectMethod"===e.type||"ClassMethod"===e.type||"TSDeclareFunction"===e.type||"TSCallSignatureDeclaration"===e.type||"TSConstructSignatureDeclaration"===e.type||"TSMethodSignature"===e.type||"TSConstructorType"===e.type||"TSFunctionType"===e.type||"TSDeclareMethod"===e.type}function cA(e){return mv(e)&&"*"===e.value[0]&&/@type\b/.test(e.value)}var lA={handleOwnLineComment:function(e){return [uA,Gv,Mv,Lv,jv,_v,$v,Hv,eA,Kv,Zv,tA,nA,Wv,Jv].some((t=>t(e)))},handleEndOfLineComment:function(e){return [Iv,Gv,Rv,Hv,Lv,jv,_v,$v,Jv,Yv,Qv,Zv,rA,oA].some((t=>t(e)))},handleRemainingComment:function(e){return [uA,Lv,jv,Vv,zv,Wv,Zv,Uv,qv,sA,Xv,iA].some((t=>t(e)))},isTypeCastComment:cA,getCommentChildNodes:function(e,t){if(("typescript"===t.parser||"flow"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser)&&"MethodDefinition"===e.type&&e.value&&"FunctionExpression"===e.value.type&&0===yv(e.value).length&&!e.value.returnType&&!gv(e.value.typeParameters)&&e.value.body)return [...e.decorators||[],e.key,e.value.body]},willPrintOwnComments:function(e){const t=e.getValue(),n=e.getParentNode();return (t&&(Ev(t)||Cv(t)||xv(n)&&(e=>bv(Tv(e,Bv.Leading))||bv(Tv(e,Bv.Trailing)))(t))||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!vv(e)||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type)}};const pA=au,{getFunctionParameters:fA,getLeftSidePathName:dA,hasFlowShorthandAnnotationComment:hA,hasNakedLeftSide:gA,hasNode:mA,isBitwiseOperator:yA,startsWithNoLookaheadToken:DA,shouldFlatten:EA,getPrecedence:CA,isCallExpression:bA,isMemberExpression:vA,isObjectProperty:AA}=CC;function FA(e,t){const n=e.getParentNode();if(!n)return !1;const r=e.getName(),o=e.getNode();if(t.__isInHtmlInterpolation&&!t.bracketSpacing&&function(e){if("ObjectExpression"===e.type)return !0;return !1}(o)&&xA(e))return !0;if(function(e){return "BlockStatement"===e.type||"BreakStatement"===e.type||"ClassBody"===e.type||"ClassDeclaration"===e.type||"ClassMethod"===e.type||"ClassProperty"===e.type||"PropertyDefinition"===e.type||"ClassPrivateProperty"===e.type||"ContinueStatement"===e.type||"DebuggerStatement"===e.type||"DeclareClass"===e.type||"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type||"DeclareFunction"===e.type||"DeclareInterface"===e.type||"DeclareModule"===e.type||"DeclareModuleExports"===e.type||"DeclareVariable"===e.type||"DoWhileStatement"===e.type||"EnumDeclaration"===e.type||"ExportAllDeclaration"===e.type||"ExportDefaultDeclaration"===e.type||"ExportNamedDeclaration"===e.type||"ExpressionStatement"===e.type||"ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type||"FunctionDeclaration"===e.type||"IfStatement"===e.type||"ImportDeclaration"===e.type||"InterfaceDeclaration"===e.type||"LabeledStatement"===e.type||"MethodDefinition"===e.type||"ReturnStatement"===e.type||"SwitchStatement"===e.type||"ThrowStatement"===e.type||"TryStatement"===e.type||"TSDeclareFunction"===e.type||"TSEnumDeclaration"===e.type||"TSImportEqualsDeclaration"===e.type||"TSInterfaceDeclaration"===e.type||"TSModuleDeclaration"===e.type||"TSNamespaceExportDeclaration"===e.type||"TypeAlias"===e.type||"VariableDeclaration"===e.type||"WhileStatement"===e.type||"WithStatement"===e.type}(o))return !1;if("flow"!==t.parser&&hA(e.getValue()))return !0;if("Identifier"===o.type)return !!(o.extra&&o.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(o.name))||"left"===r&&"async"===o.name&&"ForOfStatement"===n.type&&!n.await;switch(n.type){case"ParenthesizedExpression":return !1;case"ClassDeclaration":case"ClassExpression":if("superClass"===r&&("ArrowFunctionExpression"===o.type||"AssignmentExpression"===o.type||"AwaitExpression"===o.type||"BinaryExpression"===o.type||"ConditionalExpression"===o.type||"LogicalExpression"===o.type||"NewExpression"===o.type||"ObjectExpression"===o.type||"ParenthesizedExpression"===o.type||"SequenceExpression"===o.type||"TaggedTemplateExpression"===o.type||"UnaryExpression"===o.type||"UpdateExpression"===o.type||"YieldExpression"===o.type||"TSNonNullExpression"===o.type))return !0;break;case"ExportDefaultDeclaration":return SA(e,t)||"SequenceExpression"===o.type;case"Decorator":if("expression"===r){let e=!1,n=!1,r=o;for(;r;)switch(r.type){case"MemberExpression":n=!0,r=r.object;break;case"CallExpression":if(n||e)return "typescript"!==t.parser;e=!0,r=r.callee;break;case"Identifier":return !1;case"TaggedTemplateExpression":return "typescript"!==t.parser;default:return !0}return !0}break;case"ExpressionStatement":if(DA(o,!0))return !0;break;case"ArrowFunctionExpression":if("body"===r&&"SequenceExpression"!==o.type&&DA(o,!1))return !0}switch(o.type){case"UpdateExpression":if("UnaryExpression"===n.type)return o.prefix&&("++"===o.operator&&"+"===n.operator||"--"===o.operator&&"-"===n.operator);case"UnaryExpression":switch(n.type){case"UnaryExpression":return o.operator===n.operator&&("+"===o.operator||"-"===o.operator);case"BindExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":return !0;case"MemberExpression":case"OptionalMemberExpression":return "object"===r;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return "callee"===r;case"BinaryExpression":return "left"===r&&"**"===n.operator;default:return !1}case"BinaryExpression":if("UpdateExpression"===n.type)return !0;if("in"===o.operator&&function(e){let t=0,n=e.getValue();for(;n;){const r=e.getParentNode(t++);if(r&&"ForStatement"===r.type&&r.init===n)return !0;n=r;}return !1}(e))return !0;if("|>"===o.operator&&o.extra&&o.extra.parenthesized){const t=e.getParentNode(1);if("BinaryExpression"===t.type&&"|>"===t.operator)return !0}case"TSTypeAssertion":case"TSAsExpression":case"LogicalExpression":switch(n.type){case"TSAsExpression":return "TSAsExpression"!==o.type;case"ConditionalExpression":return "TSAsExpression"===o.type;case"CallExpression":case"NewExpression":case"OptionalCallExpression":return "callee"===r;case"ClassExpression":case"ClassDeclaration":return "superClass"===r;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSNonNullExpression":case"UpdateExpression":return !0;case"MemberExpression":case"OptionalMemberExpression":return "object"===r;case"AssignmentExpression":case"AssignmentPattern":return "left"===r&&("TSTypeAssertion"===o.type||"TSAsExpression"===o.type);case"LogicalExpression":if("LogicalExpression"===o.type)return n.operator!==o.operator;case"BinaryExpression":{const{operator:e,type:t}=o;if(!e&&"TSTypeAssertion"!==t)return !0;const i=CA(e),u=n.operator,s=CA(u);return s>i||("right"===r&&s===i||(s===i&&!EA(u,e)||(s<i&&"%"===e?"+"===u||"-"===u:!!yA(u))))}default:return !1}case"SequenceExpression":switch(n.type){case"ReturnStatement":case"ForStatement":return !1;case"ExpressionStatement":return "expression"!==r;case"ArrowFunctionExpression":return "body"!==r;default:return !0}case"YieldExpression":if("UnaryExpression"===n.type||"AwaitExpression"===n.type||"TSAsExpression"===n.type||"TSNonNullExpression"===n.type)return !0;case"AwaitExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":return !0;case"MemberExpression":case"OptionalMemberExpression":return "object"===r;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return "callee"===r;case"ConditionalExpression":return "test"===r;case"BinaryExpression":return !(!o.argument&&"|>"===n.operator);default:return !1}case"TSConditionalType":if("extendsType"===r&&"TSConditionalType"===n.type)return !0;case"TSFunctionType":case"TSConstructorType":if("checkType"===r&&"TSConditionalType"===n.type)return !0;case"TSUnionType":case"TSIntersectionType":if(("TSUnionType"===n.type||"TSIntersectionType"===n.type)&&n.types.length>1&&(!o.types||o.types.length>1))return !0;case"TSInferType":if("TSInferType"===o.type&&"TSRestType"===n.type)return !1;case"TSTypeOperator":return "TSArrayType"===n.type||"TSOptionalType"===n.type||"TSRestType"===n.type||"objectType"===r&&"TSIndexedAccessType"===n.type||"TSTypeOperator"===n.type||"TSTypeAnnotation"===n.type&&e.getParentNode(1).type.startsWith("TSJSDoc");case"ArrayTypeAnnotation":return "NullableTypeAnnotation"===n.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return "ArrayTypeAnnotation"===n.type||"NullableTypeAnnotation"===n.type||"IntersectionTypeAnnotation"===n.type||"UnionTypeAnnotation"===n.type||"objectType"===r&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type);case"NullableTypeAnnotation":return "ArrayTypeAnnotation"===n.type||"objectType"===r&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type);case"FunctionTypeAnnotation":{const t="NullableTypeAnnotation"===n.type?e.getParentNode(1):n;return "UnionTypeAnnotation"===t.type||"IntersectionTypeAnnotation"===t.type||"ArrayTypeAnnotation"===t.type||"objectType"===r&&("IndexedAccessType"===t.type||"OptionalIndexedAccessType"===t.type)||"NullableTypeAnnotation"===t.type||"FunctionTypeParam"===n.type&&null===n.name&&fA(o).some((e=>e.typeAnnotation&&"NullableTypeAnnotation"===e.typeAnnotation.type))}case"OptionalIndexedAccessType":return "objectType"===r&&"IndexedAccessType"===n.type;case"TypeofTypeAnnotation":return "objectType"===r&&("IndexedAccessType"===n.type||"OptionalIndexedAccessType"===n.type);case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof o.value&&"ExpressionStatement"===n.type&&!n.directive){const t=e.getParentNode(1);return "Program"===t.type||"BlockStatement"===t.type}return "object"===r&&"MemberExpression"===n.type&&"number"==typeof o.value;case"AssignmentExpression":{const t=e.getParentNode(1);return "body"===r&&"ArrowFunctionExpression"===n.type||("key"!==r||"ClassProperty"!==n.type&&"PropertyDefinition"!==n.type||!n.computed)&&(("init"!==r&&"update"!==r||"ForStatement"!==n.type)&&("ExpressionStatement"===n.type?"ObjectPattern"===o.left.type:("key"!==r||"TSPropertySignature"!==n.type)&&("AssignmentExpression"!==n.type&&(("SequenceExpression"!==n.type||!t||"ForStatement"!==t.type||t.init!==n&&t.update!==n)&&(("value"!==r||"Property"!==n.type||!t||"ObjectPattern"!==t.type||!t.properties.includes(n))&&"NGChainedExpression"!==n.type)))))}case"ConditionalExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSNonNullExpression":return !0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return "callee"===r;case"ConditionalExpression":return "test"===r;case"MemberExpression":case"OptionalMemberExpression":return "object"===r;default:return !1}case"FunctionExpression":switch(n.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return "callee"===r;case"TaggedTemplateExpression":return !0;default:return !1}case"ArrowFunctionExpression":switch(n.type){case"BinaryExpression":return "|>"!==n.operator||o.extra&&o.extra.parenthesized;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return "callee"===r;case"MemberExpression":case"OptionalMemberExpression":return "object"===r;case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return !0;case"ConditionalExpression":return "test"===r;default:return !1}case"ClassExpression":return "NewExpression"===n.type&&"callee"===r;case"OptionalMemberExpression":case"OptionalCallExpression":{const t=e.getParentNode(1);if("object"===r&&"MemberExpression"===n.type||"callee"===r&&("CallExpression"===n.type||"NewExpression"===n.type)||"TSNonNullExpression"===n.type&&"MemberExpression"===t.type&&t.object===n)return !0}case"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)){let e=o;for(;e;)switch(e.type){case"CallExpression":case"OptionalCallExpression":return !0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":e=e.object;break;case"TaggedTemplateExpression":e=e.tag;break;case"TSNonNullExpression":e=e.expression;break;default:return !1}}return !1;case"BindExpression":return "callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)||"object"===r&&vA(n);case"NGPipeExpression":return !("NGRoot"===n.type||"NGMicrosyntaxExpression"===n.type||"ObjectProperty"===n.type&&(!o.extra||!o.extra.parenthesized)||"ArrayExpression"===n.type||bA(n)&&n.arguments[r]===o||"right"===r&&"NGPipeExpression"===n.type||"property"===r&&"MemberExpression"===n.type||"AssignmentExpression"===n.type);case"JSXFragment":case"JSXElement":return "callee"===r||"left"===r&&"BinaryExpression"===n.type&&"<"===n.operator||"ArrayExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"AssignmentExpression"!==n.type&&"AssignmentPattern"!==n.type&&"BinaryExpression"!==n.type&&"NewExpression"!==n.type&&"ConditionalExpression"!==n.type&&"ExpressionStatement"!==n.type&&"JsExpressionRoot"!==n.type&&"JSXAttribute"!==n.type&&"JSXElement"!==n.type&&"JSXExpressionContainer"!==n.type&&"JSXFragment"!==n.type&&"LogicalExpression"!==n.type&&!bA(n)&&!AA(n)&&"ReturnStatement"!==n.type&&"ThrowStatement"!==n.type&&"TypeCastExpression"!==n.type&&"VariableDeclarator"!==n.type&&"YieldExpression"!==n.type;case"TypeAnnotation":return "returnType"===r&&"ArrowFunctionExpression"===n.type&&function(e){return mA(e,(e=>"ObjectTypeAnnotation"===e.type&&mA(e,(e=>"FunctionTypeAnnotation"===e.type||void 0))||void 0))}(o)}return !1}function xA(e){const t=e.getValue(),n=e.getParentNode(),r=e.getName();switch(n.type){case"NGPipeExpression":if("number"==typeof r&&n.arguments[r]===t&&n.arguments.length-1===r)return e.callParent(xA);break;case"ObjectProperty":if("value"===r){const t=e.getParentNode(1);return pA(t.properties)===n}break;case"BinaryExpression":case"LogicalExpression":if("right"===r)return e.callParent(xA);break;case"ConditionalExpression":if("alternate"===r)return e.callParent(xA);break;case"UnaryExpression":if(n.prefix)return e.callParent(xA)}return !1}function SA(e,t){const n=e.getValue(),r=e.getParentNode();return "FunctionExpression"===n.type||"ClassExpression"===n.type?"ExportDefaultDeclaration"===r.type||!FA(e,t):!(!gA(n)||"ExportDefaultDeclaration"!==r.type&&FA(e,t))&&e.call((e=>SA(e,t)),...dA(e,n))}var wA=FA;var TA=function(e,t){switch(t.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":return Object.assign(Object.assign({},e),{},{type:t.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:e,comments:[],rootMarker:t.rootMarker});default:return e}};const{builders:{join:BA,line:NA,group:kA,softline:PA,indent:OA}}=Zc;var IA={isVueEventBindingExpression:function e(t){switch(t.type){case"MemberExpression":switch(t.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return e(t.object)}return !1;case"Identifier":return !0;default:return !1}},printHtmlBinding:function(e,t,n){const r=e.getValue();if(t.__onHtmlBindingRoot&&null===e.getName()&&t.__onHtmlBindingRoot(r,t),"File"===r.type)return t.__isVueForBindingLeft?e.call((e=>{const t=BA([",",NA],e.map(n,"params")),{params:r}=e.getValue();return 1===r.length?t:["(",OA([PA,kA(t)]),PA,")"]}),"program","body",0):t.__isVueBindings?e.call((e=>BA([",",NA],e.map(n,"params"))),"program","body",0):void 0}};const{printComments:LA}=tD,{getLast:jA}=dc,{builders:{join:_A,line:MA,softline:RA,group:VA,indent:$A,align:WA,ifBreak:qA,indentIfBreak:UA},utils:{cleanDoc:zA,getDocParts:GA,isConcat:HA}}=Zc,{hasLeadingOwnLineComment:JA,isBinaryish:XA,isJsxNode:YA,shouldFlatten:KA,hasComment:QA,CommentCheckFlags:ZA,isCallExpression:eF,isMemberExpression:tF,isObjectProperty:nF,isEnabledHackPipeline:rF}=CC;let oF=0;function iF(e,t,n,r,o){const i=e.getValue();if(!XA(i))return [VA(t())];let u=[];KA(i.operator,i.left.operator)?u=e.call((e=>iF(e,t,n,!0,o)),"left"):u.push(VA(t("left")));const s=uF(i),a=("|>"===i.operator||"NGPipeExpression"===i.type||"|"===i.operator&&"__vue_expression"===n.parser)&&!JA(n.originalText,i.right),c="NGPipeExpression"===i.type?"|":i.operator,l="NGPipeExpression"===i.type&&i.arguments.length>0?VA($A([RA,": ",_A([RA,":",qA(" ")],e.map(t,"arguments").map((e=>WA(2,VA(e)))))])):"";let p;if(s)p=[c," ",t("right"),l];else {const r=rF(n)&&"|>"===c?e.call((e=>iF(e,t,n,!0,o)),"right"):t("right");p=[a?MA:"",c,a?" ":MA,r,l];}const f=e.getParentNode(),d=QA(i.left,ZA.Trailing|ZA.Line),h=d||!(o&&"LogicalExpression"===i.type)&&f.type!==i.type&&i.left.type!==i.type&&i.right.type!==i.type;if(u.push(a?"":" ",h?VA(p,{shouldBreak:d}):p),r&&QA(i)){const t=zA(LA(e,u,n));return HA(t)||"fill"===t.type?GA(t):[t]}return u}function uF(e){return "LogicalExpression"===e.type&&("ObjectExpression"===e.right.type&&e.right.properties.length>0||("ArrayExpression"===e.right.type&&e.right.elements.length>0||!!YA(e.right)))}var sF={printBinaryishExpression:function(e,t,n){const r=e.getValue(),o=e.getParentNode(),i=e.getParentNode(1),u=r!==o.body&&("IfStatement"===o.type||"WhileStatement"===o.type||"SwitchStatement"===o.type||"DoWhileStatement"===o.type),s=rF(t)&&"|>"===r.operator,a=iF(e,n,t,!1,u);if(u)return a;if(s)return VA(a);if(eF(o)&&o.callee===r||"UnaryExpression"===o.type||tF(o)&&!o.computed)return VA([$A([RA,...a]),RA]);const c="ReturnStatement"===o.type||"ThrowStatement"===o.type||"JSXExpressionContainer"===o.type&&"JSXAttribute"===i.type||"|"!==r.operator&&"JsExpressionRoot"===o.type||"NGPipeExpression"!==r.type&&("NGRoot"===o.type&&"__ng_binding"===t.parser||"NGMicrosyntaxExpression"===o.type&&"NGMicrosyntax"===i.type&&1===i.body.length)||r===o.body&&"ArrowFunctionExpression"===o.type||r!==o.body&&"ForStatement"===o.type||"ConditionalExpression"===o.type&&"ReturnStatement"!==i.type&&"ThrowStatement"!==i.type&&!eF(i)||"TemplateLiteral"===o.type,l="AssignmentExpression"===o.type||"VariableDeclarator"===o.type||"ClassProperty"===o.type||"PropertyDefinition"===o.type||"TSAbstractPropertyDefinition"===o.type||"ClassPrivateProperty"===o.type||nF(o),p=XA(r.left)&&KA(r.operator,r.left.operator);if(c||uF(r)&&!p||!uF(r)&&l)return VA(a);if(0===a.length)return "";const f=YA(r.right),d=a.findIndex((e=>"string"!=typeof e&&!Array.isArray(e)&&"group"===e.type)),h=a.slice(0,-1===d?1:d+1),g=a.slice(h.length,f?-1:void 0),m=Symbol("logicalChain-"+ ++oF),y=VA([...h,$A(g)],{id:m});if(!f)return y;const D=jA(a);return VA([y,UA(D,{groupId:m})])},shouldInlineLogicalExpression:uF};const{builders:{join:aF,line:cF,group:lF}}=Zc,{hasNode:pF,hasComment:fF,getComments:dF}=CC,{printBinaryishExpression:hF}=sF;function gF(e,t,n){return "NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t&&"NGMicrosyntaxLet"===n.body[0].type&&null===n.body[0].value}var mF={printAngular:function(e,t,n){const r=e.getValue();if(r.type.startsWith("NG"))switch(r.type){case"NGRoot":return [n("node"),fF(r.node)?" //"+dF(r.node)[0].value.trimEnd():""];case"NGPipeExpression":return hF(e,t,n);case"NGChainedExpression":return lF(aF([";",cF],e.map((e=>function(e){return pF(e.getValue(),(e=>{switch(e.type){case void 0:return !1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return !0}}))}(e)?n():["(",n(),")"]),"expressions")));case"NGEmptyExpression":return "";case"NGQuotedExpression":return [r.prefix,": ",r.value.trim()];case"NGMicrosyntax":return e.map(((e,t)=>[0===t?"":gF(e.getValue(),t,r)?" ":[";",cF],n()]),"body");case"NGMicrosyntaxKey":return /^[$_a-z][\w$]*(?:-[$_a-z][\w$])*$/i.test(r.name)?r.name:JSON.stringify(r.name);case"NGMicrosyntaxExpression":return [n("expression"),null===r.alias?"":[" as ",n("alias")]];case"NGMicrosyntaxKeyedExpression":{const t=e.getName(),o=e.getParentNode(),i=gF(r,t,o)||(1===t&&("then"===r.key.name||"else"===r.key.name)||2===t&&"else"===r.key.name&&"NGMicrosyntaxKeyedExpression"===o.body[t-1].type&&"then"===o.body[t-1].key.name)&&"NGMicrosyntaxExpression"===o.body[0].type;return [n("key"),i?" ":": ",n("expression")]}case"NGMicrosyntaxLet":return ["let ",n("key"),null===r.value?"":[" = ",n("value")]];case"NGMicrosyntaxAs":return [n("key")," as ",n("alias")];default:throw new Error("Unknown Angular node type: ".concat(JSON.stringify(r.type),"."))}}};const{printComments:yF,printDanglingComments:DF}=tD,{builders:{line:EF,hardline:CF,softline:bF,group:vF,indent:AF,conditionalGroup:FF,fill:xF,ifBreak:SF,lineSuffixBoundary:wF,join:TF},utils:{willBreak:BF}}=Zc,{getLast:NF,getPreferredQuote:kF}=dc,{isJsxNode:PF,rawText:OF,isLiteral:IF,isCallExpression:LF,isStringLiteral:jF,isBinaryish:_F,hasComment:MF,CommentCheckFlags:RF,hasNodeIgnoreComment:VF}=CC,$F=wA,{willPrintOwnComments:WF}=lA,qF=e=>""===e||e===EF||e===CF||e===bF;function UF(e,t,n){const r=e.getValue();if("JSXElement"===r.type&&function(e){if(0===e.children.length)return !0;if(e.children.length>1)return !1;const t=e.children[0];return IF(t)&&!QF(t)}(r))return [n("openingElement"),n("closingElement")];const o="JSXElement"===r.type?n("openingElement"):n("openingFragment"),i="JSXElement"===r.type?n("closingElement"):n("closingFragment");if(1===r.children.length&&"JSXExpressionContainer"===r.children[0].type&&("TemplateLiteral"===r.children[0].expression.type||"TaggedTemplateExpression"===r.children[0].expression.type))return [o,...e.map(n,"children"),i];r.children=r.children.map((e=>function(e){return "JSXExpressionContainer"===e.type&&IF(e.expression)&&" "===e.expression.value&&!MF(e.expression)}(e)?{type:"JSXText",value:" ",raw:" "}:e));const u=r.children.some(PF),s=r.children.filter((e=>"JSXExpressionContainer"===e.type)).length>1,a="JSXElement"===r.type&&r.openingElement.attributes.length>1;let c=BF(o)||u||a||s;const l="mdx"===e.getParentNode().rootMarker,p=t.singleQuote?"{' '}":'{" "}',f=l?" ":SF([p,bF]," "),d=function(e,t,n,r,o){const i=[];return e.each(((e,t,u)=>{const s=e.getValue();if(IF(s)){const e=OF(s);if(QF(s)){const n=e.split(XF);if(""===n[0]){if(i.push(""),n.shift(),/\n/.test(n[0])){const e=u[t+1];i.push(GF(o,n[1],s,e));}else i.push(r);n.shift();}let a;if(""===NF(n)&&(n.pop(),a=n.pop()),0===n.length)return;for(const[e,t]of n.entries())e%2==1?i.push(EF):i.push(t);if(void 0!==a)if(/\n/.test(a)){const e=u[t+1];i.push(GF(o,NF(i),s,e));}else i.push(r);else {const e=u[t+1];i.push(zF(o,NF(i),s,e));}}else /\n/.test(e)?e.match(/\n/g).length>1&&i.push("",CF):i.push("",r);}else {const e=n();i.push(e);const r=u[t+1];if(r&&QF(r)){const e=KF(OF(r)).split(XF)[0];i.push(zF(o,e,s,r));}else i.push(CF);}}),"children"),i}(e,0,n,f,r.openingElement&&r.openingElement.name&&"fbt"===r.openingElement.name.name),h=r.children.some((e=>QF(e)));for(let e=d.length-2;e>=0;e--){const t=""===d[e]&&""===d[e+1],n=d[e]===CF&&""===d[e+1]&&d[e+2]===CF,r=(d[e]===bF||d[e]===CF)&&""===d[e+1]&&d[e+2]===f,o=d[e]===f&&""===d[e+1]&&(d[e+2]===bF||d[e+2]===CF),i=d[e]===f&&""===d[e+1]&&d[e+2]===f,u=d[e]===bF&&""===d[e+1]&&d[e+2]===CF||d[e]===CF&&""===d[e+1]&&d[e+2]===bF;n&&h||t||r||i||u?d.splice(e,2):o&&d.splice(e+1,2);}for(;d.length>0&&qF(NF(d));)d.pop();for(;d.length>1&&qF(d[0])&&qF(d[1]);)d.shift(),d.shift();const g=[];for(const[e,t]of d.entries()){if(t===f){if(1===e&&""===d[e-1]){if(2===d.length){g.push(p);continue}g.push([p,CF]);continue}if(e===d.length-1){g.push(p);continue}if(""===d[e-1]&&d[e-2]===CF){g.push(p);continue}}g.push(t),BF(t)&&(c=!0);}const m=h?xF(g):vF(g,{shouldBreak:!0});if(l)return m;const y=vF([o,AF([CF,m]),CF,i]);return c?y:FF([vF([o,...d,i]),y])}function zF(e,t,n,r){return e?"":"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?1===t.length?bF:CF:bF}function GF(e,t,n,r){return e?CF:1===t.length?"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?CF:bF:CF}function HF(e,t,n){return function(e,t,n){const r=e.getParentNode();if(!r)return t;if({ArrayExpression:!0,JSXAttribute:!0,JSXElement:!0,JSXExpressionContainer:!0,JSXFragment:!0,ExpressionStatement:!0,CallExpression:!0,OptionalCallExpression:!0,ConditionalExpression:!0,JsExpressionRoot:!0}[r.type])return t;const o=e.match(void 0,(e=>"ArrowFunctionExpression"===e.type),LF,(e=>"JSXExpressionContainer"===e.type)),i=$F(e,n);return vF([i?"":SF("("),AF([bF,t]),bF,i?"":SF(")")],{shouldBreak:o})}(e,yF(e,UF(e,t,n),t),t)}function JF(e,t,n){const r=e.getValue();return ["{",e.call((e=>{const r=["...",n()],o=e.getValue();return MF(o)&&WF(e)?[AF([bF,yF(e,r,t)]),bF]:r}),"JSXSpreadAttribute"===r.type?"argument":"expression"),"}"]}const XF=new RegExp("([ \n\r\t]+)"),YF=new RegExp("[^ \n\r\t]"),KF=e=>e.replace(new RegExp("(?:^"+XF.source+"|"+XF.source+"$)"),"");function QF(e){return IF(e)&&(YF.test(OF(e))||!/\n/.test(OF(e)))}var ZF={hasJsxIgnoreComment:function(e){const t=e.getValue(),n=e.getParentNode();if(!(n&&t&&PF(t)&&PF(n)))return !1;let r=null;for(let e=n.children.indexOf(t);e>0;e--){const t=n.children[e-1];if("JSXText"!==t.type||QF(t)){r=t;break}}return r&&"JSXExpressionContainer"===r.type&&"JSXEmptyExpression"===r.expression.type&&VF(r.expression)},printJsx:function(e,t,n){const r=e.getValue();if(r.type.startsWith("JSX"))switch(r.type){case"JSXAttribute":return function(e,t,n){const r=e.getValue(),o=[];if(o.push(n("name")),r.value){let e;if(jF(r.value)){let n=OF(r.value).slice(1,-1).replace(/&apos;/g,"'").replace(/&quot;/g,'"');const{escaped:o,quote:i,regex:u}=kF(n,t.jsxSingleQuote?"'":'"');n=n.replace(u,o),e=[i,n,i];}else e=n("value");o.push("=",e);}return o}(e,t,n);case"JSXIdentifier":return String(r.name);case"JSXNamespacedName":return TF(":",[n("namespace"),n("name")]);case"JSXMemberExpression":return TF(".",[n("object"),n("property")]);case"JSXSpreadAttribute":return JF(e,t,n);case"JSXSpreadChild":return JF(e,t,n);case"JSXExpressionContainer":return function(e,t,n){const r=e.getValue(),o=e.getParentNode(0),i="JSXEmptyExpression"===r.expression.type||!MF(r.expression)&&("ArrayExpression"===r.expression.type||"ObjectExpression"===r.expression.type||"ArrowFunctionExpression"===r.expression.type||LF(r.expression)||"FunctionExpression"===r.expression.type||"TemplateLiteral"===r.expression.type||"TaggedTemplateExpression"===r.expression.type||"DoExpression"===r.expression.type||PF(o)&&("ConditionalExpression"===r.expression.type||_F(r.expression)));return vF(i?["{",n("expression"),wF,"}"]:["{",AF([bF,n("expression")]),bF,wF,"}"])}(e,0,n);case"JSXFragment":case"JSXElement":return HF(e,t,n);case"JSXOpeningElement":return function(e,t,n){const r=e.getValue(),o=r.name&&MF(r.name)||r.typeParameters&&MF(r.typeParameters);if(r.selfClosing&&0===r.attributes.length&&!o)return ["<",n("name"),n("typeParameters")," />"];if(r.attributes&&1===r.attributes.length&&r.attributes[0].value&&jF(r.attributes[0].value)&&!r.attributes[0].value.value.includes("\n")&&!o&&!MF(r.attributes[0]))return vF(["<",n("name"),n("typeParameters")," ",...e.map(n,"attributes"),r.selfClosing?" />":">"]);const i=r.attributes.length>0&&MF(NF(r.attributes),RF.Trailing),u=0===r.attributes.length&&!o||(t.bracketSameLine||t.jsxBracketSameLine)&&(!o||r.attributes.length>0)&&!i,s=r.attributes&&r.attributes.some((e=>e.value&&jF(e.value)&&e.value.value.includes("\n")));return vF(["<",n("name"),n("typeParameters"),AF(e.map((()=>[EF,n()]),"attributes")),r.selfClosing?EF:u?">":bF,r.selfClosing?"/>":u?"":">"],{shouldBreak:s})}(e,t,n);case"JSXClosingElement":return function(e,t,n){const r=e.getValue(),o=[];o.push("</");const i=n("name");return MF(r.name,RF.Leading|RF.Line)?o.push(AF([CF,i]),CF):MF(r.name,RF.Leading|RF.Block)?o.push(" ",i):o.push(i),o.push(">"),o}(e,0,n);case"JSXOpeningFragment":case"JSXClosingFragment":return function(e,t){const n=e.getValue(),r=MF(n),o=MF(n,RF.Line),i="JSXOpeningFragment"===n.type;return [i?"<":"</",AF([o?CF:r&&!i?" ":"",DF(e,t,!0)]),o?CF:"",">"]}(e,t);case"JSXEmptyExpression":return function(e,t){const n=e.getValue(),r=MF(n,RF.Line);return [DF(e,t,!r),r?CF:""]}(e,t);case"JSXText":throw new Error("JSXTest should be handled by JSXElement");default:throw new Error("Unknown JSX node type: ".concat(JSON.stringify(r.type),"."))}}},ex=bu,tx=Ze,nx=gr,rx=ar,ox=Wu;ro({target:"Array",proto:!0},{flat:function(){var e=arguments.length?arguments[0]:void 0,t=tx(this),n=nx(t),r=ox(t,0);return r.length=ex(r,t,t,n,0,void 0===e?1:rx(e)),r}});var ix,ux=Sr,sx=wr,ax=Object.keys||function(e){return ux(e,sx)},cx=zt,lx=Yt,px=oe,fx=ax,dx=B?Object.defineProperties:function(e,t){lx(e);for(var n,r=px(t),o=fx(t),i=o.length,u=0;i>u;)cx.f(e,n=o[u++],r[n]);return e},hx=pe("document","documentElement"),gx=Yt,mx=dx,yx=wr,Dx=An,Ex=hx,Cx=Ot,bx=vn("IE_PROTO"),vx=function(){},Ax=function(e){return "<script>"+e+"</"+"script>"},Fx=function(e){e.write(Ax("")),e.close();var t=e.parentWindow.Object;return e=null,t},xx=function(){try{ix=new ActiveXObject("htmlfile");}catch(e){}xx="undefined"!=typeof document?document.domain&&ix?Fx(ix):function(){var e,t=Cx("iframe");return t.style.display="none",Ex.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Ax("document.F=Object")),e.close(),e.F}():Fx(ix);for(var e=yx.length;e--;)delete xx.prototype[yx[e]];return xx()};Dx[bx]=!0;var Sx=Object.create||function(e,t){var n;return null!==e?(vx.prototype=gx(e),n=new vx,vx.prototype=null,n[bx]=e):n=xx(),void 0===t?n:mx(n,t)},wx=zt,Tx=Dt("unscopables"),Bx=Array.prototype;null==Bx[Tx]&&wx.f(Bx,Tx,{configurable:!0,value:Sx(null)});var Nx=function(e){Bx[Tx][e]=!0;};Nx("flat");const{isNonEmptyArray:kx}=dc,{builders:{indent:Px,join:Ox,line:Ix}}=Zc,{isFlowAnnotationComment:Lx}=CC;function jx(e,t,n){const r=e.getValue();if(!r.typeAnnotation)return "";const o=e.getParentNode(),i=r.definite||o&&"VariableDeclarator"===o.type&&o.definite,u="DeclareFunction"===o.type&&o.id===r;return Lx(t.originalText,r.typeAnnotation)?[" /*: ",n("typeAnnotation")," */"]:[u?"":i?"!: ":": ",n("typeAnnotation")]}var _x={printOptionalToken:function(e){const t=e.getValue();return !t.optional||"Identifier"===t.type&&t===e.getParentNode().key?"":"OptionalCallExpression"===t.type||"OptionalMemberExpression"===t.type&&t.computed?"?.":"?"},printFunctionTypeParameters:function(e,t,n){const r=e.getValue();return r.typeArguments?n("typeArguments"):r.typeParameters?n("typeParameters"):""},printBindExpressionCallee:function(e,t,n){return ["::",n("callee")]},printTypeScriptModifiers:function(e,t,n){const r=e.getValue();return kx(r.modifiers)?[Ox(" ",e.map(n,"modifiers"))," "]:""},printTypeAnnotation:jx,printRestSpread:function(e,t,n){return ["...",n("argument"),jx(e,t,n)]},adjustClause:function(e,t,n){return "EmptyStatement"===e.type?";":"BlockStatement"===e.type||n?[" ",t]:Px([Ix,t])}};const{printDanglingComments:Mx}=tD,{builders:{line:Rx,softline:Vx,hardline:$x,group:Wx,indent:qx,ifBreak:Ux,fill:zx}}=Zc,{getLast:Gx,hasNewline:Hx}=dc,{shouldPrintComma:Jx,hasComment:Xx,CommentCheckFlags:Yx,isNextLineEmpty:Kx,isNumericLiteral:Qx,isSignedNumericLiteral:Zx}=CC,{locStart:eS}=og,{printOptionalToken:tS,printTypeAnnotation:nS}=_x;function rS(e,t){return e.elements.length>1&&e.elements.every((e=>e&&(Qx(e)||Zx(e)&&!Xx(e.argument))&&!Xx(e,Yx.Trailing|Yx.Line,(e=>!Hx(t.originalText,eS(e),{backwards:!0})))))}function oS(e,t,n,r){const o=[];let i=[];return e.each((e=>{o.push(i,Wx(r())),i=[",",Rx],e.getValue()&&Kx(e.getValue(),t)&&i.push(Vx);}),n),o}function iS(e,t,n,r){const o=[];return e.each(((e,i,u)=>{const s=i===u.length-1;o.push([n(),s?r:","]),s||o.push(Kx(e.getValue(),t)?[$x,$x]:Xx(u[i+1],Yx.Leading|Yx.Line)?$x:Rx);}),"elements"),zx(o)}var uS={printArray:function(e,t,n){const r=e.getValue(),o=[],i="TupleExpression"===r.type?"#[":"[";if(0===r.elements.length)Xx(r,Yx.Dangling)?o.push(Wx([i,Mx(e,t),Vx,"]"])):o.push(i,"]");else {const u=Gx(r.elements),s=!(u&&"RestElement"===u.type),a=null===u,c=Symbol("array"),l=!t.__inJestEach&&r.elements.length>1&&r.elements.every(((e,t,n)=>{const r=e&&e.type;if("ArrayExpression"!==r&&"ObjectExpression"!==r)return !1;const o=n[t+1];if(o&&r!==o.type)return !1;const i="ArrayExpression"===r?"elements":"properties";return e[i]&&e[i].length>1})),p=rS(r,t),f=s?a?",":Jx(t)?p?Ux(",","",{groupId:c}):Ux(","):"":"";o.push(Wx([i,qx([Vx,p?iS(e,t,n,f):[oS(e,t,"elements",n),f],Mx(e,t,!0)]),Vx,"]"],{shouldBreak:l,id:c}));}return o.push(tS(e),nS(e,t,n)),o},printArrayItems:oS,isConciselyPrintedArray:rS};const{printDanglingComments:sS}=tD,{getLast:aS,getPenultimate:cS}=dc,{getFunctionParameters:lS,hasComment:pS,CommentCheckFlags:fS,isFunctionCompositionArgs:dS,isJsxNode:hS,isLongCurriedCallExpression:gS,shouldPrintComma:mS,getCallArguments:yS,iterateCallArgumentsPath:DS,isNextLineEmpty:ES,isCallExpression:CS,isStringLiteral:bS,isObjectProperty:vS}=CC,{builders:{line:AS,hardline:FS,softline:xS,group:SS,indent:wS,conditionalGroup:TS,ifBreak:BS,breakParent:NS},utils:{willBreak:kS}}=Zc,{ArgExpansionBailout:PS}=Cp,{isConciselyPrintedArray:OS}=uS;function IS(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return "ObjectExpression"===e.type&&(e.properties.length>0||pS(e))||"ArrayExpression"===e.type&&(e.elements.length>0||pS(e))||"TSTypeAssertion"===e.type&&IS(e.expression)||"TSAsExpression"===e.type&&IS(e.expression)||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&(!e.returnType||!e.returnType.typeAnnotation||"TSTypeReference"!==e.returnType.typeAnnotation.type||LS(e.body))&&("BlockStatement"===e.body.type||"ArrowFunctionExpression"===e.body.type&&IS(e.body,!0)||"ObjectExpression"===e.body.type||"ArrayExpression"===e.body.type||!t&&(CS(e.body)||"ConditionalExpression"===e.body.type)||hS(e.body))||"DoExpression"===e.type||"ModuleExpression"===e.type}function LS(e){return "BlockStatement"===e.type&&(e.body.some((e=>"EmptyStatement"!==e.type))||pS(e,fS.Dangling))}var jS=function(e,t,n){const r=e.getValue(),o="ImportExpression"===r.type,i=yS(r);if(0===i.length)return ["(",sS(e,t,!0),")"];if(function(e){return 2===e.length&&"ArrowFunctionExpression"===e[0].type&&0===lS(e[0]).length&&"BlockStatement"===e[0].body.type&&"ArrayExpression"===e[1].type&&!e.some((e=>pS(e)))}(i))return ["(",n(["arguments",0]),", ",n(["arguments",1]),")"];let u=!1,s=!1;const a=i.length-1,c=[];DS(e,((e,r)=>{const o=e.getNode(),i=[n()];r===a||(ES(o,t)?(0===r&&(s=!0),u=!0,i.push(",",FS,FS)):i.push(",",AS)),c.push(i);}));const l=o||r.callee&&"Import"===r.callee.type||!mS(t,"all")?"":",";function p(){return SS(["(",wS([AS,...c]),l,AS,")"],{shouldBreak:!0})}if(u||"Decorator"!==e.getParentNode().type&&dS(i))return p();const f=function(e){if(2!==e.length)return !1;const[t,n]=e;if("ModuleExpression"===t.type&&function(e){return "ObjectExpression"===e.type&&1===e.properties.length&&vS(e.properties[0])&&"Identifier"===e.properties[0].key.type&&"type"===e.properties[0].key.name&&bS(e.properties[0].value)&&"module"===e.properties[0].value.value}(n))return !0;return !pS(t)&&("FunctionExpression"===t.type||"ArrowFunctionExpression"===t.type&&"BlockStatement"===t.body.type)&&"FunctionExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"ConditionalExpression"!==n.type&&!IS(n)}(i),d=function(e,t){const n=aS(e),r=cS(e);return !pS(n,fS.Leading)&&!pS(n,fS.Trailing)&&IS(n)&&(!r||r.type!==n.type)&&(2!==e.length||"ArrowFunctionExpression"!==r.type||"ArrayExpression"!==n.type)&&!(e.length>1&&"ArrayExpression"===n.type&&OS(n,t))}(i,t);if(f||d){if(f?c.slice(1).some(kS):c.slice(0,-1).some(kS))return p();let t=[];try{e.try((()=>{DS(e,((e,r)=>{f&&0===r&&(t=[[n([],{expandFirstArg:!0}),c.length>1?",":"",s?FS:AS,s?FS:""],...c.slice(1)]),d&&r===a&&(t=[...c.slice(0,-1),n([],{expandLastArg:!0})]);}));}));}catch(e){if(e instanceof PS)return p();throw e}return [c.some(kS)?NS:"",TS([["(",...t,")"],f?["(",SS(t[0],{shouldBreak:!0}),...t.slice(1),")"]:["(",...c.slice(0,-1),SS(aS(t),{shouldBreak:!0}),")"],p()])]}const h=["(",wS([xS,...c]),BS(l),xS,")"];return gS(e)?h:SS(h,{shouldBreak:c.some(kS)||u})};const{builders:{softline:_S,group:MS,indent:RS,label:VS}}=Zc,{isNumericLiteral:$S,isMemberExpression:WS,isCallExpression:qS}=CC,{printOptionalToken:US}=_x;function zS(e,t,n){const r=n("property"),o=e.getValue(),i=US(e);return o.computed?!o.property||$S(o.property)?[i,"[",r,"]"]:MS([i,"[",RS([_S,r]),_S,"]"]):[i,".",r]}var GS={printMemberExpression:function(e,t,n){const r=e.getValue(),o=e.getParentNode();let i,u=0;do{i=e.getParentNode(u),u++;}while(i&&(WS(i)||"TSNonNullExpression"===i.type));const s=n("object"),a=zS(e,t,n),c=i&&("NewExpression"===i.type||"BindExpression"===i.type||"AssignmentExpression"===i.type&&"Identifier"!==i.left.type)||r.computed||"Identifier"===r.object.type&&"Identifier"===r.property.type&&!WS(o)||("AssignmentExpression"===o.type||"VariableDeclarator"===o.type)&&(qS(r.object)&&r.object.arguments.length>0||"TSNonNullExpression"===r.object.type&&qS(r.object.expression)&&r.object.expression.arguments.length>0||"member-chain"===s.label);return VS("member-chain"===s.label?"member-chain":"member",[s,c?a:MS(RS([_S,a]))])},printMemberLookup:zS};const{printComments:HS}=tD,{getLast:JS,isNextLineEmptyAfterIndex:XS,getNextNonSpaceNonCommentCharacterIndex:YS}=dc,KS=wA,{isCallExpression:QS,isMemberExpression:ZS,isFunctionOrArrowExpression:ew,isLongCurriedCallExpression:tw,isMemberish:nw,isNumericLiteral:rw,isSimpleCallArgument:ow,hasComment:iw,CommentCheckFlags:uw,isNextLineEmpty:sw}=CC,{locEnd:aw}=og,{builders:{join:cw,hardline:lw,group:pw,indent:fw,conditionalGroup:dw,breakParent:hw,label:gw},utils:{willBreak:mw}}=Zc,yw=jS,{printMemberLookup:Dw}=GS,{printOptionalToken:Ew,printFunctionTypeParameters:Cw,printBindExpressionCallee:bw}=_x;var vw=function(e,t,n){const r=e.getParentNode(),o=!r||"ExpressionStatement"===r.type,i=[];function u(e){const{originalText:n}=t,r=YS(n,e,aw);return ")"===n.charAt(r)?!1!==r&&XS(n,r+1):sw(e,t)}function s(e){const r=e.getValue();QS(r)&&(nw(r.callee)||QS(r.callee))?(i.unshift({node:r,printed:[HS(e,[Ew(e),Cw(e,t,n),yw(e,t,n)],t),u(r)?lw:""]}),e.call((e=>s(e)),"callee")):nw(r)?(i.unshift({node:r,needsParens:KS(e,t),printed:HS(e,ZS(r)?Dw(e,t,n):bw(e,t,n),t)}),e.call((e=>s(e)),"object")):"TSNonNullExpression"===r.type?(i.unshift({node:r,printed:HS(e,"!",t)}),e.call((e=>s(e)),"expression")):i.unshift({node:r,printed:n()});}const a=e.getValue();i.unshift({node:a,printed:[Ew(e),Cw(e,t,n),yw(e,t,n)]}),a.callee&&e.call((e=>s(e)),"callee");const c=[];let l=[i[0]],p=1;for(;p<i.length&&("TSNonNullExpression"===i[p].node.type||QS(i[p].node)||ZS(i[p].node)&&i[p].node.computed&&rw(i[p].node.property));++p)l.push(i[p]);if(!QS(i[0].node))for(;p+1<i.length&&(nw(i[p].node)&&nw(i[p+1].node));++p)l.push(i[p]);c.push(l),l=[];let f=!1;for(;p<i.length;++p){if(f&&nw(i[p].node)){if(i[p].node.computed&&rw(i[p].node.property)){l.push(i[p]);continue}c.push(l),l=[],f=!1;}(QS(i[p].node)||"ImportExpression"===i[p].node.type)&&(f=!0),l.push(i[p]),iw(i[p].node,uw.Trailing)&&(c.push(l),l=[],f=!1);}function d(e){return /^[A-Z]|^[$_]+$/.test(e)}l.length>0&&c.push(l);const h=c.length>=2&&!iw(c[1][0].node)&&function(e){const n=e[1].length>0&&e[1][0].node.computed;if(1===e[0].length){const r=e[0][0].node;return "ThisExpression"===r.type||"Identifier"===r.type&&(d(r.name)||o&&function(e){return e.length<=t.tabWidth}(r.name)||n)}const r=JS(e[0]).node;return ZS(r)&&"Identifier"===r.property.type&&(d(r.property.name)||n)}(c);function g(e){const t=e.map((e=>e.printed));return e.length>0&&JS(e).needsParens?["(",...t,")"]:t}const m=c.map(g),y=m,D=h?3:2,E=c.flat(),C=E.slice(1,-1).some((e=>iw(e.node,uw.Leading)))||E.slice(0,-1).some((e=>iw(e.node,uw.Trailing)))||c[D]&&iw(c[D][0].node,uw.Leading);if(c.length<=D&&!C)return tw(e)?y:pw(y);const b=JS(c[h?1:0]).node,v=!QS(b)&&u(b),A=[g(c[0]),h?c.slice(1,2).map(g):"",v?lw:"",function(e){return 0===e.length?"":fw(pw([lw,cw(lw,e.map(g))]))}(c.slice(h?2:1))],F=i.map((e=>{let{node:t}=e;return t})).filter(QS);let x;return x=C||F.length>2&&F.some((e=>!e.arguments.every((e=>ow(e,0)))))||m.slice(0,-1).some(mw)||function(){const e=JS(JS(c)).node,t=JS(m);return QS(e)&&mw(t)&&F.slice(0,-1).some((e=>e.arguments.some(ew)))}()?pw(A):[mw(y)||v?hw:"",dw([y,A])],gw("member-chain",x)};const{builders:{join:Aw,group:Fw}}=Zc,xw=wA,{getCallArguments:Sw,hasFlowAnnotationComment:ww,isCallExpression:Tw,isMemberish:Bw,isStringLiteral:Nw,isTemplateOnItsOwnLine:kw,isTestCall:Pw,iterateCallArgumentsPath:Ow}=CC,Iw=vw,Lw=jS,{printOptionalToken:jw,printFunctionTypeParameters:_w}=_x;var Mw={printCallExpression:function(e,t,n){const r=e.getValue(),o=e.getParentNode(),i="NewExpression"===r.type,u="ImportExpression"===r.type,s=jw(e),a=Sw(r);if(a.length>0&&(!u&&!i&&function(e,t){if("Identifier"!==e.callee.type)return !1;if("require"===e.callee.name)return !0;if("define"===e.callee.name){const n=Sw(e);return "ExpressionStatement"===t.type&&(1===n.length||2===n.length&&"ArrayExpression"===n[0].type||3===n.length&&Nw(n[0])&&"ArrayExpression"===n[1].type)}return !1}(r,o)||1===a.length&&kw(a[0],t.originalText)||!i&&Pw(r,o))){const r=[];return Ow(e,(()=>{r.push(n());})),[i?"new ":"",n("callee"),s,_w(e,t,n),"(",Aw(", ",r),")"]}const c=("babel"===t.parser||"babel-flow"===t.parser)&&r.callee&&"Identifier"===r.callee.type&&ww(r.callee.trailingComments);if(c&&(r.callee.trailingComments[0].printed=!0),!u&&!i&&Bw(r.callee)&&!e.call((e=>xw(e,t)),"callee"))return Iw(e,t,n);const l=[i?"new ":"",u?"import":n("callee"),s,c?"/*:: ".concat(r.callee.trailingComments[0].value.slice(2).trim()," */"):"",_w(e,t,n),Lw(e,t,n)];return u||Tw(r.callee)?Fw(l):l}};const{isNonEmptyArray:Rw,getStringWidth:Vw}=dc,{builders:{line:$w,group:Ww,indent:qw,indentIfBreak:Uw},utils:{cleanDoc:zw,willBreak:Gw,canBreak:Hw}}=Zc,{hasLeadingOwnLineComment:Jw,isBinaryish:Xw,isStringLiteral:Yw,isLiteral:Kw,isNumericLiteral:Qw,isCallExpression:Zw,isMemberExpression:eT,getCallArguments:tT,rawText:nT,hasComment:rT,isSignedNumericLiteral:oT,isObjectProperty:iT}=CC,{shouldInlineLogicalExpression:uT}=sF,{printCallExpression:sT}=Mw;function aT(e,t,n,r,o,i){const u=function(e,t,n,r,o){const i=e.getValue(),u=i[o];if(!u)return "only-left";const s=!cT(u),a=e.match(cT,lT,(e=>!s||"ExpressionStatement"!==e.type&&"VariableDeclaration"!==e.type));if(a)return s?"ArrowFunctionExpression"===u.type&&"ArrowFunctionExpression"===u.body.type?"chain-tail-arrow-chain":"chain-tail":"chain";if(!s&&cT(u.right)||Jw(t.originalText,u))return "break-after-operator";if("CallExpression"===u.type&&"require"===u.callee.name||"json5"===t.parser||"json"===t.parser)return "never-break-after-operator";if(function(e){if(lT(e)){const t=e.left||e.id;return "ObjectPattern"===t.type&&t.properties.length>2&&t.properties.some((e=>iT(e)&&(!e.shorthand||e.value&&"AssignmentPattern"===e.value.type)))}return !1}(i)||function(e){const t=function(e){if(function(e){return "TSTypeAliasDeclaration"===e.type||"TypeAlias"===e.type}(e)&&e.typeParameters&&e.typeParameters.params)return e.typeParameters.params;return null}(e);if(Rw(t)){const n="TSTypeAliasDeclaration"===e.type?"constraint":"bound";if(t.length>1&&t.some((e=>e[n]||e.default)))return !0}return !1}(i)||function(e){if("VariableDeclarator"!==e.type)return !1;const{typeAnnotation:t}=e.id;if(!t||!t.typeAnnotation)return !1;const n=fT(t.typeAnnotation);return Rw(n)&&n.length>1&&n.some((e=>Rw(fT(e))||"TSConditionalType"===e.type))}(i)||pT(i)&&Hw(r))return "break-lhs";const c=function(e,t,n){if(!iT(e))return !1;t=zw(t);const r=3;return "string"==typeof t&&Vw(t)<n.tabWidth+r}(i,r,t);if(e.call((()=>function(e,t,n,r){const o=e.getValue();if(Xw(o)&&!uT(o))return !0;switch(o.type){case"StringLiteralTypeAnnotation":case"SequenceExpression":return !0;case"ConditionalExpression":{const{test:e}=o;return Xw(e)&&!uT(e)}case"ClassExpression":return Rw(o.decorators)}if(r)return !1;let i=o;const u=[];for(;;)if("UnaryExpression"===i.type)i=i.argument,u.push("argument");else {if("TSNonNullExpression"!==i.type)break;i=i.expression,u.push("expression");}if(Yw(i)||e.call((()=>dT(e,t,n)),...u))return !0;return !1}(e,t,n,c)),o))return "break-after-operator";if(c||"TemplateLiteral"===u.type||"TaggedTemplateExpression"===u.type||"BooleanLiteral"===u.type||Qw(u)||"ClassExpression"===u.type)return "never-break-after-operator";return "fluid"}(e,t,n,r,i),s=n(i,{assignmentLayout:u});switch(u){case"break-after-operator":return Ww([Ww(r),o,Ww(qw([$w,s]))]);case"never-break-after-operator":return Ww([Ww(r),o," ",s]);case"fluid":{const e=Symbol("assignment");return Ww([Ww(r),o,Ww(qw($w),{id:e}),Uw(s,{groupId:e})])}case"break-lhs":return Ww([r,o," ",Ww(s)]);case"chain":return [Ww(r),o,$w,s];case"chain-tail":return [Ww(r),o,qw([$w,s])];case"chain-tail-arrow-chain":return [Ww(r),o,s];case"only-left":return r}}function cT(e){return "AssignmentExpression"===e.type}function lT(e){return cT(e)||"VariableDeclarator"===e.type}function pT(e){return "VariableDeclarator"===e.type&&e.init&&"ArrowFunctionExpression"===e.init.type}function fT(e){return function(e){return "TSTypeReference"===e.type||"GenericTypeAnnotation"===e.type}(e)&&e.typeParameters&&e.typeParameters.params?e.typeParameters.params:null}function dT(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=e.getValue(),i=()=>dT(e,t,n,!0);if("TSNonNullExpression"===o.type)return e.call(i,"expression");if(Zw(o)){if("member-chain"===sT(e,t,n).label)return !1;const r=tT(o);return !!(0===r.length||1===r.length&&hT(r[0],t))&&(!gT(o,n)&&e.call(i,"callee"))}return eT(o)?e.call(i,"object"):r&&("Identifier"===o.type||"ThisExpression"===o.type)}function hT(e,t){let{printWidth:n}=t;if(rT(e))return !1;const r=.25*n;if("ThisExpression"===e.type||"Identifier"===e.type&&e.name.length<=r||oT(e)&&!rT(e.argument))return !0;const o="Literal"===e.type&&"regex"in e&&e.regex.pattern||"RegExpLiteral"===e.type&&e.pattern;return o?o.length<=r:Yw(e)?nT(e).length<=r:"TemplateLiteral"===e.type?0===e.expressions.length&&e.quasis[0].value.raw.length<=r&&!e.quasis[0].value.raw.includes("\n"):Kw(e)}function gT(e,t){const n=function(e){return e.typeParameters&&e.typeParameters.params||e.typeArguments&&e.typeArguments.params}(e);if(Rw(n)){if(n.length>1)return !0;if(1===n.length){const e=n[0];if("TSUnionType"===e.type||"UnionTypeAnnotation"===e.type||"TSIntersectionType"===e.type||"IntersectionTypeAnnotation"===e.type)return !0}const r=e.typeParameters?"typeParameters":"typeArguments";if(Gw(t(r)))return !0}return !1}var mT={printVariableDeclarator:function(e,t,n){return aT(e,t,n,n("id")," =","init")},printAssignmentExpression:function(e,t,n){const r=e.getValue();return aT(e,t,n,n("left"),[" ",r.operator],"right")},printAssignment:aT,isArrowFunctionVariableDeclarator:pT};const{getNextNonSpaceNonCommentCharacter:yT}=dc,{printDanglingComments:DT}=tD,{builders:{line:ET,hardline:CT,softline:bT,group:vT,indent:AT,ifBreak:FT},utils:{removeLines:xT,willBreak:ST}}=Zc,{getFunctionParameters:wT,iterateFunctionParametersPath:TT,isSimpleType:BT,isTestCall:NT,isTypeAnnotationAFunction:kT,isObjectType:PT,isObjectTypePropertyAFunction:OT,hasRestParameter:IT,shouldPrintComma:LT,hasComment:jT,isNextLineEmpty:_T}=CC,{locEnd:MT}=og,{ArgExpansionBailout:RT}=Cp,{printFunctionTypeParameters:VT}=_x;function $T(e){if(!e)return !1;const t=wT(e);if(1!==t.length)return !1;const[n]=t;return !jT(n)&&("ObjectPattern"===n.type||"ArrayPattern"===n.type||"Identifier"===n.type&&n.typeAnnotation&&("TypeAnnotation"===n.typeAnnotation.type||"TSTypeAnnotation"===n.typeAnnotation.type)&&PT(n.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===n.type&&PT(n.typeAnnotation)||"AssignmentPattern"===n.type&&("ObjectPattern"===n.left.type||"ArrayPattern"===n.left.type)&&("Identifier"===n.right.type||"ObjectExpression"===n.right.type&&0===n.right.properties.length||"ArrayExpression"===n.right.type&&0===n.right.elements.length))}var WT={printFunctionParameters:function(e,t,n,r,o){const i=e.getValue(),u=wT(i),s=o?VT(e,n,t):"";if(0===u.length)return [s,"(",DT(e,n,!0,(e=>")"===yT(n.originalText,e,MT))),")"];const a=e.getParentNode(),c=NT(a),l=$T(i),p=[];if(TT(e,((e,r)=>{const o=r===u.length-1;o&&i.rest&&p.push("..."),p.push(t()),o||(p.push(","),c||l?p.push(" "):_T(u[r],n)?p.push(CT,CT):p.push(ET));})),r){if(ST(s)||ST(p))throw new RT;return vT([xT(s),"(",xT(p),")"])}const f=u.every((e=>!e.decorators));return l&&f||c?[s,"(",...p,")"]:(OT(a)||kT(a)||"TypeAlias"===a.type||"UnionTypeAnnotation"===a.type||"TSUnionType"===a.type||"IntersectionTypeAnnotation"===a.type||"FunctionTypeAnnotation"===a.type&&a.returnType===i)&&1===u.length&&null===u[0].name&&i.this!==u[0]&&u[0].typeAnnotation&&null===i.typeParameters&&BT(u[0].typeAnnotation)&&!i.rest?"always"===n.arrowParens?["(",...p,")"]:p:[s,"(",AT([bT,...p]),FT(!IT(i)&&LT(n,"all")?",":""),bT,")"]},shouldHugFunctionParameters:$T,shouldGroupFunctionParameters:function(e,t){const n=function(e){let t;return e.returnType?(t=e.returnType,t.typeAnnotation&&(t=t.typeAnnotation)):e.typeAnnotation&&(t=e.typeAnnotation),t}(e);if(!n)return !1;const r=e.typeParameters&&e.typeParameters.params;if(r){if(r.length>1)return !1;if(1===r.length){const e=r[0];if(e.constraint||e.default)return !1}}return 1===wT(e).length&&(PT(n)||ST(t))}};const{printComments:qT,printDanglingComments:UT}=tD,{getLast:zT,isNonEmptyArray:GT}=dc,{builders:{group:HT,join:JT,line:XT,softline:YT,indent:KT,align:QT,ifBreak:ZT}}=Zc,eB=wA,{locStart:tB}=og,{isSimpleType:nB,isObjectType:rB,hasLeadingOwnLineComment:oB,isObjectTypePropertyAFunction:iB,shouldPrintComma:uB}=CC,{printAssignment:sB}=mT,{printFunctionParameters:aB,shouldGroupFunctionParameters:cB}=WT,{printArrayItems:lB}=uS;function pB(e){if(nB(e)||rB(e))return !0;if("UnionTypeAnnotation"===e.type||"TSUnionType"===e.type){const t=e.types.filter((e=>"VoidTypeAnnotation"===e.type||"TSVoidKeyword"===e.type||"NullLiteralTypeAnnotation"===e.type||"TSNullKeyword"===e.type)).length,n=e.types.some((e=>"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"GenericTypeAnnotation"===e.type||"TSTypeReference"===e.type));if(e.types.length-1===t&&n)return !0}return !1}var fB={printOpaqueType:function(e,t,n){const r=t.semi?";":"",o=e.getValue(),i=[];return i.push("opaque type ",n("id"),n("typeParameters")),o.supertype&&i.push(": ",n("supertype")),o.impltype&&i.push(" = ",n("impltype")),i.push(r),i},printTypeAlias:function(e,t,n){const r=t.semi?";":"",o=e.getValue(),i=[];o.declare&&i.push("declare "),i.push("type ",n("id"),n("typeParameters"));const u="TSTypeAliasDeclaration"===o.type?"typeAnnotation":"right";return [sB(e,t,n,i," =",u),r]},printIntersectionType:function(e,t,n){const r=e.getValue(),o=e.map(n,"types"),i=[];let u=!1;for(let e=0;e<o.length;++e)0===e?i.push(o[e]):rB(r.types[e-1])&&rB(r.types[e])?i.push([" & ",u?KT(o[e]):o[e]]):rB(r.types[e-1])||rB(r.types[e])?(e>1&&(u=!0),i.push(" & ",e>1?KT(o[e]):o[e])):i.push(KT([" &",XT,o[e]]));return HT(i)},printUnionType:function(e,t,n){const r=e.getValue(),o=e.getParentNode(),i=!("TypeParameterInstantiation"===o.type||"TSTypeParameterInstantiation"===o.type||"GenericTypeAnnotation"===o.type||"TSTypeReference"===o.type||"TSTypeAssertion"===o.type||"TupleTypeAnnotation"===o.type||"TSTupleType"===o.type||"FunctionTypeParam"===o.type&&!o.name&&e.getParentNode(1).this!==o||("TypeAlias"===o.type||"VariableDeclarator"===o.type||"TSTypeAliasDeclaration"===o.type)&&oB(t.originalText,r)),u=pB(r),s=e.map((e=>{let r=n();return u||(r=QT(2,r)),qT(e,r,t)}),"types");if(u)return JT(" | ",s);const a=i&&!oB(t.originalText,r),c=[ZT([a?XT:"","| "]),JT([XT,"| "],s)];return eB(e,t)?HT([KT(c),YT]):"TupleTypeAnnotation"===o.type&&o.types.length>1||"TSTupleType"===o.type&&o.elementTypes.length>1?HT([KT([ZT(["(",YT]),c]),YT,ZT(")")]):HT(i?KT(c):c)},printFunctionType:function(e,t,n){const r=e.getValue(),o=[],i=e.getParentNode(0),u=e.getParentNode(1),s=e.getParentNode(2);let a="TSFunctionType"===r.type||!(("ObjectTypeProperty"===i.type||"ObjectTypeInternalSlot"===i.type)&&!i.variance&&!i.optional&&tB(i)===tB(r)||"ObjectTypeCallProperty"===i.type||s&&"DeclareFunction"===s.type),c=a&&("TypeAnnotation"===i.type||"TSTypeAnnotation"===i.type);const l=c&&a&&("TypeAnnotation"===i.type||"TSTypeAnnotation"===i.type)&&"ArrowFunctionExpression"===u.type;iB(i)&&(a=!0,c=!0),l&&o.push("(");const p=aB(e,n,t,!1,!0),f=r.returnType||r.predicate||r.typeAnnotation?[a?" => ":": ",n("returnType"),n("predicate"),n("typeAnnotation")]:"",d=cB(r,f);return o.push(d?HT(p):p),f&&o.push(f),l&&o.push(")"),HT(o)},printTupleType:function(e,t,n){const r=e.getValue(),o="TSTupleType"===r.type?"elementTypes":"types",i=r[o],u=GT(i),s=u&&"TSRestType"===zT(i).type,a=u?YT:"";return HT(["[",KT([a,lB(e,t,o,n)]),ZT(u&&uB(t,"all")&&!s?",":""),UT(e,t,!0),a,"]"])},printIndexedAccessType:function(e,t,n){const r=e.getValue(),o="OptionalIndexedAccessType"===r.type&&r.optional?"?.[":"[";return [n("objectType"),o,n("indexType"),"]"]},shouldHugType:pB};const{printDanglingComments:dB}=tD,{builders:{join:hB,line:gB,hardline:mB,softline:yB,group:DB,indent:EB,ifBreak:CB}}=Zc,{isTestCall:bB,hasComment:vB,CommentCheckFlags:AB,isTSXFile:FB,shouldPrintComma:xB,getFunctionParameters:SB,isObjectType:wB}=CC,{createGroupIdMapper:TB}=dc,{shouldHugType:BB}=fB,{isArrowFunctionVariableDeclarator:NB}=mT,kB=TB("typeParameters");function PB(e,t){const n=e.getValue();if(!vB(n,AB.Dangling))return "";const r=!vB(n,AB.Line),o=dB(e,t,r);return r?o:[o,mB]}var OB={printTypeParameter:function(e,t,n){const r=e.getValue(),o=[],i=e.getParentNode();return "TSMappedType"===i.type?(o.push("[",n("name")),r.constraint&&o.push(" in ",n("constraint")),i.nameType&&o.push(" as ",e.callParent((()=>n("nameType")))),o.push("]"),o):(r.variance&&o.push(n("variance")),o.push(n("name")),r.bound&&o.push(": ",n("bound")),r.constraint&&o.push(" extends ",n("constraint")),r.default&&o.push(" = ",n("default")),o)},printTypeParameters:function(e,t,n,r){const o=e.getValue();if(!o[r])return "";if(!Array.isArray(o[r]))return n(r);const i=e.getNode(2),u=i&&bB(i),s=e.match((e=>!(1===e[r].length&&wB(e[r][0]))),void 0,((e,t)=>"typeAnnotation"===t),(e=>"Identifier"===e.type),NB);if(!s&&(u||0===o[r].length||1===o[r].length&&("NullableTypeAnnotation"===o[r][0].type||BB(o[r][0]))))return ["<",hB(", ",e.map(n,r)),PB(e,t),">"];const a="TSTypeParameterInstantiation"===o.type?"":1===SB(o).length&&FB(t)&&!o[r][0].constraint&&"ArrowFunctionExpression"===e.getParentNode().type?",":xB(t,"all")?CB(","):"";return DB(["<",EB([yB,hB([",",gB],e.map(n,r))]),a,yB,">"],{id:kB(o)})},getTypeParametersGroupId:kB};const{printComments:IB}=tD,{printString:LB,printNumber:jB}=dc,{isNumericLiteral:_B,isSimpleNumber:MB,isStringLiteral:RB,isStringPropSafeToUnquote:VB,rawText:$B}=CC,{printAssignment:WB}=mT,qB=new WeakMap;function UB(e,t,n){const r=e.getNode();if(r.computed)return ["[",n("key"),"]"];const o=e.getParentNode(),{key:i}=r;if("ClassPrivateProperty"===r.type&&"Identifier"===i.type)return ["#",n("key")];if("consistent"===t.quoteProps&&!qB.has(o)){const e=(o.properties||o.body||o.members).some((e=>!e.computed&&e.key&&RB(e.key)&&!VB(e,t)));qB.set(o,e);}if(("Identifier"===i.type||_B(i)&&MB(jB($B(i)))&&String(i.value)===jB($B(i))&&"typescript"!==t.parser&&"babel-ts"!==t.parser)&&("json"===t.parser||"consistent"===t.quoteProps&&qB.get(o))){const n=LB(JSON.stringify("Identifier"===i.type?i.name:i.value.toString()),t);return e.call((e=>IB(e,n,t)),"key")}return VB(r,t)&&("as-needed"===t.quoteProps||"consistent"===t.quoteProps&&!qB.get(o))?e.call((e=>IB(e,/^\d/.test(i.value)?jB(i.value):i.value,t)),"key"):n("key")}var zB={printProperty:function(e,t,n){return e.getValue().shorthand?n("value"):WB(e,t,n,UB(e,t,n),":","value")},printPropertyKey:UB};const GB=Ty,{printDanglingComments:HB,printCommentsSeparately:JB}=tD,XB=au,{getNextNonSpaceNonCommentCharacterIndex:YB}=dc,{builders:{line:KB,softline:QB,group:ZB,indent:eN,ifBreak:tN,hardline:nN,join:rN,indentIfBreak:oN},utils:{removeLines:iN,willBreak:uN}}=Zc,{ArgExpansionBailout:sN}=Cp,{getFunctionParameters:aN,hasLeadingOwnLineComment:cN,isFlowAnnotationComment:lN,isJsxNode:pN,isTemplateOnItsOwnLine:fN,shouldPrintComma:dN,startsWithNoLookaheadToken:hN,isBinaryish:gN,isLineComment:mN,hasComment:yN,getComments:DN,CommentCheckFlags:EN,isCallLikeExpression:CN,isCallExpression:bN,getCallArguments:vN,hasNakedLeftSide:AN,getLeftSide:FN}=CC,{locEnd:xN}=og,{printFunctionParameters:SN,shouldGroupFunctionParameters:wN}=WT,{printPropertyKey:TN}=zB,{printFunctionTypeParameters:BN}=_x;function NN(e,t,n){const r=e.getNode(),o=SN(e,n,t),i=PN(e,n,t),u=wN(r,i),s=[BN(e,t,n),ZB([u?ZB(o):o,i])];return r.body?s.push(" ",n("body")):s.push(t.semi?";":""),s}function kN(e,t){if("always"===t.arrowParens)return !1;if("avoid"===t.arrowParens){return function(e){const t=aN(e);return !(1!==t.length||e.typeParameters||yN(e,EN.Dangling)||"Identifier"!==t[0].type||t[0].typeAnnotation||yN(t[0])||t[0].optional||e.predicate||e.returnType)}(e.getValue())}return !1}function PN(e,t,n){const r=e.getValue(),o=t("returnType");if(r.returnType&&lN(n.originalText,r.returnType))return [" /*: ",o," */"];const i=[o];return r.returnType&&r.returnType.typeAnnotation&&i.unshift(": "),r.predicate&&i.push(r.returnType?" ":": ",t("predicate")),i}function ON(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[];r.argument&&(!function(e,t){if(cN(e.originalText,t))return !0;if(AN(t)){let n,r=t;for(;n=FN(r);)if(r=n,cN(e.originalText,r))return !0}return !1}(t,r.argument)?gN(r.argument)||"SequenceExpression"===r.argument.type?i.push(ZB([tN(" ("," "),eN([QB,n("argument")]),QB,tN(")")])):i.push(" ",n("argument")):i.push([" (",eN([nN,n("argument")]),nN,")"]));const u=DN(r),s=XB(u),a=s&&mN(s);return a&&i.push(o),yN(r,EN.Dangling)&&i.push(" ",HB(e,t,!0)),a||i.push(o),i}var IN={printFunction:function(e,t,n,r){const o=e.getValue();let i=!1;if(("FunctionDeclaration"===o.type||"FunctionExpression"===o.type)&&r&&r.expandLastArg){const t=e.getParentNode();bN(t)&&vN(t).length>1&&(i=!0);}const u=[];"TSDeclareFunction"===o.type&&o.declare&&u.push("declare "),o.async&&u.push("async "),o.generator?u.push("function* "):u.push("function "),o.id&&u.push(t("id"));const s=SN(e,t,n,i),a=PN(e,t,n),c=wN(o,a);return u.push(BN(e,n,t),ZB([c?ZB(s):s,a]),o.body?" ":"",t("body")),!n.semi||!o.declare&&o.body||u.push(";"),u},printArrowFunction:function(e,t,n,r){let o=e.getValue();const i=[],u=[];let s=!1;if(function a(){const c=function(e,t,n,r){const o=[];if(e.getValue().async&&o.push("async "),kN(e,t))o.push(n(["params",0]));else {const i=r&&(r.expandLastArg||r.expandFirstArg);let u=PN(e,n,t);if(i){if(uN(u))throw new sN;u=ZB(iN(u));}o.push(ZB([SN(e,n,t,i,!0),u]));}const i=HB(e,t,!0,(e=>{const n=YB(t.originalText,e,xN);return !1!==n&&"=>"===t.originalText.slice(n,n+2)}));return i&&o.push(" ",i),o}(e,t,n,r);if(0===i.length)i.push(c);else {const{leading:n,trailing:r}=JB(e,t);i.push([n,c]),u.unshift(r);}s=s||o.returnType&&aN(o).length>0||o.typeParameters||aN(o).some((e=>"Identifier"!==e.type)),"ArrowFunctionExpression"!==o.body.type||r&&r.expandLastArg?u.unshift(n("body",r)):(o=o.body,e.call(a,"body"));}(),i.length>1)return function(e,t,n,r,o,i){const u=e.getName(),s=e.getParentNode(),a=CN(s)&&"callee"===u,c=Boolean(t&&t.assignmentLayout),l="BlockStatement"!==i.body.type&&"ObjectExpression"!==i.body.type&&"SequenceExpression"!==i.body.type,p=a&&l||t&&"chain-tail-arrow-chain"===t.assignmentLayout,f=Symbol("arrow-chain");return "SequenceExpression"===i.body.type&&(o=ZB(["(",eN([QB,o]),QB,")"])),ZB([ZB(eN([a||c?QB:"",ZB(rN([" =>",KB],n),{shouldBreak:r})]),{id:f,shouldBreak:p})," =>",oN(l?eN([KB,o]):[" ",o],{groupId:f}),a?tN(QB,"",{groupId:f}):""])}(e,r,i,s,u,o);const a=i;if(a.push(" =>"),!cN(t.originalText,o.body)&&("ArrayExpression"===o.body.type||"ObjectExpression"===o.body.type||"BlockStatement"===o.body.type||pN(o.body)||fN(o.body,t.originalText)||"ArrowFunctionExpression"===o.body.type||"DoExpression"===o.body.type))return ZB([...a," ",u]);if("SequenceExpression"===o.body.type)return ZB([...a,ZB([" (",eN([QB,u]),QB,")"])]);const c=(r&&r.expandLastArg||"JSXExpressionContainer"===e.getParentNode().type)&&!yN(o),l=r&&r.expandLastArg&&dN(t,"all"),p="ConditionalExpression"===o.body.type&&!hN(o.body,!1);return ZB([...a,ZB([eN([KB,p?tN("","("):"",u,p?tN("",")"):""]),c?[tN(l?",":""),QB]:""])])},printMethod:function(e,t,n){const r=e.getNode(),{kind:o}=r,i=r.value||r,u=[];return o&&"init"!==o&&"method"!==o&&"constructor"!==o?(GB.ok("get"===o||"set"===o),u.push(o," ")):i.async&&u.push("async "),i.generator&&u.push("*"),u.push(TN(e,t,n),r.optional||r.key.optional?"?":""),r===i?u.push(NN(e,t,n)):"FunctionExpression"===i.type?u.push(e.call((e=>NN(e,t,n)),"value")):u.push(n("value")),u},printReturnStatement:function(e,t,n){return ["return",ON(e,t,n)]},printThrowStatement:function(e,t,n){return ["throw",ON(e,t,n)]},printMethodInternal:NN,shouldPrintParamsWithoutParens:kN};const{isNonEmptyArray:LN,hasNewline:jN}=dc,{builders:{line:_N,hardline:MN,join:RN,breakParent:VN,group:$N}}=Zc,{locStart:WN,locEnd:qN}=og,{getParentExportDeclaration:UN}=CC;function zN(e,t){return e.decorators.some((e=>jN(t.originalText,qN(e))))}function GN(e){if("ExportDefaultDeclaration"!==e.type&&"ExportNamedDeclaration"!==e.type&&"DeclareExportDeclaration"!==e.type)return !1;const t=e.declaration&&e.declaration.decorators;return LN(t)&&WN(e,{ignoreDecorators:!0})>WN(t[0])}var HN={printDecorators:function(e,t,n){const r=e.getValue(),{decorators:o}=r;if(!LN(o)||GN(e.getParentNode()))return;const i="ClassExpression"===r.type||"ClassDeclaration"===r.type||zN(r,t);return [UN(e)?MN:i?VN:"",RN(_N,e.map(n,"decorators")),_N]},printClassMemberDecorators:function(e,t,n){const r=e.getValue();return $N([RN(_N,e.map(n,"decorators")),zN(r,t)?MN:_N])},printDecoratorsBeforeExport:function(e,t,n){return [RN(MN,e.map(n,"declaration","decorators")),MN]},hasDecoratorsBeforeExport:GN};const{isNonEmptyArray:JN,createGroupIdMapper:XN}=dc,{printComments:YN,printDanglingComments:KN}=tD,{builders:{join:QN,line:ZN,hardline:ek,softline:tk,group:nk,indent:rk,ifBreak:ok}}=Zc,{hasComment:ik,CommentCheckFlags:uk}=CC,{getTypeParametersGroupId:sk}=OB,{printMethod:ak}=IN,{printOptionalToken:ck,printTypeAnnotation:lk}=_x,{printPropertyKey:pk}=zB,{printAssignment:fk}=mT,{printClassMemberDecorators:dk}=HN;const hk=XN("heritageGroup");function gk(e){return e.typeParameters&&!ik(e.typeParameters,uk.Trailing|uk.Line)&&!function(e){return ["superClass","extends","mixins","implements"].filter((t=>Boolean(e[t]))).length>1}(e)}function mk(e,t,n,r){const o=e.getValue();if(!JN(o[r]))return "";const i=KN(e,t,!0,(e=>{let{marker:t}=e;return t===r}));return [gk(o)?ok(" ",ZN,{groupId:sk(o.typeParameters)}):ZN,i,i&&ek,r,nk(rk([ZN,QN([",",ZN],e.map(n,r))]))]}function yk(e,t,n){const r=n("superClass");return "AssignmentExpression"===e.getParentNode().type?nk(ok(["(",rk([tk,r]),tk,")"],r)):r}var Dk={printClass:function(e,t,n){const r=e.getValue(),o=[];r.declare&&o.push("declare "),r.abstract&&o.push("abstract "),o.push("class");const i=r.id&&ik(r.id,uk.Trailing)||r.superClass&&ik(r.superClass)||JN(r.extends)||JN(r.mixins)||JN(r.implements),u=[],s=[];if(r.id&&u.push(" ",n("id")),u.push(n("typeParameters")),r.superClass){const r=["extends ",yk(e,t,n),n("superTypeParameters")],o=e.call((e=>YN(e,r,t)),"superClass");i?s.push(ZN,nk(o)):s.push(" ",o);}else s.push(mk(e,t,n,"extends"));if(s.push(mk(e,t,n,"mixins"),mk(e,t,n,"implements")),i){let e;e=gk(r)?[...u,rk(s)]:rk([...u,s]),o.push(nk(e,{id:hk(r)}));}else o.push(...u,...s);return o.push(" ",n("body")),o},printClassMethod:function(e,t,n){const r=e.getValue(),o=[];return JN(r.decorators)&&o.push(dk(e,t,n)),r.accessibility&&o.push(r.accessibility+" "),r.readonly&&o.push("readonly "),r.declare&&o.push("declare "),r.static&&o.push("static "),("TSAbstractMethodDefinition"===r.type||r.abstract)&&o.push("abstract "),r.override&&o.push("override "),o.push(ak(e,t,n)),o},printClassProperty:function(e,t,n){const r=e.getValue(),o=[],i=t.semi?";":"";return JN(r.decorators)&&o.push(dk(e,t,n)),r.accessibility&&o.push(r.accessibility+" "),r.declare&&o.push("declare "),r.static&&o.push("static "),("TSAbstractPropertyDefinition"===r.type||r.abstract)&&o.push("abstract "),r.override&&o.push("override "),r.readonly&&o.push("readonly "),r.variance&&o.push(n("variance")),o.push(pk(e,t,n),ck(e),lk(e,t,n)),[fk(e,t,n,o," =","value"),i]},printHardlineAfterHeritage:function(e){return ok(ek,"",{groupId:hk(e)})}};const{isNonEmptyArray:Ek}=dc,{builders:{join:Ck,line:bk,group:vk,indent:Ak,ifBreak:Fk}}=Zc,{hasComment:xk,identity:Sk,CommentCheckFlags:wk}=CC,{getTypeParametersGroupId:Tk}=OB,{printTypeScriptModifiers:Bk}=_x;var Nk={printInterface:function(e,t,n){const r=e.getValue(),o=[];r.declare&&o.push("declare "),"TSInterfaceDeclaration"===r.type&&o.push(r.abstract?"abstract ":"",Bk(e,t,n)),o.push("interface");const i=[],u=[];"InterfaceTypeAnnotation"!==r.type&&i.push(" ",n("id"),n("typeParameters"));const s=r.typeParameters&&!xk(r.typeParameters,wk.Trailing|wk.Line);return Ek(r.extends)&&u.push(s?Fk(" ",bk,{groupId:Tk(r.typeParameters)}):bk,"extends ",(1===r.extends.length?Sk:Ak)(Ck([",",bk],e.map(n,"extends")))),r.id&&xk(r.id,wk.Trailing)||Ek(r.extends)?s?o.push(vk([...i,Ak(u)])):o.push(vk(Ak([...i,...u]))):o.push(...i,...u),o.push(" ",n("body")),vk(o)}};const{isNonEmptyArray:kk}=dc,{builders:{softline:Pk,group:Ok,indent:Ik,join:Lk,line:jk,ifBreak:_k,hardline:Mk}}=Zc,{printDanglingComments:Rk}=tD,{hasComment:Vk,CommentCheckFlags:$k,shouldPrintComma:Wk,needsHardlineAfterDanglingComment:qk}=CC,{locStart:Uk,hasSameLoc:zk}=og,{hasDecoratorsBeforeExport:Gk,printDecoratorsBeforeExport:Hk}=HN;function Jk(e,t,n){const r=e.getValue();if(!r.source)return "";const o=[];return Yk(r,t)||o.push(" from"),o.push(" ",n("source")),o}function Xk(e,t,n){const r=e.getValue();if(Yk(r,t))return "";const o=[" "];if(kk(r.specifiers)){const i=[],u=[];if(e.each((()=>{const t=e.getValue().type;if("ExportNamespaceSpecifier"===t||"ExportDefaultSpecifier"===t||"ImportNamespaceSpecifier"===t||"ImportDefaultSpecifier"===t)i.push(n());else {if("ExportSpecifier"!==t&&"ImportSpecifier"!==t)throw new Error("Unknown specifier type ".concat(JSON.stringify(t)));u.push(n());}}),"specifiers"),o.push(Lk(", ",i)),u.length>0){i.length>0&&o.push(", ");u.length>1||i.length>0||r.specifiers.some((e=>Vk(e)))?o.push(Ok(["{",Ik([t.bracketSpacing?jk:Pk,Lk([",",jk],u)]),_k(Wk(t)?",":""),t.bracketSpacing?jk:Pk,"}"])):o.push(["{",t.bracketSpacing?" ":"",...u,t.bracketSpacing?" ":"","}"]);}}else o.push("{}");return o}function Yk(e,t){const{type:n,importKind:r,source:o,specifiers:i}=e;return "ImportDeclaration"===n&&!kk(i)&&"type"!==r&&!/{\s*}/.test(t.originalText.slice(Uk(e),Uk(o)))}function Kk(e,t,n){const r=e.getNode();return kk(r.assertions)?[" assert {",t.bracketSpacing?" ":"",Lk(", ",e.map(n,"assertions")),t.bracketSpacing?" ":"","}"]:""}var Qk={printImportDeclaration:function(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[],{importKind:u}=r;return i.push("import"),u&&"value"!==u&&i.push(" ",u),i.push(Xk(e,t,n),Jk(e,t,n),Kk(e,t,n),o),i},printExportDeclaration:function(e,t,n){const r=e.getValue(),o=[];Gk(r)&&o.push(Hk(e,t,n));const{type:i,exportKind:u,declaration:s}=r;return o.push("export"),(r.default||"ExportDefaultDeclaration"===i)&&o.push(" default"),Vk(r,$k.Dangling)&&(o.push(" ",Rk(e,t,!0)),qk(r)&&o.push(Mk)),s?o.push(" ",n("declaration")):o.push("type"===u?" type":"",Xk(e,t,n),Jk(e,t,n),Kk(e,t,n)),function(e,t){if(!t.semi)return !1;const{type:n,declaration:r}=e,o=e.default||"ExportDefaultDeclaration"===n;if(!r)return !0;const{type:i}=r;if(o&&"ClassDeclaration"!==i&&"FunctionDeclaration"!==i&&"TSInterfaceDeclaration"!==i&&"DeclareClass"!==i&&"DeclareFunction"!==i&&"TSDeclareFunction"!==i&&"EnumDeclaration"!==i)return !0;return !1}(r,t)&&o.push(";"),o},printExportAllDeclaration:function(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[],{exportKind:u,exported:s}=r;return i.push("export"),"type"===u&&i.push(" type"),i.push(" *"),s&&i.push(" as ",n("exported")),i.push(Jk(e,t,n),Kk(e,t,n),o),i},printModuleSpecifier:function(e,t,n){const r=e.getNode(),{type:o}=r,i=[],u="ImportSpecifier"===o?r.importKind:r.exportKind;u&&"value"!==u&&i.push(u," ");const s=o.startsWith("Import"),a=s?"imported":"local",c=s?"local":"exported";let l="",p="";return "ExportNamespaceSpecifier"===o||"ImportNamespaceSpecifier"===o?l="*":r[a]&&(l=n(a)),!r[c]||r[a]&&zk(r[a],r[c])||(p=n(c)),i.push(l,l&&p?" as ":"",p),i}};const{printDanglingComments:Zk}=tD,{builders:{line:eP,softline:tP,group:nP,indent:rP,ifBreak:oP,hardline:iP}}=Zc,{getLast:uP,hasNewlineInRange:sP,hasNewline:aP,isNonEmptyArray:cP}=dc,{shouldPrintComma:lP,hasComment:pP,getComments:fP,CommentCheckFlags:dP,isNextLineEmpty:hP}=CC,{locStart:gP,locEnd:mP}=og,{printOptionalToken:yP,printTypeAnnotation:DP}=_x,{shouldHugFunctionParameters:EP}=WT,{shouldHugType:CP}=fB,{printHardlineAfterHeritage:bP}=Dk;var vP={printObject:function(e,t,n){const r=t.semi?";":"",o=e.getValue();let i;i="TSTypeLiteral"===o.type?"members":"TSInterfaceBody"===o.type?"body":"properties";const u="ObjectTypeAnnotation"===o.type,s=[i];u&&s.push("indexers","callProperties","internalSlots");const a=s.map((e=>o[e][0])).sort(((e,t)=>gP(e)-gP(t)))[0],c=e.getParentNode(0),l=u&&c&&("InterfaceDeclaration"===c.type||"DeclareInterface"===c.type||"DeclareClass"===c.type)&&"body"===e.getName(),p="TSInterfaceBody"===o.type||l||"ObjectPattern"===o.type&&"FunctionDeclaration"!==c.type&&"FunctionExpression"!==c.type&&"ArrowFunctionExpression"!==c.type&&"ObjectMethod"!==c.type&&"ClassMethod"!==c.type&&"ClassPrivateMethod"!==c.type&&"AssignmentPattern"!==c.type&&"CatchClause"!==c.type&&o.properties.some((e=>e.value&&("ObjectPattern"===e.value.type||"ArrayPattern"===e.value.type)))||"ObjectPattern"!==o.type&&a&&sP(t.originalText,gP(o),gP(a)),f=l?";":"TSInterfaceBody"===o.type||"TSTypeLiteral"===o.type?oP(r,";"):",",d="RecordExpression"===o.type?"#{":o.exact?"{|":"{",h=o.exact?"|}":"}",g=[];for(const t of s)e.each((e=>{const t=e.getValue();g.push({node:t,printed:n(),loc:gP(t)});}),t);s.length>1&&g.sort(((e,t)=>e.loc-t.loc));let m=[];const y=g.map((e=>{const n=[...m,nP(e.printed)];return m=[f,eP],"TSPropertySignature"!==e.node.type&&"TSMethodSignature"!==e.node.type&&"TSConstructSignatureDeclaration"!==e.node.type||!pP(e.node,dP.PrettierIgnore)||m.shift(),hP(e.node,t)&&m.push(iP),n}));if(o.inexact){let n;if(pP(o,dP.Dangling)){const r=pP(o,dP.Line);n=[Zk(e,t,!0),r||aP(t.originalText,mP(uP(fP(o))))?iP:eP,"..."];}else n=["..."];y.push([...m,...n]);}const D=uP(o[i]),E=!(o.inexact||D&&"RestElement"===D.type||D&&("TSPropertySignature"===D.type||"TSCallSignatureDeclaration"===D.type||"TSMethodSignature"===D.type||"TSConstructSignatureDeclaration"===D.type)&&pP(D,dP.PrettierIgnore));let C;if(0===y.length){if(!pP(o,dP.Dangling))return [d,h,DP(e,t,n)];C=nP([d,Zk(e,t),tP,h,yP(e),DP(e,t,n)]);}else C=[l&&cP(o.properties)?bP(c):"",d,rP([t.bracketSpacing?eP:tP,...y]),oP(E&&(","!==f||lP(t))?f:""),t.bracketSpacing?eP:tP,h,yP(e),DP(e,t,n)];return e.match((e=>"ObjectPattern"===e.type&&!e.decorators),((e,t,n)=>EP(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||e.match(CP,((e,t)=>"typeAnnotation"===t),((e,t)=>"typeAnnotation"===t),((e,t,n)=>EP(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||!p&&e.match((e=>"ObjectPattern"===e.type),(e=>"AssignmentExpression"===e.type||"VariableDeclarator"===e.type))?C:nP(C,{shouldBreak:p})}};const AP=Ty,{printDanglingComments:FP}=tD,{printString:xP,printNumber:SP}=dc,{builders:{hardline:wP,softline:TP,group:BP,indent:NP}}=Zc,{getParentExportDeclaration:kP,isFunctionNotation:PP,isGetterOrSetter:OP,rawText:IP,shouldPrintComma:LP}=CC,{locStart:jP,locEnd:_P}=og,{printClass:MP}=Dk,{printOpaqueType:RP,printTypeAlias:VP,printIntersectionType:$P,printUnionType:WP,printFunctionType:qP,printTupleType:UP,printIndexedAccessType:zP}=fB,{printInterface:GP}=Nk,{printTypeParameter:HP,printTypeParameters:JP}=OB,{printExportDeclaration:XP,printExportAllDeclaration:YP}=Qk,{printArrayItems:KP}=uS,{printObject:QP}=vP,{printPropertyKey:ZP}=zB,{printOptionalToken:eO,printTypeAnnotation:tO,printRestSpread:nO}=_x;function rO(e,t){const n=kP(e);return n?(AP.strictEqual(n.type,"DeclareExportDeclaration"),t):["declare ",t]}var oO={printFlow:function(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[];switch(r.type){case"DeclareClass":return rO(e,MP(e,t,n));case"DeclareFunction":return rO(e,["function ",n("id"),r.predicate?" ":"",n("predicate"),o]);case"DeclareModule":return rO(e,["module ",n("id")," ",n("body")]);case"DeclareModuleExports":return rO(e,["module.exports",": ",n("typeAnnotation"),o]);case"DeclareVariable":return rO(e,["var ",n("id"),o]);case"DeclareOpaqueType":return rO(e,RP(e,t,n));case"DeclareInterface":return rO(e,GP(e,t,n));case"DeclareTypeAlias":return rO(e,VP(e,t,n));case"DeclareExportDeclaration":return rO(e,XP(e,t,n));case"DeclareExportAllDeclaration":return rO(e,YP(e,t,n));case"OpaqueType":return RP(e,t,n);case"TypeAlias":return VP(e,t,n);case"IntersectionTypeAnnotation":return $P(e,t,n);case"UnionTypeAnnotation":return WP(e,t,n);case"FunctionTypeAnnotation":return qP(e,t,n);case"TupleTypeAnnotation":return UP(e,t,n);case"GenericTypeAnnotation":return [n("id"),JP(e,t,n,"typeParameters")];case"IndexedAccessType":case"OptionalIndexedAccessType":return zP(e,t,n);case"TypeAnnotation":return n("typeAnnotation");case"TypeParameter":return HP(e,t,n);case"TypeofTypeAnnotation":return ["typeof ",n("argument")];case"ExistsTypeAnnotation":return "*";case"EmptyTypeAnnotation":return "empty";case"MixedTypeAnnotation":return "mixed";case"ArrayTypeAnnotation":return [n("elementType"),"[]"];case"BooleanLiteralTypeAnnotation":return String(r.value);case"EnumDeclaration":return ["enum ",n("id")," ",n("body")];case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":if("EnumSymbolBody"===r.type||r.explicitType){let e=null;switch(r.type){case"EnumBooleanBody":e="boolean";break;case"EnumNumberBody":e="number";break;case"EnumStringBody":e="string";break;case"EnumSymbolBody":e="symbol";}i.push("of ",e," ");}if(0!==r.members.length||r.hasUnknownMembers){const o=r.members.length>0?[wP,KP(e,t,"members",n),r.hasUnknownMembers||LP(t)?",":""]:[];i.push(BP(["{",NP([...o,...r.hasUnknownMembers?[wP,"..."]:[]]),FP(e,t,!0),wP,"}"]));}else i.push(BP(["{",FP(e,t),TP,"}"]));return i;case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return [n("id")," = ","object"==typeof r.init?n("init"):String(r.init)];case"EnumDefaultedMember":return n("id");case"FunctionTypeParam":{const t=r.name?n("name"):e.getParentNode().this===r?"this":"";return [t,eO(e),t?": ":"",n("typeAnnotation")]}case"InterfaceDeclaration":case"InterfaceTypeAnnotation":return GP(e,t,n);case"ClassImplements":case"InterfaceExtends":return [n("id"),n("typeParameters")];case"NullableTypeAnnotation":return ["?",n("typeAnnotation")];case"Variance":{const{kind:e}=r;return AP.ok("plus"===e||"minus"===e),"plus"===e?"+":"-"}case"ObjectTypeCallProperty":return r.static&&i.push("static "),i.push(n("value")),i;case"ObjectTypeIndexer":return [r.variance?n("variance"):"","[",n("id"),r.id?": ":"",n("key"),"]: ",n("value")];case"ObjectTypeProperty":{let o="";return r.proto?o="proto ":r.static&&(o="static "),[o,OP(r)?r.kind+" ":"",r.variance?n("variance"):"",ZP(e,t,n),eO(e),PP(r)?"":": ",n("value")]}case"ObjectTypeAnnotation":return QP(e,t,n);case"ObjectTypeInternalSlot":return [r.static?"static ":"","[[",n("id"),"]]",eO(e),r.method?"":": ",n("value")];case"ObjectTypeSpreadProperty":return nO(e,t,n);case"QualifiedTypeIdentifier":return [n("qualification"),".",n("id")];case"StringLiteralTypeAnnotation":return xP(IP(r),t);case"NumberLiteralTypeAnnotation":AP.strictEqual(typeof r.value,"number");case"BigIntLiteralTypeAnnotation":return r.extra?SP(r.extra.raw):SP(r.raw);case"TypeCastExpression":return ["(",n("expression"),tO(e,t,n),")"];case"TypeParameterDeclaration":case"TypeParameterInstantiation":{const o=JP(e,t,n,"params");if("flow"===t.parser){const e=jP(r),n=_P(r),i=t.originalText.lastIndexOf("/*",e),u=t.originalText.indexOf("*/",n);if(-1!==i&&-1!==u){const e=t.originalText.slice(i+2,u).trim();if(e.startsWith("::")&&!e.includes("/*")&&!e.includes("*/"))return ["/*:: ",o," */"]}}return o}case"InferredPredicate":return "%checks";case"DeclaredPredicate":return ["%checks(",n("value"),")"];case"AnyTypeAnnotation":return "any";case"BooleanTypeAnnotation":return "boolean";case"BigIntTypeAnnotation":return "bigint";case"NullLiteralTypeAnnotation":return "null";case"NumberTypeAnnotation":return "number";case"SymbolTypeAnnotation":return "symbol";case"StringTypeAnnotation":return "string";case"VoidTypeAnnotation":return "void";case"ThisTypeAnnotation":return "this";case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":case"Type":throw new Error("unprintable type: "+JSON.stringify(r.type))}}};const{hasNewlineInRange:iO}=dc,{isJsxNode:uO,isBlockComment:sO,getComments:aO,isCallExpression:cO,isMemberExpression:lO}=CC,{locStart:pO,locEnd:fO}=og,{builders:{line:dO,softline:hO,group:gO,indent:mO,align:yO,ifBreak:DO,dedent:EO,breakParent:CO}}=Zc;function bO(e,t,n){const r=e.getValue(),o="ConditionalExpression"===r.type,i=o?"alternate":"falseType",u=e.getParentNode(),s=o?n("test"):[n("checkType")," ","extends"," ",n("extendsType")];return u.type===r.type&&u[i]===r?yO(2,s):s}const vO=new Map([["AssignmentExpression","right"],["VariableDeclarator","init"],["ReturnStatement","argument"],["ThrowStatement","argument"],["UnaryExpression","argument"],["YieldExpression","argument"]]);var AO={printTernary:function(e,t,n){const r=e.getValue(),o="ConditionalExpression"===r.type,i=o?"consequent":"trueType",u=o?"alternate":"falseType",s=o?["test"]:["checkType","extendsType"],a=r[i],c=r[u],l=[];let p=!1;const f=e.getParentNode(),d=f.type===r.type&&s.some((e=>f[e]===r));let h,g,m=f.type===r.type&&!d,y=0;do{g=h||r,h=e.getParentNode(y),y++;}while(h&&h.type===r.type&&s.every((e=>h[e]!==g)));const D=h||f,E=g;if(o&&(uO(r[s[0]])||uO(a)||uO(c)||function(e){const t=[e];for(let e=0;e<t.length;e++){const n=t[e];for(const e of ["test","consequent","alternate"]){const r=n[e];if(uO(r))return !0;"ConditionalExpression"===r.type&&t.push(r);}}return !1}(E))){p=!0,m=!0;const e=e=>[DO("("),mO([hO,e]),hO,DO(")")],t=e=>"NullLiteral"===e.type||"Literal"===e.type&&null===e.value||"Identifier"===e.type&&"undefined"===e.name;l.push(" ? ",t(a)?n(i):e(n(i))," : ",c.type===r.type||t(c)?n(u):e(n(u)));}else {const e=[dO,"? ",a.type===r.type?DO("","("):"",yO(2,n(i)),a.type===r.type?DO("",")"):"",dO,": ",c.type===r.type?n(u):yO(2,n(u))];l.push(f.type!==r.type||f[u]===r||d?e:t.useTabs?EO(mO(e)):yO(Math.max(0,t.tabWidth-2),e));}const C=[...s.map((e=>aO(r[e]))),aO(a),aO(c)].flat().some((e=>sO(e)&&iO(t.originalText,pO(e),fO(e)))),b=!p&&(lO(f)||"NGPipeExpression"===f.type&&f.left===r)&&!f.computed,v=function(e){const t=e.getValue();if("ConditionalExpression"!==t.type)return !1;let n,r=t;for(let t=0;!n;t++){const o=e.getParentNode(t);cO(o)&&o.callee===r||lO(o)&&o.object===r||"TSNonNullExpression"===o.type&&o.expression===r?r=o:"NewExpression"===o.type&&o.callee===r||"TSAsExpression"===o.type&&o.expression===r?(n=e.getParentNode(t+1),r=o):n=o;}return r!==t&&n[vO.get(n.type)]===r}(e),A=(e=>f===D?gO(e,{shouldBreak:C}):C?[e,CO]:e)([bO(e,0,n),m?l:mO(l),o&&b&&!v?hO:""]);return d||v?gO([mO([hO,A]),hO]):A}};const{builders:{hardline:FO}}=Zc,xO=wA,{getLeftSidePathName:SO,hasNakedLeftSide:wO,isJsxNode:TO,isTheOnlyJsxElementInMarkdown:BO,hasComment:NO,CommentCheckFlags:kO,isNextLineEmpty:PO}=CC,{shouldPrintParamsWithoutParens:OO}=IN;function IO(e,t,n,r){const o=e.getValue(),i=[],u="ClassBody"===o.type,s=function(e){for(let t=e.length-1;t>=0;t--){const n=e[t];if("EmptyStatement"!==n.type)return n}}(o[r]);return e.each(((e,r,o)=>{const a=e.getValue();if("EmptyStatement"===a.type)return;const c=n();t.semi||u||BO(t,e)||!function(e,t){if("ExpressionStatement"!==e.getNode().type)return !1;return e.call((e=>LO(e,t)),"expression")}(e,t)?i.push(c):NO(a,kO.Leading)?i.push(n([],{needsSemi:!0})):i.push(";",c),!t.semi&&u&&jO(a)&&function(e,t){const n=e.key&&e.key.name;if(!("static"!==n&&"get"!==n&&"set"!==n||e.value||e.typeAnnotation))return !0;if(!t)return !1;if(t.static||t.accessibility)return !1;if(!t.computed){const e=t.key&&t.key.name;if("in"===e||"instanceof"===e)return !0}if(jO(t)&&t.variance&&!t.static&&!t.declare)return !0;switch(t.type){case"ClassProperty":case"PropertyDefinition":case"TSAbstractPropertyDefinition":return t.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{if((t.value?t.value.async:t.async)||"get"===t.kind||"set"===t.kind)return !1;const e=t.value?t.value.generator:t.generator;return !(!t.computed&&!e)}case"TSIndexSignature":return !0}return !1}(a,o[r+1])&&i.push(";"),a!==s&&(i.push(FO),PO(a,t)&&i.push(FO));}),r),i}function LO(e,t){const n=e.getValue();switch(n.type){case"ParenthesizedExpression":case"TypeCastExpression":case"ArrayExpression":case"ArrayPattern":case"TemplateLiteral":case"TemplateElement":case"RegExpLiteral":return !0;case"ArrowFunctionExpression":if(!OO(e,t))return !0;break;case"UnaryExpression":{const{prefix:e,operator:t}=n;if(e&&("+"===t||"-"===t))return !0;break}case"BindExpression":if(!n.object)return !0;break;case"Literal":if(n.regex)return !0;break;default:if(TO(n))return !0}return !!xO(e,t)||!!wO(n)&&e.call((e=>LO(e,t)),...SO(e,n))}const jO=e=>{let{type:t}=e;return "ClassProperty"===t||"PropertyDefinition"===t||"ClassPrivateProperty"===t};var _O={printBody:function(e,t,n){return IO(e,t,n,"body")},printSwitchCaseConsequent:function(e,t,n){return IO(e,t,n,"consequent")}};const{printDanglingComments:MO}=tD,{isNonEmptyArray:RO}=dc,{builders:{hardline:VO,indent:$O}}=Zc,{hasComment:WO,CommentCheckFlags:qO,isNextLineEmpty:UO}=CC,{printHardlineAfterHeritage:zO}=Dk,{printBody:GO}=_O;function HO(e,t,n){const r=e.getValue(),o=RO(r.directives),i=r.body.some((e=>"EmptyStatement"!==e.type)),u=WO(r,qO.Dangling);if(!o&&!i&&!u)return "";const s=[];if(o&&e.each(((e,r,o)=>{s.push(n()),(r<o.length-1||i||u)&&(s.push(VO),UO(e.getValue(),t)&&s.push(VO));}),"directives"),i&&s.push(GO(e,t,n)),u&&s.push(MO(e,t,!0)),"Program"===r.type){const t=e.getParentNode();t&&"ModuleExpression"===t.type||s.push(VO);}return s}var JO={printBlock:function(e,t,n){const r=e.getValue(),o=[];if("StaticBlock"===r.type&&o.push("static "),"ClassBody"===r.type&&RO(r.body)){const t=e.getParentNode();o.push(zO(t));}o.push("{");const i=HO(e,t,n);if(i)o.push($O([VO,i]),VO);else {const t=e.getParentNode(),n=e.getParentNode(1);"ArrowFunctionExpression"===t.type||"FunctionExpression"===t.type||"FunctionDeclaration"===t.type||"ObjectMethod"===t.type||"ClassMethod"===t.type||"ClassPrivateMethod"===t.type||"ForStatement"===t.type||"WhileStatement"===t.type||"DoWhileStatement"===t.type||"DoExpression"===t.type||"CatchClause"===t.type&&!n.finalizer||"TSModuleDeclaration"===t.type||"TSDeclareFunction"===t.type||"StaticBlock"===r.type||"ClassBody"===r.type||o.push(VO);}return o.push("}"),o},printBlockBody:HO};const{printDanglingComments:XO}=tD,{hasNewlineInRange:YO}=dc,{builders:{join:KO,line:QO,hardline:ZO,softline:eI,group:tI,indent:nI,conditionalGroup:rI,ifBreak:oI}}=Zc,{isLiteral:iI,getTypeScriptMappedTypeModifier:uI,shouldPrintComma:sI,isCallExpression:aI,isMemberExpression:cI}=CC,{locStart:lI,locEnd:pI}=og,{printOptionalToken:fI,printTypeScriptModifiers:dI}=_x,{printTernary:hI}=AO,{printFunctionParameters:gI,shouldGroupFunctionParameters:mI}=WT,{printTemplateLiteral:yI}=VC,{printArrayItems:DI}=uS,{printObject:EI}=vP,{printClassProperty:CI,printClassMethod:bI}=Dk,{printTypeParameter:vI,printTypeParameters:AI}=OB,{printPropertyKey:FI}=zB,{printFunction:xI,printMethodInternal:SI}=IN,{printInterface:wI}=Nk,{printBlock:TI}=JO,{printTypeAlias:BI,printIntersectionType:NI,printUnionType:kI,printFunctionType:PI,printTupleType:OI,printIndexedAccessType:II}=fB;var LI={printTypescript:function(e,t,n){const r=e.getValue();if(!r.type.startsWith("TS"))return;if(r.type.endsWith("Keyword"))return r.type.slice(2,-7).toLowerCase();const o=t.semi?";":"",i=[];switch(r.type){case"TSThisType":return "this";case"TSTypeAssertion":{const e=!("ArrayExpression"===r.expression.type||"ObjectExpression"===r.expression.type),t=tI(["<",nI([eI,n("typeAnnotation")]),eI,">"]),o=[oI("("),nI([eI,n("expression")]),eI,oI(")")];return e?rI([[t,n("expression")],[t,tI(o,{shouldBreak:!0})],[t,n("expression")]]):tI([t,n("expression")])}case"TSDeclareFunction":return xI(e,n,t);case"TSExportAssignment":return ["export = ",n("expression"),o];case"TSModuleBlock":return TI(e,t,n);case"TSInterfaceBody":case"TSTypeLiteral":return EI(e,t,n);case"TSTypeAliasDeclaration":return BI(e,t,n);case"TSQualifiedName":return KO(".",[n("left"),n("right")]);case"TSAbstractMethodDefinition":case"TSDeclareMethod":return bI(e,t,n);case"TSAbstractPropertyDefinition":return CI(e,t,n);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":return i.push(n("expression")),r.typeParameters&&i.push(n("typeParameters")),i;case"TSTemplateLiteralType":return yI(e,n,t);case"TSNamedTupleMember":return [n("label"),r.optional?"?":"",": ",n("elementType")];case"TSRestType":return ["...",n("typeAnnotation")];case"TSOptionalType":return [n("typeAnnotation"),"?"];case"TSInterfaceDeclaration":return wI(e,t,n);case"TSClassImplements":return [n("expression"),n("typeParameters")];case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return AI(e,t,n,"params");case"TSTypeParameter":return vI(e,t,n);case"TSAsExpression":{i.push(n("expression")," as ",n("typeAnnotation"));const t=e.getParentNode();return aI(t)&&t.callee===r||cI(t)&&t.object===r?tI([nI([eI,...i]),eI]):i}case"TSArrayType":return [n("elementType"),"[]"];case"TSPropertySignature":return r.readonly&&i.push("readonly "),i.push(FI(e,t,n),fI(e)),r.typeAnnotation&&i.push(": ",n("typeAnnotation")),r.initializer&&i.push(" = ",n("initializer")),i;case"TSParameterProperty":return r.accessibility&&i.push(r.accessibility+" "),r.export&&i.push("export "),r.static&&i.push("static "),r.override&&i.push("override "),r.readonly&&i.push("readonly "),i.push(n("parameter")),i;case"TSTypeQuery":return ["typeof ",n("exprName")];case"TSIndexSignature":{const i=e.getParentNode(),u=r.parameters.length>1?oI(sI(t)?",":""):"",s=tI([nI([eI,KO([", ",eI],e.map(n,"parameters"))]),u,eI]);return [r.export?"export ":"",r.accessibility?[r.accessibility," "]:"",r.static?"static ":"",r.readonly?"readonly ":"",r.declare?"declare ":"","[",r.parameters?s:"",r.typeAnnotation?"]: ":"]",r.typeAnnotation?n("typeAnnotation"):"","ClassBody"===i.type?o:""]}case"TSTypePredicate":return [r.asserts?"asserts ":"",n("parameterName"),r.typeAnnotation?[" is ",n("typeAnnotation")]:""];case"TSNonNullExpression":return [n("expression"),"!"];case"TSImportType":return [r.isTypeOf?"typeof ":"","import(",n(r.parameter?"parameter":"argument"),")",r.qualifier?[".",n("qualifier")]:"",AI(e,t,n,"typeParameters")];case"TSLiteralType":return n("literal");case"TSIndexedAccessType":return II(e,t,n);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":if("TSConstructorType"===r.type&&r.abstract&&i.push("abstract "),"TSCallSignatureDeclaration"!==r.type&&i.push("new "),i.push(tI(gI(e,n,t,!1,!0))),r.returnType||r.typeAnnotation){const e="TSConstructorType"===r.type;i.push(e?" => ":": ",n("returnType"),n("typeAnnotation"));}return i;case"TSTypeOperator":return [r.operator," ",n("typeAnnotation")];case"TSMappedType":{const i=YO(t.originalText,lI(r),pI(r));return tI(["{",nI([t.bracketSpacing?QO:eI,r.readonly?[uI(r.readonly,"readonly")," "]:"",dI(e,t,n),n("typeParameter"),r.optional?uI(r.optional,"?"):"",r.typeAnnotation?": ":"",n("typeAnnotation"),oI(o)]),XO(e,t,!0),t.bracketSpacing?QO:eI,"}"],{shouldBreak:i})}case"TSMethodSignature":{const o=r.kind&&"method"!==r.kind?"".concat(r.kind," "):"";i.push(r.accessibility?[r.accessibility," "]:"",o,r.export?"export ":"",r.static?"static ":"",r.readonly?"readonly ":"",r.abstract?"abstract ":"",r.declare?"declare ":"",r.computed?"[":"",n("key"),r.computed?"]":"",fI(e));const u=gI(e,n,t,!1,!0),s=r.returnType?"returnType":"typeAnnotation",a=r[s],c=a?n(s):"",l=mI(r,c);return i.push(l?tI(u):u),a&&i.push(": ",tI(c)),tI(i)}case"TSNamespaceExportDeclaration":return i.push("export as namespace ",n("id")),t.semi&&i.push(";"),tI(i);case"TSEnumDeclaration":return r.declare&&i.push("declare "),r.modifiers&&i.push(dI(e,t,n)),r.const&&i.push("const "),i.push("enum ",n("id")," "),0===r.members.length?i.push(tI(["{",XO(e,t),eI,"}"])):i.push(tI(["{",nI([ZO,DI(e,t,"members",n),sI(t,"es5")?",":""]),XO(e,t,!0),ZO,"}"])),i;case"TSEnumMember":return i.push(n("id")),r.initializer&&i.push(" = ",n("initializer")),i;case"TSImportEqualsDeclaration":return r.isExport&&i.push("export "),i.push("import "),r.importKind&&"value"!==r.importKind&&i.push(r.importKind," "),i.push(n("id")," = ",n("moduleReference")),t.semi&&i.push(";"),tI(i);case"TSExternalModuleReference":return ["require(",n("expression"),")"];case"TSModuleDeclaration":{const u=e.getParentNode(),s=iI(r.id),a="TSModuleDeclaration"===u.type,c=r.body&&"TSModuleDeclaration"===r.body.type;if(a)i.push(".");else {r.declare&&i.push("declare "),i.push(dI(e,t,n));const o=t.originalText.slice(lI(r),lI(r.id));"Identifier"===r.id.type&&"global"===r.id.name&&!/namespace|module/.test(o)||i.push(s||/(?:^|\s)module(?:\s|$)/.test(o)?"module ":"namespace ");}return i.push(n("id")),c?i.push(n("body")):r.body?i.push(" ",tI(n("body"))):i.push(o),i}case"TSConditionalType":return hI(e,t,n);case"TSInferType":return ["infer"," ",n("typeParameter")];case"TSIntersectionType":return NI(e,t,n);case"TSUnionType":return kI(e,t,n);case"TSFunctionType":return PI(e,t,n);case"TSTupleType":return OI(e,t,n);case"TSTypeReference":return [n("typeName"),AI(e,t,n,"typeParameters")];case"TSTypeAnnotation":return n("typeAnnotation");case"TSEmptyBodyFunctionExpression":return SI(e,t,n);case"TSJSDocAllType":return "*";case"TSJSDocUnknownType":return "?";case"TSJSDocNullableType":return ["?",n("typeAnnotation")];case"TSJSDocNonNullableType":return ["!",n("typeAnnotation")];default:throw new Error("Unknown TypeScript node type: ".concat(JSON.stringify(r.type),"."))}}};const{hasNewline:jI}=dc,{builders:{join:_I,hardline:MI},utils:{replaceTextEndOfLine:RI}}=Zc,{isLineComment:VI,isBlockComment:$I}=CC,{locStart:WI,locEnd:qI}=og;var UI={printComment:function(e,t){const n=e.getValue();if(VI(n))return t.originalText.slice(WI(n),qI(n)).trimEnd();if($I(n)){if(function(e){const t="*".concat(e.value,"*").split("\n");return t.length>1&&t.every((e=>"*"===e.trim()[0]))}(n)){const e=function(e){const t=e.value.split("\n");return ["/*",_I(MI,t.map(((e,n)=>0===n?e.trimEnd():" "+(n<t.length-1?e.trim():e.trimStart())))),"*/"]}(n);return n.trailing&&!jI(t.originalText,WI(n),{backwards:!0})?[MI,e]:e}const e=qI(n),r="*-/"===t.originalText.slice(e-3,e);return ["/*",RI(n.value),r?"*-/":"*/"]}throw new Error("Not a comment: "+JSON.stringify(n))}};const{printString:zI,printNumber:GI}=dc;function HI(e){return e.toLowerCase()}function JI(e){let{pattern:t,flags:n}=e;return n=[...n].sort().join(""),"/".concat(t,"/").concat(n)}var XI={printLiteral:function(e,t){const n=e.getNode();switch(n.type){case"RegExpLiteral":return JI(n);case"BigIntLiteral":return HI(n.bigint||n.extra.raw);case"NumericLiteral":return GI(n.extra.raw);case"StringLiteral":return zI(n.extra.raw,t);case"NullLiteral":return "null";case"BooleanLiteral":return String(n.value);case"DecimalLiteral":return GI(n.value)+"m";case"Literal":{if(n.regex)return JI(n.regex);if(n.bigint)return HI(n.raw);if(n.decimal)return GI(n.decimal)+"m";const{value:e}=n;return "number"==typeof e?GI(n.raw):"string"==typeof e?zI(n.raw,t):String(e)}}}};const{printDanglingComments:YI}=tD,{hasNewline:KI}=dc,{builders:{join:QI,line:ZI,hardline:eL,softline:tL,group:nL,indent:rL},utils:{replaceTextEndOfLine:oL}}=Zc,iL=Nb,uL=Lb,{insertPragma:sL}=iv,aL=lA,cL=wA,lL=TA,{hasFlowShorthandAnnotationComment:pL,hasComment:fL,CommentCheckFlags:dL,isTheOnlyJsxElementInMarkdown:hL,isBlockComment:gL,isLineComment:mL,isNextLineEmpty:yL,needsHardlineAfterDanglingComment:DL,rawText:EL,hasIgnoreComment:CL,isCallExpression:bL,isMemberExpression:vL}=CC,{locStart:AL,locEnd:FL}=og,{printHtmlBinding:xL,isVueEventBindingExpression:SL}=IA,{printAngular:wL}=mF,{printJsx:TL,hasJsxIgnoreComment:BL}=ZF,{printFlow:NL}=oO,{printTypescript:kL}=LI,{printOptionalToken:PL,printBindExpressionCallee:OL,printTypeAnnotation:IL,adjustClause:LL,printRestSpread:jL}=_x,{printImportDeclaration:_L,printExportDeclaration:ML,printExportAllDeclaration:RL,printModuleSpecifier:VL}=Qk,{printTernary:$L}=AO,{printTemplateLiteral:WL}=VC,{printArray:qL}=uS,{printObject:UL}=vP,{printClass:zL,printClassMethod:GL,printClassProperty:HL}=Dk,{printProperty:JL}=zB,{printFunction:XL,printArrowFunction:YL,printMethod:KL,printReturnStatement:QL,printThrowStatement:ZL}=IN,{printCallExpression:ej}=Mw,{printVariableDeclarator:tj,printAssignmentExpression:nj}=mT,{printBinaryishExpression:rj}=sF,{printSwitchCaseConsequent:oj}=_O,{printMemberExpression:ij}=GS,{printBlock:uj,printBlockBody:sj}=JO,{printComment:aj}=UI,{printLiteral:cj}=XI,{printDecorators:lj}=HN;function pj(e,t){const n=EL(e),r=n.slice(1,-1);if(r.includes('"')||r.includes("'"))return n;const o=t.singleQuote?"'":'"';return o+r+o}var fj={preprocess:lL,print:function(e,t,n,r){const o=function(e,t,n,r){const o=e.getValue(),i=t.semi?";":"";if(!o)return "";if("string"==typeof o)return o;for(const r of [cj,xL,wL,TL,NL,kL]){const o=r(e,t,n);if(void 0!==o)return o}let u=[];switch(o.type){case"JsExpressionRoot":return n("node");case"JsonRoot":return [n("node"),eL];case"File":return o.program&&o.program.interpreter&&u.push(n(["program","interpreter"])),u.push(n("program")),u;case"Program":return sj(e,t,n);case"EmptyStatement":return "";case"ExpressionStatement":if(o.directive)return [pj(o.expression,t),i];if("__vue_event_binding"===t.parser){const t=e.getParentNode();if("Program"===t.type&&1===t.body.length&&t.body[0]===o)return [n("expression"),SL(o.expression)?";":""]}return [n("expression"),hL(t,e)?"":i];case"ParenthesizedExpression":return !fL(o.expression)&&("ObjectExpression"===o.expression.type||"ArrayExpression"===o.expression.type)?["(",n("expression"),")"]:nL(["(",rL([tL,n("expression")]),tL,")"]);case"AssignmentExpression":return nj(e,t,n);case"VariableDeclarator":return tj(e,t,n);case"BinaryExpression":case"LogicalExpression":return rj(e,t,n);case"AssignmentPattern":return [n("left")," = ",n("right")];case"OptionalMemberExpression":case"MemberExpression":return ij(e,t,n);case"MetaProperty":return [n("meta"),".",n("property")];case"BindExpression":return o.object&&u.push(n("object")),u.push(nL(rL([tL,OL(e,t,n)]))),u;case"Identifier":return [o.name,PL(e),IL(e,t,n)];case"V8IntrinsicIdentifier":return ["%",o.name];case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":return jL(e,t,n);case"FunctionDeclaration":case"FunctionExpression":return XL(e,n,t,r);case"ArrowFunctionExpression":return YL(e,t,n,r);case"YieldExpression":return u.push("yield"),o.delegate&&u.push("*"),o.argument&&u.push(" ",n("argument")),u;case"AwaitExpression":if(u.push("await"),o.argument){u.push(" ",n("argument"));const t=e.getParentNode();if(bL(t)&&t.callee===o||vL(t)&&t.object===o){u=[rL([tL,...u]),tL];const t=e.findAncestor((e=>"AwaitExpression"===e.type||"BlockStatement"===e.type));if(!t||"AwaitExpression"!==t.type)return nL(u)}}return u;case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return ML(e,t,n);case"ExportAllDeclaration":return RL(e,t,n);case"ImportDeclaration":return _L(e,t,n);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return VL(e,t,n);case"ImportAttribute":return [n("key"),": ",n("value")];case"Import":return "import";case"BlockStatement":case"StaticBlock":case"ClassBody":return uj(e,t,n);case"ThrowStatement":return ZL(e,t,n);case"ReturnStatement":return QL(e,t,n);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return ej(e,t,n);case"ObjectExpression":case"ObjectPattern":case"RecordExpression":return UL(e,t,n);case"ObjectProperty":case"Property":return o.method||"get"===o.kind||"set"===o.kind?KL(e,t,n):JL(e,t,n);case"ObjectMethod":return KL(e,t,n);case"Decorator":return ["@",n("expression")];case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return qL(e,t,n);case"SequenceExpression":{const t=e.getParentNode(0);if("ExpressionStatement"===t.type||"ForStatement"===t.type){const t=[];return e.each(((e,r)=>{0===r?t.push(n()):t.push(",",rL([ZI,n()]));}),"expressions"),nL(t)}return nL(QI([",",ZI],e.map(n,"expressions")))}case"ThisExpression":return "this";case"Super":return "super";case"Directive":return [n("value"),i];case"DirectiveLiteral":return pj(o,t);case"UnaryExpression":return u.push(o.operator),/[a-z]$/.test(o.operator)&&u.push(" "),fL(o.argument)?u.push(nL(["(",rL([tL,n("argument")]),tL,")"])):u.push(n("argument")),u;case"UpdateExpression":return u.push(n("argument"),o.operator),o.prefix&&u.reverse(),u;case"ConditionalExpression":return $L(e,t,n);case"VariableDeclaration":{const t=e.map(n,"declarations"),r=e.getParentNode(),s="ForStatement"===r.type||"ForInStatement"===r.type||"ForOfStatement"===r.type,a=o.declarations.some((e=>e.init));let c;return 1!==t.length||fL(o.declarations[0])?t.length>0&&(c=rL(t[0])):c=t[0],u=[o.declare?"declare ":"",o.kind,c?[" ",c]:"",rL(t.slice(1).map((e=>[",",a&&!s?eL:ZI,e])))],s&&r.body!==o||u.push(i),nL(u)}case"WithStatement":return nL(["with (",n("object"),")",LL(o.body,n("body"))]);case"IfStatement":{const r=LL(o.consequent,n("consequent")),i=nL(["if (",nL([rL([tL,n("test")]),tL]),")",r]);if(u.push(i),o.alternate){const r=fL(o.consequent,dL.Trailing|dL.Line)||DL(o),i="BlockStatement"===o.consequent.type&&!r;u.push(i?" ":eL),fL(o,dL.Dangling)&&u.push(YI(e,t,!0),r?eL:" "),u.push("else",nL(LL(o.alternate,n("alternate"),"IfStatement"===o.alternate.type)));}return u}case"ForStatement":{const r=LL(o.body,n("body")),i=YI(e,t,!0),u=i?[i,tL]:"";return o.init||o.test||o.update?[u,nL(["for (",nL([rL([tL,n("init"),";",ZI,n("test"),";",ZI,n("update")]),tL]),")",r])]:[u,nL(["for (;;)",r])]}case"WhileStatement":return nL(["while (",nL([rL([tL,n("test")]),tL]),")",LL(o.body,n("body"))]);case"ForInStatement":return nL(["for (",n("left")," in ",n("right"),")",LL(o.body,n("body"))]);case"ForOfStatement":return nL(["for",o.await?" await":""," (",n("left")," of ",n("right"),")",LL(o.body,n("body"))]);case"DoWhileStatement":{const e=LL(o.body,n("body"));return u=[nL(["do",e])],"BlockStatement"===o.body.type?u.push(" "):u.push(eL),u.push("while (",nL([rL([tL,n("test")]),tL]),")",i),u}case"DoExpression":return [o.async?"async ":"","do ",n("body")];case"BreakStatement":return u.push("break"),o.label&&u.push(" ",n("label")),u.push(i),u;case"ContinueStatement":return u.push("continue"),o.label&&u.push(" ",n("label")),u.push(i),u;case"LabeledStatement":return "EmptyStatement"===o.body.type?[n("label"),":;"]:[n("label"),": ",n("body")];case"TryStatement":return ["try ",n("block"),o.handler?[" ",n("handler")]:"",o.finalizer?[" finally ",n("finalizer")]:""];case"CatchClause":if(o.param){const e=fL(o.param,(e=>!gL(e)||e.leading&&KI(t.originalText,FL(e))||e.trailing&&KI(t.originalText,AL(e),{backwards:!0}))),r=n("param");return ["catch ",e?["(",rL([tL,r]),tL,") "]:["(",r,") "],n("body")]}return ["catch ",n("body")];case"SwitchStatement":return [nL(["switch (",rL([tL,n("discriminant")]),tL,")"])," {",o.cases.length>0?rL([eL,QI(eL,e.map(((e,r,o)=>{const i=e.getValue();return [n(),r!==o.length-1&&yL(i,t)?eL:""]}),"cases"))]):"",eL,"}"];case"SwitchCase":{o.test?u.push("case ",n("test"),":"):u.push("default:");const r=o.consequent.filter((e=>"EmptyStatement"!==e.type));if(r.length>0){const o=oj(e,t,n);u.push(1===r.length&&"BlockStatement"===r[0].type?[" ",o]:rL([eL,o]));}return u}case"DebuggerStatement":return ["debugger",i];case"ClassDeclaration":case"ClassExpression":return zL(e,t,n);case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":return GL(e,t,n);case"ClassProperty":case"PropertyDefinition":case"ClassPrivateProperty":return HL(e,t,n);case"TemplateElement":return oL(o.value.raw);case"TemplateLiteral":return WL(e,n,t);case"TaggedTemplateExpression":return [n("tag"),n("typeParameters"),n("quasi")];case"PrivateIdentifier":return ["#",n("name")];case"PrivateName":return ["#",n("id")];case"InterpreterDirective":return u.push("#!",o.value,eL),yL(o,t)&&u.push(eL),u;case"TopicReference":return "%";case"ArgumentPlaceholder":return "?";case"ModuleExpression":{u.push("module {");const e=n("body");return e&&u.push(rL([eL,e]),eL),u.push("}"),u}default:throw new Error("unknown type: "+JSON.stringify(o.type))}}(e,t,n,r);if(!o)return "";const i=e.getValue(),{type:u}=i;if("ClassMethod"===u||"ClassPrivateMethod"===u||"ClassProperty"===u||"PropertyDefinition"===u||"TSAbstractPropertyDefinition"===u||"ClassPrivateProperty"===u||"MethodDefinition"===u||"TSAbstractMethodDefinition"===u||"TSDeclareMethod"===u)return o;const s=lj(e,t,n);if(s)return nL([...s,o]);if(!cL(e,t))return r&&r.needsSemi?[";",o]:o;const a=[r&&r.needsSemi?";(":"(",o];if(pL(i)){const[e]=i.trailingComments;a.push(" /*",e.value.trimStart(),"*/"),e.printed=!0;}return a.push(")"),a},embed:iL,insertPragma:sL,massageAstNode:uL,hasPrettierIgnore:e=>CL(e)||BL(e),willPrintOwnComments:aL.willPrintOwnComments,canAttachComment:function(e){return e.type&&!gL(e)&&!mL(e)&&"EmptyStatement"!==e.type&&"TemplateElement"!==e.type&&"Import"!==e.type&&"TSEmptyBodyFunctionExpression"!==e.type},printComment:aj,isBlockComment:gL,handleComments:{avoidAstMutation:!0,ownLine:aL.handleOwnLineComment,endOfLine:aL.handleEndOfLineComment,remaining:aL.handleRemainingComment},getCommentChildNodes:aL.getCommentChildNodes};const{builders:{hardline:dj,indent:hj,join:gj}}=Zc,mj=TA;const yj=new Set(["start","end","extra","loc","comments","leadingComments","trailingComments","innerComments","errors","range","tokens"]);function Dj(e,t){const{type:n}=e;if("ObjectProperty"!==n||"Identifier"!==e.key.type){if("UnaryExpression"===n&&"+"===e.operator)return t.argument;if("ArrayExpression"!==n)return "TemplateLiteral"===n?{type:"StringLiteral",value:e.quasis[0].value.cooked}:void 0;for(const[n,r]of e.elements.entries())null===r&&t.elements.splice(n,0,{type:"NullLiteral"});}else t.key={type:"StringLiteral",value:e.key.name};}Dj.ignoredProperties=yj;var Ej={preprocess:mj,print:function(e,t,n){const r=e.getValue();switch(r.type){case"JsonRoot":return [n("node"),dj];case"ArrayExpression":{if(0===r.elements.length)return "[]";const t=e.map((()=>null===e.getValue()?"null":n()),"elements");return ["[",hj([dj,gj([",",dj],t)]),dj,"]"]}case"ObjectExpression":return 0===r.properties.length?"{}":["{",hj([dj,gj([",",dj],e.map(n,"properties"))]),dj,"}"];case"ObjectProperty":return [n("key"),": ",n("value")];case"UnaryExpression":return ["+"===r.operator?"":r.operator,n("argument")];case"NullLiteral":return "null";case"BooleanLiteral":return r.value?"true":"false";case"StringLiteral":case"NumericLiteral":return JSON.stringify(r.value);case"Identifier":{const t=e.getParentNode();return t&&"ObjectProperty"===t.type&&t.key===r?JSON.stringify(r.name):r.name}case"TemplateLiteral":return n(["quasis",0]);case"TemplateElement":return JSON.stringify(r.value.cooked);default:throw new Error("unknown type: "+JSON.stringify(r.type))}},massageAstNode:Dj};const Cj="Common";var bj={bracketSpacing:{since:"0.0.0",category:Cj,type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:Cj,type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:Cj,type:"choice",default:[{since:"1.8.2",value:!0},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]},bracketSameLine:{since:"2.4.0",category:Cj,type:"boolean",default:!1,description:"Put > of opening tags on the last line instead of on a new line."}};const vj="JavaScript";var Aj={name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".jsb",".jscad",".jsfl",".jsm",".jss",".jsx",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],languageId:183},Fj={name:"TypeScript",type:"programming",color:"#2b7489",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",languageId:378},xj={name:"TSX",type:"programming",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:94901924},Sj={name:"JSON",type:"data",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",extensions:[".json",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".arcconfig",".htmlhintrc",".imgbotconfig",".tern-config",".tern-project",".watchmanconfig","Pipfile.lock","composer.lock","mcmod.info"],languageId:174},wj={name:"JSON with Comments",type:"data",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[".babelrc",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","api-extractor.json","devcontainer.json","jsconfig.json","language-configuration.json","tsconfig.json","tslint.json"],languageId:423},Tj={name:"JSON5",type:"data",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",languageId:175};const Bj=bE,Nj=fj,kj=Ej,Pj={arrowParens:{since:"1.9.0",category:vj,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSameLine:bj.bracketSameLine,bracketSpacing:bj.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:vj,type:"boolean",description:"Put > on the last line instead of at a new line.",deprecated:"2.4.0"},semi:{since:"1.0.0",category:vj,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:bj.singleQuote,jsxSingleQuote:{since:"1.15.0",category:vj,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:vj,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:vj,type:"choice",default:[{since:"0.0.0",value:!1},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]}},Oj=[Bj(Aj,(e=>({since:"0.0.0",parsers:["babel","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"],interpreters:[...e.interpreters,"zx"],extensions:[...e.extensions.filter((e=>".jsx"!==e)),".wxs"]}))),Bj(Aj,(()=>({name:"Flow",since:"0.0.0",parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]}))),Bj(Aj,(()=>({name:"JSX",since:"0.0.0",parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"],aliases:void 0,filenames:void 0,extensions:[".jsx"],group:"JavaScript",interpreters:void 0,tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",color:void 0}))),Bj(Fj,(e=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"],extensions:[...e.extensions,".mts",".cts"]}))),Bj(xj,(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]}))),Bj(Sj,(()=>({name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[],filenames:["package.json","package-lock.json","composer.json"]}))),Bj(Sj,(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],extensions:e.extensions.filter((e=>".jsonl"!==e))}))),Bj(wj,(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:[...e.filenames,".eslintrc"]}))),Bj(Tj,(()=>({since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]})))];var Ij={languages:Oj,options:Pj,printers:{estree:Nj,"estree-json":kj},parsers:undefined};const{isFrontMatterNode:Lj}=dc,jj=au,_j=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma"]);function Mj(e,t,n){if(Lj(e)&&"yaml"===e.lang&&delete t.value,"css-comment"===e.type&&"css-root"===n.type&&n.nodes.length>0){if((n.nodes[0]===e||Lj(n.nodes[0])&&n.nodes[1]===e)&&(delete t.text,/^\*\s*@(?:format|prettier)\s*$/.test(e.text)))return null;if("css-root"===n.type&&jj(n.nodes)===e)return null}if("value-root"===e.type&&delete t.text,"media-query"!==e.type&&"media-query-list"!==e.type&&"media-feature-expression"!==e.type||delete t.value,"css-rule"===e.type&&delete t.params,"selector-combinator"===e.type&&(t.value=t.value.replace(/\s+/g," ")),"media-feature"===e.type&&(t.value=t.value.replace(/ /g,"")),("value-word"===e.type&&(e.isColor&&e.isHex||["initial","inherit","unset","revert"].includes(t.value.replace().toLowerCase()))||"media-feature"===e.type||"selector-root-invalid"===e.type||"selector-pseudo"===e.type)&&(t.value=t.value.toLowerCase()),"css-decl"===e.type&&(t.prop=t.prop.toLowerCase()),"css-atrule"!==e.type&&"css-import"!==e.type||(t.name=t.name.toLowerCase()),"value-number"===e.type&&(t.unit=t.unit.toLowerCase()),"media-feature"!==e.type&&"media-keyword"!==e.type&&"media-type"!==e.type&&"media-unknown"!==e.type&&"media-url"!==e.type&&"media-value"!==e.type&&"selector-attribute"!==e.type&&"selector-string"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"value-string"!==e.type||!t.value||(t.value=t.value.replace(/'/g,'"').replace(/\\([^\dA-Fa-f])/g,"$1")),"selector-attribute"===e.type&&(t.attribute=t.attribute.trim(),t.namespace&&"string"==typeof t.namespace&&(t.namespace=t.namespace.trim(),0===t.namespace.length&&(t.namespace=!0)),t.value&&(t.value=t.value.trim().replace(/^["']|["']$/g,""),delete t.quoted)),"media-value"!==e.type&&"media-type"!==e.type&&"value-number"!==e.type&&"selector-root-invalid"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"selector-tag"!==e.type||!t.value||(t.value=t.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g,((e,t,n)=>{const r=Number(t);return Number.isNaN(r)?e:r+n.toLowerCase()}))),"selector-tag"===e.type){const n=e.value.toLowerCase();["from","to"].includes(n)&&(t.value=n);}"css-atrule"===e.type&&"supports"===e.name.toLowerCase()&&delete t.value,"selector-unknown"===e.type&&delete t.value;}Mj.ignoredProperties=_j;var Rj=Mj;const{builders:{hardline:Vj,markAsRoot:$j}}=Zc;var Wj=function(e,t){if("yaml"===e.lang){const n=e.value.trim(),r=n?t(n,{parser:"yaml"},{stripTrailingHardline:!0}):"";return $j([e.startDelimiter,Vj,r,r?Vj:"",e.endDelimiter])}};const{builders:{hardline:qj}}=Zc,Uj=Wj;var zj=function(e,t,n){const r=e.getValue();if("front-matter"===r.type){const e=Uj(r,n);return e?[e,qj]:""}};const Gj=new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>.*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)","s");var Hj=function(e){const t=e.match(Gj);if(!t)return {content:e};const{startDelimiter:n,language:r,value:o="",endDelimiter:i}=t.groups;let u=r.trim()||"yaml";if("+++"===n&&(u="toml"),"yaml"!==u&&n!==i)return {content:e};const[s]=t;return {frontMatter:{type:"front-matter",lang:u,value:o,startDelimiter:n,endDelimiter:i,raw:s.replace(/\n$/,"")},content:s.replace(/[^\n]/g," ")+e.slice(s.length)}};const Jj=iv,Xj=Hj;var Yj={hasPragma:function(e){return Jj.hasPragma(Xj(e).content)},insertPragma:function(e){const{frontMatter:t,content:n}=Xj(e);return (t?t.raw+"\n\n":"")+Jj.insertPragma(n)}};const{isNonEmptyArray:Kj}=dc,Qj=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]),Zj=new Set(["import","use","forward"]);function e_(e,t){const n=Array.isArray(t)?t:[t];let r,o=-1;for(;r=e.getParentNode(++o);)if(n.includes(r.type))return o;return -1}function t_(e,t){const n=e_(e,t);return -1===n?null:e.getParentNode(n)}function n_(e){return "value-operator"===e.type&&"*"===e.value}function r_(e){return "value-operator"===e.type&&"/"===e.value}function o_(e){return "value-operator"===e.type&&"+"===e.value}function i_(e){return "value-operator"===e.type&&"-"===e.value}function u_(e){return "value-operator"===e.type&&"%"===e.value}function s_(e){return "value-comma_group"===e.type&&e.groups&&e.groups[1]&&"value-colon"===e.groups[1].type}function a_(e){return "value-paren_group"===e.type&&e.groups&&e.groups[0]&&s_(e.groups[0])}function c_(e){return e&&"value-colon"===e.type}var l_={getAncestorCounter:e_,getAncestorNode:t_,getPropOfDeclNode:function(e){const t=t_(e,"css-decl");return t&&t.prop&&t.prop.toLowerCase()},hasSCSSInterpolation:function(e){if(Kj(e))for(let t=e.length-1;t>0;t--)if("word"===e[t].type&&"{"===e[t].value&&"word"===e[t-1].type&&e[t-1].value.endsWith("#"))return !0;return !1},hasStringOrFunction:function(e){if(Kj(e))for(let t=0;t<e.length;t++)if("string"===e[t].type||"func"===e[t].type)return !0;return !1},maybeToLowerCase:function(e){return e.includes("$")||e.includes("@")||e.includes("#")||e.startsWith("%")||e.startsWith("--")||e.startsWith(":--")||e.includes("(")&&e.includes(")")?e:e.toLowerCase()},insideValueFunctionNode:function(e,t){const n=t_(e,"value-func");return n&&n.value&&n.value.toLowerCase()===t},insideICSSRuleNode:function(e){const t=t_(e,"css-rule");return t&&t.raws&&t.raws.selector&&(t.raws.selector.startsWith(":import")||t.raws.selector.startsWith(":export"))},insideAtRuleNode:function(e,t){const n=Array.isArray(t)?t:[t],r=t_(e,"css-atrule");return r&&n.includes(r.name.toLowerCase())},insideURLFunctionInImportAtRuleNode:function(e){const t=e.getValue(),n=t_(e,"css-atrule");return n&&"import"===n.name&&"url"===t.groups[0].value&&2===t.groups.length},isKeyframeAtRuleKeywords:function(e,t){const n=t_(e,"css-atrule");return n&&n.name&&n.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(t.toLowerCase())},isWideKeywords:function(e){return ["initial","inherit","unset","revert"].includes(e.toLowerCase())},isSCSS:function(e,t){return "less"===e||"scss"===e?"scss"===e:/(?:\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t)},isSCSSVariable:function(e){return Boolean(e&&"word"===e.type&&e.value.startsWith("$"))},isLastNode:function(e,t){const n=e.getParentNode();if(!n)return !1;const{nodes:r}=n;return r&&r.indexOf(t)===r.length-1},isLessParser:function(e){return "css"===e.parser||"less"===e.parser},isSCSSControlDirectiveNode:function(e){return "css-atrule"===e.type&&["if","else","for","each","while"].includes(e.name)},isDetachedRulesetDeclarationNode:function(e){return !!e.selector&&("string"==typeof e.selector&&/^@.+:.*$/.test(e.selector)||e.selector.value&&/^@.+:.*$/.test(e.selector.value))},isRelationalOperatorNode:function(e){return "value-word"===e.type&&["<",">","<=",">="].includes(e.value)},isEqualityOperatorNode:function(e){return "value-word"===e.type&&["==","!="].includes(e.value)},isMultiplicationNode:n_,isDivisionNode:r_,isAdditionNode:o_,isSubtractionNode:i_,isModuloNode:u_,isMathOperatorNode:function(e){return n_(e)||r_(e)||o_(e)||i_(e)||u_(e)},isEachKeywordNode:function(e){return "value-word"===e.type&&"in"===e.value},isForKeywordNode:function(e){return "value-word"===e.type&&["from","through","end"].includes(e.value)},isURLFunctionNode:function(e){return "value-func"===e.type&&"url"===e.value.toLowerCase()},isIfElseKeywordNode:function(e){return "value-word"===e.type&&["and","or","not"].includes(e.value)},hasComposesNode:function(e){return e.value&&"value-root"===e.value.type&&e.value.group&&"value-value"===e.value.group.type&&"composes"===e.prop.toLowerCase()},hasParensAroundNode:function(e){return e.value&&e.value.group&&e.value.group.group&&"value-paren_group"===e.value.group.group.type&&null!==e.value.group.group.open&&null!==e.value.group.group.close},hasEmptyRawBefore:function(e){return e.raws&&""===e.raws.before},isSCSSNestedPropertyNode:function(e){return !!e.selector&&e.selector.replace(/\/\*.*?\*\//,"").replace(/\/\/.*?\n/,"").trim().endsWith(":")},isDetachedRulesetCallNode:function(e){return e.raws&&e.raws.params&&/^\(\s*\)$/.test(e.raws.params)},isTemplatePlaceholderNode:function(e){return e.name.startsWith("prettier-placeholder")},isTemplatePropNode:function(e){return e.prop.startsWith("@prettier-placeholder")},isPostcssSimpleVarNode:function(e,t){return "$$"===e.value&&"value-func"===e.type&&t&&"value-word"===t.type&&!t.raws.before},isKeyValuePairNode:s_,isKeyValuePairInParenGroupNode:a_,isKeyInValuePairNode:function(e,t){if(!s_(t))return !1;const{groups:n}=t,r=n.indexOf(e);return -1!==r&&c_(n[r+1])},isSCSSMapItemNode:function(e){const t=e.getValue();if(0===t.groups.length)return !1;const n=e.getParentNode(1);if(!(a_(t)||n&&a_(n)))return !1;const r=t_(e,"css-decl");return !!(r&&r.prop&&r.prop.startsWith("$"))||(!!a_(n)||"value-func"===n.type)},isInlineValueCommentNode:function(e){return "value-comment"===e.type&&e.inline},isHashNode:function(e){return "value-word"===e.type&&"#"===e.value},isLeftCurlyBraceNode:function(e){return "value-word"===e.type&&"{"===e.value},isRightCurlyBraceNode:function(e){return "value-word"===e.type&&"}"===e.value},isWordNode:function(e){return ["value-word","value-atword"].includes(e.type)},isColonNode:c_,isMediaAndSupportsKeywords:function(e){return e.value&&["not","and","or"].includes(e.value.toLowerCase())},isColorAdjusterFuncNode:function(e){return "value-func"===e.type&&Qj.has(e.value.toLowerCase())},lastLineHasInlineComment:function(e){return /\/\//.test(e.split(/[\n\r]/).pop())},stringifyNode:function e(t){if(t.groups){return (t.open&&t.open.value?t.open.value:"")+t.groups.reduce(((n,r,o)=>n+e(r)+("comma_group"===t.groups[0].type&&o!==t.groups.length-1?",":"")),"")+(t.close&&t.close.value?t.close.value:"")}const n=t.raws&&t.raws.before?t.raws.before:"",r=t.raws&&t.raws.quote?t.raws.quote:"";return n+r+("atword"===t.type?"@":"")+(t.value?t.value:"")+r+(t.unit?t.unit:"")+(t.group?e(t.group):"")+(t.raws&&t.raws.after?t.raws.after:"")},isAtWordPlaceholderNode:function(e){return e&&"value-atword"===e.type&&e.value.startsWith("prettier-placeholder-")},isModuleRuleName:function(e){return Zj.has(e)},isConfigurationNode:function(e,t){if(!e.open||"("!==e.open.value||!e.close||")"!==e.close.value||e.groups.some((e=>"value-comma_group"!==e.type)))return !1;if("value-comma_group"===t.type){const n=t.groups.indexOf(e)-1,r=t.groups[n];if(r&&"value-word"===r.type&&"with"===r.value)return !0}return !1},isParenGroupNode:function(e){return "value-paren_group"===e.type&&e.open&&"("===e.open.value&&e.close&&")"===e.close.value}};const p_=function(e,t){let n=0;for(let r=0;r<e.line-1;++r)n=t.indexOf("\n",n)+1;return n+e.column},{getLast:f_,skipEverythingButNewLine:d_}=dc;function h_(e,t){return "number"==typeof e.sourceIndex?e.sourceIndex:e.source?p_(e.source.start,t)-1:null}function g_(e,t){if("css-comment"===e.type&&e.inline)return d_(t,e.source.startOffset);const n=e.nodes&&f_(e.nodes);return n&&e.source&&!e.source.end&&(e=n),e.source&&e.source.end?p_(e.source.end,t):null}function m_(e,t,n){e.source&&(e.source.startOffset=h_(e,n)+t,e.source.endOffset=g_(e,n)+t);for(const r in e){const o=e[r];"source"!==r&&o&&"object"==typeof o&&m_(o,t,n);}}function y_(e){let t=e.source.startOffset;return "string"==typeof e.prop&&(t+=e.prop.length),"css-atrule"===e.type&&"string"==typeof e.name&&(t+=1+e.name.length+e.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==e.type&&e.raws&&"string"==typeof e.raws.between&&(t+=e.raws.between.length),t}var D_={locStart:function(e){return e.source.startOffset},locEnd:function(e){return e.source.endOffset},calculateLoc:function e(t,n){t.source&&(t.source.startOffset=h_(t,n),t.source.endOffset=g_(t,n));for(const r in t){const o=t[r];"source"!==r&&o&&"object"==typeof o&&("value-root"===o.type||"value-unknown"===o.type?m_(o,y_(t),o.text||o.value):e(o,n));}},replaceQuotesInInlineComments:function(e){let t,n="initial",r="initial",o=!1;const i=[];for(let u=0;u<e.length;u++){const s=e[u];switch(n){case"initial":if("'"===s){n="single-quotes";continue}if('"'===s){n="double-quotes";continue}if(("u"===s||"U"===s)&&"url("===e.slice(u,u+4).toLowerCase()){n="url",u+=3;continue}if("*"===s&&"/"===e[u-1]){n="comment-block";continue}if("/"===s&&"/"===e[u-1]){n="comment-inline",t=u-1;continue}continue;case"single-quotes":if("'"===s&&"\\"!==e[u-1]&&(n=r,r="initial"),"\n"===s||"\r"===s)return e;continue;case"double-quotes":if('"'===s&&"\\"!==e[u-1]&&(n=r,r="initial"),"\n"===s||"\r"===s)return e;continue;case"url":if(")"===s&&(n="initial"),"\n"===s||"\r"===s)return e;if("'"===s){n="single-quotes",r="url";continue}if('"'===s){n="double-quotes",r="url";continue}continue;case"comment-block":"/"===s&&"*"===e[u-1]&&(n="initial");continue;case"comment-inline":'"'!==s&&"'"!==s&&"*"!==s||(o=!0),"\n"!==s&&"\r"!==s||(o&&i.push([t,u]),n="initial",o=!1);continue}}for(const[t,n]of i)e=e.slice(0,t)+e.slice(t,n).replace(/["'*]/g," ")+e.slice(n);return e}};const E_=au,{printNumber:C_,printString:b_,hasNewline:v_,isFrontMatterNode:A_,isNextLineEmpty:F_,isNonEmptyArray:x_}=dc,{builders:{join:S_,line:w_,hardline:T_,softline:B_,group:N_,fill:k_,indent:P_,dedent:O_,ifBreak:I_,breakParent:L_},utils:{removeLines:j_,getDocParts:__}}=Zc,M_=Rj,R_=zj,{insertPragma:V_}=Yj,{getAncestorNode:$_,getPropOfDeclNode:W_,maybeToLowerCase:q_,insideValueFunctionNode:U_,insideICSSRuleNode:z_,insideAtRuleNode:G_,insideURLFunctionInImportAtRuleNode:H_,isKeyframeAtRuleKeywords:J_,isWideKeywords:X_,isSCSS:Y_,isLastNode:K_,isLessParser:Q_,isSCSSControlDirectiveNode:Z_,isDetachedRulesetDeclarationNode:eM,isRelationalOperatorNode:tM,isEqualityOperatorNode:nM,isMultiplicationNode:rM,isDivisionNode:oM,isAdditionNode:iM,isSubtractionNode:uM,isMathOperatorNode:sM,isEachKeywordNode:aM,isForKeywordNode:cM,isURLFunctionNode:lM,isIfElseKeywordNode:pM,hasComposesNode:fM,hasParensAroundNode:dM,hasEmptyRawBefore:hM,isKeyValuePairNode:gM,isKeyInValuePairNode:mM,isDetachedRulesetCallNode:yM,isTemplatePlaceholderNode:DM,isTemplatePropNode:EM,isPostcssSimpleVarNode:CM,isSCSSMapItemNode:bM,isInlineValueCommentNode:vM,isHashNode:AM,isLeftCurlyBraceNode:FM,isRightCurlyBraceNode:xM,isWordNode:SM,isColonNode:wM,isMediaAndSupportsKeywords:TM,isColorAdjusterFuncNode:BM,lastLineHasInlineComment:NM,isAtWordPlaceholderNode:kM,isConfigurationNode:PM,isParenGroupNode:OM}=l_,{locStart:IM,locEnd:LM}=D_;function jM(e){return "es5"===e.trailingComma||"all"===e.trailingComma}function _M(e,t,n){const r=[];return e.each(((e,o,i)=>{const u=i[o-1];if(u&&"css-comment"===u.type&&"prettier-ignore"===u.text.trim()){const n=e.getValue();r.push(t.originalText.slice(IM(n),LM(n)));}else r.push(n());o!==i.length-1&&("css-comment"===i[o+1].type&&!v_(t.originalText,IM(i[o+1]),{backwards:!0})&&!A_(i[o])||"css-atrule"===i[o+1].type&&"else"===i[o+1].name&&"css-comment"!==i[o].type?r.push(" "):(r.push(t.__isHTMLStyleAttribute?w_:T_),F_(t.originalText,e.getValue(),LM)&&!A_(i[o])&&r.push(T_)));}),"nodes"),r}const MM=/(["'])(?:(?!\1)[^\\]|\\.)*\1/gs,RM=new RegExp(MM.source+"|"+"(".concat(/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source,")?")+"(".concat(/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source,")")+"(".concat(/[A-Za-z]+/g.source,")?"),"g");function VM(e,t){return e.replace(MM,(e=>b_(e,t)))}function $M(e,t){const n=t.singleQuote?"'":'"';return e.includes('"')||e.includes("'")?e:n+e+n}function WM(e){return e.replace(RM,((e,t,n,r,o)=>!n&&r?qM(r)+q_(o||""):e))}function qM(e){return C_(e).replace(/\.0(?=$|e)/,"")}var UM={print:function(e,t,n){const r=e.getValue();if(!r)return "";if("string"==typeof r)return r;switch(r.type){case"front-matter":return [r.raw,T_];case"css-root":{const o=_M(e,t,n),i=r.raws.after.trim();return [o,i?" ".concat(i):"",__(o).length>0?T_:""]}case"css-comment":{const e=r.inline||r.raws.inline,n=t.originalText.slice(IM(r),LM(r));return e?n.trimEnd():n}case"css-rule":return [n("selector"),r.important?" !important":"",r.nodes?[r.selector&&"selector-unknown"===r.selector.type&&NM(r.selector.value)?w_:" ","{",r.nodes.length>0?P_([T_,_M(e,t,n)]):"",T_,"}",eM(r)?";":""]:";"];case"css-decl":{const o=e.getParentNode(),{between:i}=r.raws,u=i.trim(),s=":"===u;let a=fM(r)?j_(n("value")):n("value");return !s&&NM(u)&&(a=P_([T_,O_(a)])),[r.raws.before.replace(/[\s;]/g,""),z_(e)?r.prop:q_(r.prop),u.startsWith("//")?" ":"",u,r.extend?"":" ",Q_(t)&&r.extend&&r.selector?["extend(",n("selector"),")"]:"",a,r.raws.important?r.raws.important.replace(/\s*!\s*important/i," !important"):r.important?" !important":"",r.raws.scssDefault?r.raws.scssDefault.replace(/\s*!default/i," !default"):r.scssDefault?" !default":"",r.raws.scssGlobal?r.raws.scssGlobal.replace(/\s*!global/i," !global"):r.scssGlobal?" !global":"",r.nodes?[" {",P_([B_,_M(e,t,n)]),B_,"}"]:EM(r)&&!o.raws.semicolon&&";"!==t.originalText[LM(r)-1]?"":t.__isHTMLStyleAttribute&&K_(e,r)?I_(";"):";"]}case"css-atrule":{const o=e.getParentNode(),i=DM(r)&&!o.raws.semicolon&&";"!==t.originalText[LM(r)-1];if(Q_(t)){if(r.mixin)return [n("selector"),r.important?" !important":"",i?"":";"];if(r.function)return [r.name,n("params"),i?"":";"];if(r.variable)return ["@",r.name,": ",r.value?n("value"):"",r.raws.between.trim()?r.raws.between.trim()+" ":"",r.nodes?["{",P_([r.nodes.length>0?B_:"",_M(e,t,n)]),B_,"}"]:"",i?"":";"]}return ["@",yM(r)||r.name.endsWith(":")?r.name:q_(r.name),r.params?[yM(r)?"":DM(r)?""===r.raws.afterName?"":r.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(r.raws.afterName)?[T_,T_]:/^\s*\n/.test(r.raws.afterName)?T_:" ":" ",n("params")]:"",r.selector?P_([" ",n("selector")]):"",r.value?N_([" ",n("value"),Z_(r)?dM(r)?" ":w_:""]):"else"===r.name?" ":"",r.nodes?[Z_(r)?"":r.selector&&!r.selector.nodes&&"string"==typeof r.selector.value&&NM(r.selector.value)||!r.selector&&"string"==typeof r.params&&NM(r.params)?w_:" ","{",P_([r.nodes.length>0?B_:"",_M(e,t,n)]),B_,"}"]:i?"":";"]}case"media-query-list":{const t=[];return e.each((e=>{const r=e.getValue();"media-query"===r.type&&""===r.value||t.push(n());}),"nodes"),N_(P_(S_(w_,t)))}case"media-query":return [S_(" ",e.map(n,"nodes")),K_(e,r)?"":","];case"media-type":case"media-value":return WM(VM(r.value,t));case"media-feature-expression":return r.nodes?["(",...e.map(n,"nodes"),")"]:r.value;case"media-feature":return q_(VM(r.value.replace(/ +/g," "),t));case"media-colon":case"value-comma":return [r.value," "];case"media-keyword":case"selector-string":return VM(r.value,t);case"media-url":return VM(r.value.replace(/^url\(\s+/gi,"url(").replace(/\s+\)$/g,")"),t);case"media-unknown":case"selector-comment":case"selector-nesting":case"value-paren":case"value-operator":case"value-unicode-range":case"value-unknown":return r.value;case"selector-root":return N_([G_(e,"custom-selector")?[$_(e,"css-atrule").customSelector,w_]:"",S_([",",G_(e,["extend","custom-selector","nest"])?w_:T_],e.map(n,"nodes"))]);case"selector-selector":return N_(P_(e.map(n,"nodes")));case"selector-tag":{const t=e.getParentNode(),n=t&&t.nodes.indexOf(r),o=n&&t.nodes[n-1];return [r.namespace?[!0===r.namespace?"":r.namespace.trim(),"|"]:"","selector-nesting"===o.type?r.value:WM(J_(e,r.value)?r.value.toLowerCase():r.value)]}case"selector-id":return ["#",r.value];case"selector-class":return [".",WM(VM(r.value,t))];case"selector-attribute":return ["[",r.namespace?[!0===r.namespace?"":r.namespace.trim(),"|"]:"",r.attribute.trim(),r.operator?r.operator:"",r.value?$M(VM(r.value.trim(),t),t):"",r.insensitive?" i":"","]"];case"selector-combinator":if("+"===r.value||">"===r.value||"~"===r.value||">>>"===r.value){const t=e.getParentNode();return ["selector-selector"===t.type&&t.nodes[0]===r?"":w_,r.value,K_(e,r)?"":" "]}return [r.value.trim().startsWith("(")?w_:"",WM(VM(r.value.trim(),t))||w_];case"selector-universal":return [r.namespace?[!0===r.namespace?"":r.namespace.trim(),"|"]:"",r.value];case"selector-pseudo":return [q_(r.value),x_(r.nodes)?["(",S_(", ",e.map(n,"nodes")),")"]:""];case"selector-unknown":{const n=$_(e,"css-rule");if(n&&n.isSCSSNesterProperty)return WM(VM(q_(r.value),t));const o=e.getParentNode();if(o.raws&&o.raws.selector){const e=IM(o),n=e+o.raws.selector.length;return t.originalText.slice(e,n).trim()}const i=e.getParentNode(1);if("value-paren_group"===o.type&&i&&"value-func"===i.type&&"selector"===i.value){const e=IM(o.open)+1,n=LM(o.close)-1,r=t.originalText.slice(e,n).trim();return NM(r)?[L_,r]:r}return r.value}case"value-value":case"value-root":return n("group");case"value-comment":return t.originalText.slice(IM(r),LM(r));case"value-comma_group":{const t=e.getParentNode(),o=e.getParentNode(1),i=W_(e),u=i&&"value-value"===t.type&&("grid"===i||i.startsWith("grid-template")),s=$_(e,"css-atrule"),a=s&&Z_(s),c=r.groups.some((e=>vM(e))),l=e.map(n,"groups"),p=[],f=U_(e,"url");let d=!1,h=!1;for(let n=0;n<r.groups.length;++n){p.push(l[n]);const i=r.groups[n-1],c=r.groups[n],g=r.groups[n+1],m=r.groups[n+2];if(f){(g&&iM(g)||iM(c))&&p.push(" ");continue}if(G_(e,"forward")&&"value-word"===c.type&&c.value&&void 0!==i&&"value-word"===i.type&&"as"===i.value&&"value-operator"===g.type&&"*"===g.value)continue;if(!g)continue;if("value-word"===c.type&&c.value.endsWith("-")&&kM(g))continue;const y="value-string"===c.type&&c.value.startsWith("#{"),D=d&&"value-string"===g.type&&g.value.endsWith("}");if(y||D){d=!d;continue}if(d)continue;if(wM(c)||wM(g))continue;if("value-atword"===c.type&&""===c.value)continue;if("~"===c.value)continue;if(c.value&&c.value.includes("\\")&&g&&"value-comment"!==g.type)continue;if(i&&i.value&&i.value.indexOf("\\")===i.value.length-1&&"value-operator"===c.type&&"/"===c.value)continue;if("\\"===c.value)continue;if(CM(c,g))continue;if(AM(c)||FM(c)||xM(g)||FM(g)&&hM(g)||xM(c)&&hM(g))continue;if("--"===c.value&&AM(g))continue;const E=sM(c),C=sM(g);if((E&&AM(g)||C&&xM(c))&&hM(g))continue;if(!i&&oM(c))continue;if(U_(e,"calc")&&(iM(c)||iM(g)||uM(c)||uM(g))&&hM(g))continue;const b=(iM(c)||uM(c))&&0===n&&("value-number"===g.type||g.isHex)&&o&&BM(o)&&!hM(g),v=m&&"value-func"===m.type||m&&SM(m)||"value-func"===c.type||SM(c),A="value-func"===g.type||SM(g)||i&&"value-func"===i.type||i&&SM(i);if(rM(g)||rM(c)||U_(e,"calc")||b||!(oM(g)&&!v||oM(c)&&!A||iM(g)&&!v||iM(c)&&!A||uM(g)||uM(c))||!(hM(g)||E&&(!i||i&&sM(i))))if(vM(c)){if("value-paren_group"===t.type){p.push(O_(T_));continue}p.push(T_);}else a&&(nM(g)||tM(g)||pM(g)||aM(c)||cM(c))||s&&"namespace"===s.name.toLowerCase()?p.push(" "):u?c.source&&g.source&&c.source.start.line!==g.source.start.line?(p.push(T_),h=!0):p.push(" "):C?p.push(" "):g&&"..."===g.value||kM(c)&&kM(g)&&LM(c)===IM(g)||(kM(c)&&OM(g)&&LM(c)===IM(g.open)?p.push(B_):"with"===c.value&&OM(g)?p.push(" "):p.push(w_));}return c&&p.push(L_),h&&p.unshift(T_),a?N_(P_(p)):H_(e)?N_(k_(p)):N_(P_(k_(p)))}case"value-paren_group":{const o=e.getParentNode();if(o&&lM(o)&&(1===r.groups.length||r.groups.length>0&&"value-comma_group"===r.groups[0].type&&r.groups[0].groups.length>0&&"value-word"===r.groups[0].groups[0].type&&r.groups[0].groups[0].value.startsWith("data:")))return [r.open?n("open"):"",S_(",",e.map(n,"groups")),r.close?n("close"):""];if(!r.open){const t=e.map(n,"groups"),r=[];for(let e=0;e<t.length;e++)0!==e&&r.push([",",w_]),r.push(t[e]);return N_(P_(k_(r)))}const i=bM(e),u=E_(r.groups),s=u&&"value-comment"===u.type,a=mM(r,o),c=PM(r,o),l=c||i&&!a,p=c||a,f=N_([r.open?n("open"):"",P_([B_,S_([",",w_],e.map((e=>{const t=e.getValue(),r=n();if(gM(t)&&"value-comma_group"===t.type&&t.groups&&"value-paren_group"!==t.groups[0].type&&t.groups[2]&&"value-paren_group"===t.groups[2].type){const e=__(r.contents.contents);return e[1]=N_(e[1]),N_(O_(r))}return r}),"groups"))]),I_(!s&&Y_(t.parser,t.originalText)&&i&&jM(t)?",":""),B_,r.close?n("close"):""],{shouldBreak:l});return p?O_(f):f}case"value-func":return [r.value,G_(e,"supports")&&TM(r)?" ":"",n("group")];case"value-number":return [qM(r.value),q_(r.unit)];case"value-word":return r.isColor&&r.isHex||X_(r.value)?r.value.toLowerCase():r.value;case"value-colon":{const t=e.getParentNode(),n=t&&t.groups.indexOf(r),o=n&&t.groups[n-1];return [r.value,o&&"string"==typeof o.value&&"\\"===E_(o.value)||U_(e,"url")?"":w_]}case"value-string":return b_(r.raws.quote+r.value+r.raws.quote,t);case"value-atword":return ["@",r.value];default:throw new Error("Unknown postcss type ".concat(JSON.stringify(r.type)))}},embed:R_,insertPragma:V_,massageAstNode:M_};var zM={name:"PostCSS",type:"markup",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",languageId:262764437},GM={name:"Less",type:"markup",color:"#1d365d",extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",languageId:198},HM={name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],languageId:329};const JM=bE,XM=UM,YM={singleQuote:bj.singleQuote},KM=[JM({name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css"],languageId:50},(e=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"],extensions:[...e.extensions,".wxss"]}))),JM(zM,(()=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]}))),JM(GM,(()=>({since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]}))),JM(HM,(()=>({since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]})))];var QM={languages:KM,options:YM,printers:{postcss:XM},parsers:undefined};var ZM={locStart:function(e){return e.loc.start.offset},locEnd:function(e){return e.loc.end.offset}};function eR(e,t){if("TextNode"===e.type){const n=e.chars.trim();if(!n)return null;t.chars=n.replace(/[\t\n\f\r ]+/g," ");}"AttrNode"===e.type&&"class"===e.name.toLowerCase()&&delete t.value;}eR.ignoredProperties=new Set(["loc","selfClosing"]);var tR=eR;const nR=au;const rR=new Set(["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"]);function oR(e){return iR(e,["TextNode"])&&!/\S/.test(e.chars)}function iR(e,t){return e&&t.includes(e.type)}function uR(e,t){return iR(e.getParentNode(0),t)}function sR(e,t){const n=e.getValue(),r=e.getParentNode(0)||{},o=r.children||r.body||r.parts||[],i=o.indexOf(n);return -1!==i&&o[i+t]}function aR(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return sR(e,-t)}function cR(e){return sR(e,1)}function lR(e){return iR(e,["MustacheCommentStatement"])&&"string"==typeof e.value&&"prettier-ignore"===e.value.trim()}var pR={getNextNode:cR,getPreviousNode:aR,hasPrettierIgnore:function(e){const t=e.getValue(),n=aR(e,2);return lR(t)||lR(n)},isLastNodeOfSiblings:function(e){const t=e.getValue(),n=e.getParentNode(0);return !(!uR(e,["ElementNode"])||nR(n.children)!==t)||!(!uR(e,["Block"])||nR(n.body)!==t)},isNextNodeOfSomeType:function(e,t){return iR(cR(e),t)},isNodeOfSomeType:iR,isParentOfSomeType:uR,isPreviousNodeOfSomeType:function(e,t){return iR(aR(e),t)},isVoid:function(e){return function(e){return iR(e,["ElementNode"])&&"string"==typeof e.tag&&":"!==e.tag[0]&&(function(e){return e.toUpperCase()===e}(e.tag[0])||e.tag.includes("."))}(e)&&e.children.every((e=>oR(e)))||rR.has(e.tag)},isWhitespaceNode:oR};const{builders:{dedent:fR,fill:dR,group:hR,hardline:gR,ifBreak:mR,indent:yR,join:DR,line:ER,softline:CR},utils:{getDocParts:bR,replaceTextEndOfLine:vR}}=Zc,{getPreferredQuote:AR,isNonEmptyArray:FR}=dc,{locStart:xR,locEnd:SR}=ZM,wR=tR,{getNextNode:TR,getPreviousNode:BR,hasPrettierIgnore:NR,isLastNodeOfSiblings:kR,isNextNodeOfSomeType:PR,isNodeOfSomeType:OR,isParentOfSomeType:IR,isPreviousNodeOfSomeType:LR,isVoid:jR,isWhitespaceNode:_R}=pR;function MR(e,t){return xR(e)-xR(t)}function RR(e,t,n){const r=e.getValue().children.every((e=>_R(e)));return "ignore"===t.htmlWhitespaceSensitivity&&r?"":e.map(((e,r)=>{const o=n();return 0===r&&"ignore"===t.htmlWhitespaceSensitivity?[CR,o]:o}),"children")}function VR(e){return jR(e)?mR([CR,"/>"],[" />",CR]):mR([CR,">"],">")}function $R(e){return [!1===e.escaped?"{{{":"{{",e.strip&&e.strip.open?"~":""]}function WR(e){const t=!1===e.escaped?"}}}":"}}";return [e.strip&&e.strip.close?"~":"",t]}function qR(e){return [$R(e),e.closeStrip.open?"~":"","/"]}function UR(e){const t=WR(e);return [e.closeStrip.close?"~":"",t]}function zR(e){return [$R(e),e.inverseStrip.open?"~":""]}function GR(e){const t=WR(e);return [e.inverseStrip.close?"~":"",t]}function HR(e,t){const n=e.getValue(),r=function(e){return [$R(e),e.openStrip.open?"~":"","#"]}(n),o=function(e){const t=WR(e);return [e.openStrip.close?"~":"",t]}(n),i=[sV(e,t)],u=aV(e,t);if(u&&i.push(ER,u),FR(n.program.blockParams)){const e=cV(n.program);i.push(ER,e);}return hR([r,yR(i),CR,o])}function JR(e,t){return ["ignore"===t.htmlWhitespaceSensitivity?gR:"",zR(e),"else",GR(e)]}function XR(e,t){const n=e.getParentNode(1);return [zR(n),"else if ",aV(e,t),GR(n)]}function YR(e,t,n){const r=e.getValue();if("ignore"===n.htmlWhitespaceSensitivity){return [KR(r)?CR:gR,qR(r),t("path"),UR(r)]}return [qR(r),t("path"),UR(r)]}function KR(e){return OR(e,["BlockStatement"])&&e.program.body.every((e=>_R(e)))}function QR(e){return OR(e,["BlockStatement"])&&e.inverse}function ZR(e,t,n){if(KR(e.getValue()))return "";const r=t("program");return "ignore"===n.htmlWhitespaceSensitivity?yR([gR,r]):yR(r)}function eV(e,t,n){const r=e.getValue(),o=t("inverse"),i="ignore"===n.htmlWhitespaceSensitivity?[gR,o]:o;return function(e){return QR(e)&&1===e.inverse.body.length&&OR(e.inverse.body[0],["BlockStatement"])&&"if"===e.inverse.body[0].path.parts[0]}(r)?i:QR(r)?[JR(r,n),yR(i)]:""}function tV(e){return bR(DR(ER,function(e){return e.split(/[\t\n\f\r ]+/)}(e)))}function nV(e){return (e="string"==typeof e?e:"").split("\n").length-1}function rV(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Array.from({length:Math.min(e,2)}).fill(gR)}function oV(e,t){const{quote:n,regex:r}=AR(e,t);return [n,e.replace(r,"\\".concat(n)),n]}function iV(e,t){const n=sV(e,t),r=aV(e,t);return r?yR([n,ER,hR(r)]):n}function uV(e,t){const n=sV(e,t),r=aV(e,t);return r?[yR([n,ER,r]),CR]:n}function sV(e,t){return t("path")}function aV(e,t){const n=e.getValue(),r=[];if(n.params.length>0){const n=e.map(t,"params");r.push(...n);}if(n.hash&&n.hash.pairs.length>0){const e=t("hash");r.push(e);}return 0===r.length?"":DR(ER,r)}function cV(e){return ["as |",e.blockParams.join(" "),"|"]}var lV={print:function(e,t,n){const r=e.getValue();if(!r)return "";if(NR(e))return t.originalText.slice(xR(r),SR(r));const o=t.singleQuote?"'":'"';switch(r.type){case"Block":case"Program":case"Template":return hR(e.map(n,"body"));case"ElementNode":{const o=hR(function(e,t){const n=e.getValue(),r=["attributes","modifiers","comments"].filter((e=>FR(n[e]))),o=r.flatMap((e=>n[e])).sort(MR);for(const n of r)e.each((e=>{const n=o.indexOf(e.getValue());o.splice(n,1,[ER,t()]);}),n);FR(n.blockParams)&&o.push(ER,cV(n));return ["<",n.tag,yR(o),VR(n)]}(e,n)),i="ignore"===t.htmlWhitespaceSensitivity&&PR(e,["ElementNode"])?CR:"";if(jR(r))return [o,i];const u=["</",r.tag,">"];return 0===r.children.length?[o,yR(u),i]:"ignore"===t.htmlWhitespaceSensitivity?[o,yR(RR(e,t,n)),gR,yR(u),i]:[o,yR(hR(RR(e,t,n))),yR(u),i]}case"BlockStatement":{const o=e.getParentNode(1);return o&&o.inverse&&1===o.inverse.body.length&&o.inverse.body[0]===r&&"if"===o.inverse.body[0].path.parts[0]?[XR(e,n),ZR(e,n,t),eV(e,n,t)]:[HR(e,n),hR([ZR(e,n,t),eV(e,n,t),YR(e,n,t)])]}case"ElementModifierStatement":return hR(["{{",uV(e,n),"}}"]);case"MustacheStatement":return hR([$R(r),uV(e,n),WR(r)]);case"SubExpression":return hR(["(",iV(e,n),CR,")"]);case"AttrNode":{const e="TextNode"===r.value.type;if(e&&""===r.value.chars&&xR(r.value)===SR(r.value))return r.name;const t=e?AR(r.value.chars,o).quote:"ConcatStatement"===r.value.type?AR(r.value.parts.filter((e=>"TextNode"===e.type)).map((e=>e.chars)).join(""),o).quote:"",i=n("value");return [r.name,"=",t,"class"===r.name&&t?hR(yR(i)):i,t]}case"ConcatStatement":return e.map(n,"parts");case"Hash":return DR(ER,e.map(n,"pairs"));case"HashPair":return [r.key,"=",n("value")];case"TextNode":{let n=r.chars.replace(/{{/g,"\\{{");const o=function(e){for(let t=0;t<2;t++){const n=e.getParentNode(t);if(n&&"AttrNode"===n.type)return n.name.toLowerCase()}}(e);if(o){if("class"===o){const t=n.trim().split(/\s+/).join(" ");let r=!1,o=!1;return IR(e,["ConcatStatement"])&&(LR(e,["MustacheStatement"])&&/^\s/.test(n)&&(r=!0),PR(e,["MustacheStatement"])&&/\s$/.test(n)&&""!==t&&(o=!0)),[r?ER:"",t,o?ER:""]}return vR(n)}const i=/^[\t\n\f\r ]*$/.test(n),u=!BR(e),s=!TR(e);if("ignore"!==t.htmlWhitespaceSensitivity){const t=/^[\t\n\f\r ]*/,r=/[\t\n\f\r ]*$/,o=s&&IR(e,["Template"]),a=u&&IR(e,["Template"]);if(i){if(a||o)return "";let t=[ER];const r=nV(n);return r&&(t=rV(r)),kR(e)&&(t=t.map((e=>fR(e)))),t}const[c]=n.match(t),[l]=n.match(r);let p=[];if(c){p=[ER];const e=nV(c);e&&(p=rV(e)),n=n.replace(t,"");}let f=[];if(l){if(!o){f=[ER];const t=nV(l);t&&(f=rV(t)),kR(e)&&(f=f.map((e=>fR(e))));}n=n.replace(r,"");}return [...p,dR(tV(n)),...f]}const a=nV(n);let c=function(e){return nV(((e="string"==typeof e?e:"").match(/^([^\S\n\r]*[\n\r])+/g)||[])[0]||"")}(n),l=function(e){return nV(((e="string"==typeof e?e:"").match(/([\n\r][^\S\n\r]*)+$/g)||[])[0]||"")}(n);if((u||s)&&i&&IR(e,["Block","ElementNode","Template"]))return "";i&&a?(c=Math.min(a,2),l=0):(PR(e,["BlockStatement","ElementNode"])&&(l=Math.max(l,1)),LR(e,["BlockStatement","ElementNode"])&&(c=Math.max(c,1)));let p="",f="";return 0===l&&PR(e,["MustacheStatement"])&&(f=" "),0===c&&LR(e,["MustacheStatement"])&&(p=" "),u&&(c=0,p=""),s&&(l=0,f=""),n=n.replace(/^[\t\n\f\r ]+/g,p).replace(/[\t\n\f\r ]+$/,f),[...rV(c),dR(tV(n)),...rV(l)]}case"MustacheCommentStatement":{const e=xR(r),n=SR(r),o="~"===t.originalText.charAt(e+2),i="~"===t.originalText.charAt(n-3),u=r.value.includes("}}")?"--":"";return ["{{",o?"~":"","!",u,r.value,u,i?"~":"","}}"]}case"PathExpression":return r.original;case"BooleanLiteral":case"NumberLiteral":return String(r.value);case"CommentStatement":return ["\x3c!--",r.value,"--\x3e"];case"StringLiteral":if(function(e){let t=0,n=e.getParentNode(t);for(;n&&OR(n,["SubExpression"]);)t++,n=e.getParentNode(t);if(n&&OR(e.getParentNode(t+1),["ConcatStatement"])&&OR(e.getParentNode(t+2),["AttrNode"]))return !0;return !1}(e)){const e=t.singleQuote?'"':"'";return oV(r.value,e)}return oV(r.value,o);case"UndefinedLiteral":return "undefined";case"NullLiteral":return "null";default:throw new Error("unknown glimmer type: "+JSON.stringify(r.type))}},massageAstNode:wR};const pV=lV;var fV={languages:[bE({name:"Handlebars",type:"markup",color:"#f7931e",aliases:["hbs","htmlbars"],extensions:[".handlebars",".hbs"],tmScope:"text.html.handlebars",aceMode:"handlebars",languageId:155},(()=>({since:"2.3.0",parsers:["glimmer"],vscodeLanguageIds:["handlebars"]})))],printers:{glimmer:pV},parsers:undefined};var dV={hasPragma:function(e){return /^\s*#[^\S\n]*@(?:format|prettier)\s*(?:\n|$)/.test(e)},insertPragma:function(e){return "# @format\n\n"+e}};var hV={locStart:function(e){return "number"==typeof e.start?e.start:e.loc&&e.loc.start},locEnd:function(e){return "number"==typeof e.end?e.end:e.loc&&e.loc.end}};const{builders:{join:gV,hardline:mV,line:yV,softline:DV,group:EV,indent:CV,ifBreak:bV}}=Zc,{isNextLineEmpty:vV,isNonEmptyArray:AV}=dc,{insertPragma:FV}=dV,{locStart:xV,locEnd:SV}=hV;function wV(e,t,n){if(0===n.directives.length)return "";const r=gV(yV,e.map(t,"directives"));return "FragmentDefinition"===n.kind||"OperationDefinition"===n.kind?EV([yV,r]):[" ",EV(CV([DV,r]))]}function TV(e,t,n){const r=e.getValue().length;return e.map(((e,o)=>{const i=n();return vV(t.originalText,e.getValue(),SV)&&o<r-1?[i,mV]:i}))}function BV(e,t,n){const r=e.getNode(),o=[],{interfaces:i}=r,u=e.map((e=>n(e)),"interfaces");for(let e=0;e<i.length;e++){const n=i[e];o.push(u[e]);const r=i[e+1];if(r){const e=t.originalText.slice(n.loc.end,r.loc.start),i=e.includes("#"),u=e.replace(/#.*/g,"").trim();o.push(","===u?",":" &",i?yV:" ");}}return o}function NV(){}NV.ignoredProperties=new Set(["loc","comments"]);var kV={print:function(e,t,n){const r=e.getValue();if(!r)return "";if("string"==typeof r)return r;switch(r.kind){case"Document":{const r=[];return e.each(((e,o,i)=>{r.push(n()),o!==i.length-1&&(r.push(mV),vV(t.originalText,e.getValue(),SV)&&r.push(mV));}),"definitions"),[...r,mV]}case"OperationDefinition":{const o="{"!==t.originalText[xV(r)],i=Boolean(r.name);return [o?r.operation:"",o&&i?[" ",n("name")]:"",o&&!i&&AV(r.variableDefinitions)?" ":"",AV(r.variableDefinitions)?EV(["(",CV([DV,gV([bV("",", "),DV],e.map(n,"variableDefinitions"))]),DV,")"]):"",wV(e,n,r),r.selectionSet&&(o||i)?" ":"",n("selectionSet")]}case"FragmentDefinition":return ["fragment ",n("name"),AV(r.variableDefinitions)?EV(["(",CV([DV,gV([bV("",", "),DV],e.map(n,"variableDefinitions"))]),DV,")"]):""," on ",n("typeCondition"),wV(e,n,r)," ",n("selectionSet")];case"SelectionSet":return ["{",CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"selections"))]),mV,"}"];case"Field":return EV([r.alias?[n("alias"),": "]:"",n("name"),r.arguments.length>0?EV(["(",CV([DV,gV([bV("",", "),DV],e.call((e=>TV(e,t,n)),"arguments"))]),DV,")"]):"",wV(e,n,r),r.selectionSet?" ":"",n("selectionSet")]);case"Name":case"IntValue":case"FloatValue":case"EnumValue":return r.value;case"StringValue":return r.block?['"""',mV,gV(mV,r.value.replace(/"""/g,"\\$&").split("\n")),mV,'"""']:['"',r.value.replace(/["\\]/g,"\\$&").replace(/\n/g,"\\n"),'"'];case"BooleanValue":return r.value?"true":"false";case"NullValue":return "null";case"Variable":return ["$",n("name")];case"ListValue":return EV(["[",CV([DV,gV([bV("",", "),DV],e.map(n,"values"))]),DV,"]"]);case"ObjectValue":return EV(["{",t.bracketSpacing&&r.fields.length>0?" ":"",CV([DV,gV([bV("",", "),DV],e.map(n,"fields"))]),DV,bV("",t.bracketSpacing&&r.fields.length>0?" ":""),"}"]);case"ObjectField":case"Argument":return [n("name"),": ",n("value")];case"Directive":return ["@",n("name"),r.arguments.length>0?EV(["(",CV([DV,gV([bV("",", "),DV],e.call((e=>TV(e,t,n)),"arguments"))]),DV,")"]):""];case"NamedType":return n("name");case"VariableDefinition":return [n("variable"),": ",n("type"),r.defaultValue?[" = ",n("defaultValue")]:"",wV(e,n,r)];case"ObjectTypeExtension":case"ObjectTypeDefinition":return [n("description"),r.description?mV:"","ObjectTypeExtension"===r.kind?"extend ":"","type ",n("name"),r.interfaces.length>0?[" implements ",...BV(e,t,n)]:"",wV(e,n,r),r.fields.length>0?[" {",CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"fields"))]),mV,"}"]:""];case"FieldDefinition":return [n("description"),r.description?mV:"",n("name"),r.arguments.length>0?EV(["(",CV([DV,gV([bV("",", "),DV],e.call((e=>TV(e,t,n)),"arguments"))]),DV,")"]):"",": ",n("type"),wV(e,n,r)];case"DirectiveDefinition":return [n("description"),r.description?mV:"","directive ","@",n("name"),r.arguments.length>0?EV(["(",CV([DV,gV([bV("",", "),DV],e.call((e=>TV(e,t,n)),"arguments"))]),DV,")"]):"",r.repeatable?" repeatable":""," on ",gV(" | ",e.map(n,"locations"))];case"EnumTypeExtension":case"EnumTypeDefinition":return [n("description"),r.description?mV:"","EnumTypeExtension"===r.kind?"extend ":"","enum ",n("name"),wV(e,n,r),r.values.length>0?[" {",CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"values"))]),mV,"}"]:""];case"EnumValueDefinition":return [n("description"),r.description?mV:"",n("name"),wV(e,n,r)];case"InputValueDefinition":return [n("description"),r.description?r.description.block?mV:yV:"",n("name"),": ",n("type"),r.defaultValue?[" = ",n("defaultValue")]:"",wV(e,n,r)];case"InputObjectTypeExtension":case"InputObjectTypeDefinition":return [n("description"),r.description?mV:"","InputObjectTypeExtension"===r.kind?"extend ":"","input ",n("name"),wV(e,n,r),r.fields.length>0?[" {",CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"fields"))]),mV,"}"]:""];case"SchemaDefinition":return ["schema",wV(e,n,r)," {",r.operationTypes.length>0?CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"operationTypes"))]):"",mV,"}"];case"OperationTypeDefinition":return [n("operation"),": ",n("type")];case"InterfaceTypeExtension":case"InterfaceTypeDefinition":return [n("description"),r.description?mV:"","InterfaceTypeExtension"===r.kind?"extend ":"","interface ",n("name"),r.interfaces.length>0?[" implements ",...BV(e,t,n)]:"",wV(e,n,r),r.fields.length>0?[" {",CV([mV,gV(mV,e.call((e=>TV(e,t,n)),"fields"))]),mV,"}"]:""];case"FragmentSpread":return ["...",n("name"),wV(e,n,r)];case"InlineFragment":return ["...",r.typeCondition?[" on ",n("typeCondition")]:"",wV(e,n,r)," ",n("selectionSet")];case"UnionTypeExtension":case"UnionTypeDefinition":return EV([n("description"),r.description?mV:"",EV(["UnionTypeExtension"===r.kind?"extend ":"","union ",n("name"),wV(e,n,r),r.types.length>0?[" =",bV(""," "),CV([bV([yV,"  "]),gV([yV,"| "],e.map(n,"types"))])]:""])]);case"ScalarTypeExtension":case"ScalarTypeDefinition":return [n("description"),r.description?mV:"","ScalarTypeExtension"===r.kind?"extend ":"","scalar ",n("name"),wV(e,n,r)];case"NonNullType":return [n("type"),"!"];case"ListType":return ["[",n("type"),"]"];default:throw new Error("unknown graphql type: "+JSON.stringify(r.kind))}},massageAstNode:NV,hasPrettierIgnore:function(e){const t=e.getValue();return t&&Array.isArray(t.comments)&&t.comments.some((e=>"prettier-ignore"===e.value.trim()))},insertPragma:FV,printComment:function(e){const t=e.getValue();if("Comment"===t.kind)return "#"+t.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify(t))},canAttachComment:function(e){return e.kind&&"Comment"!==e.kind}};const PV=kV,OV={bracketSpacing:bj.bracketSpacing};var IV={languages:[bE({name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",languageId:139},(()=>({since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]})))],options:OV,printers:{graphql:PV},parsers:undefined};var LV={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}};const{getLast:jV}=dc,{locStart:_V,locEnd:MV}=LV,{cjkPattern:RV,kPattern:VV,punctuationPattern:$V}={cjkPattern:"(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?",kPattern:"[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]",punctuationPattern:"[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]"},WV=["liquidNode","inlineCode","emphasis","esComment","strong","delete","wikiLink","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"],qV=[...WV,"tableCell","paragraph","heading"],UV=new RegExp(VV),zV=new RegExp($V);function GV(e,t){const[,n,r,o]=t.slice(e.position.start.offset,e.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);return {numberText:n,marker:r,leadingSpaces:o}}var HV={mapAst:function(e,t){return function e(n,r,o){const i=Object.assign({},t(n,r,o));return i.children&&(i.children=i.children.map(((t,n)=>e(t,n,[i,...o])))),i}(e,null,[])},splitText:function(e,t){const n="non-cjk",r="cj-letter",o="cjk-punctuation",i=[],u=("preserve"===t.proseWrap?e:e.replace(new RegExp("(".concat(RV,")\n(").concat(RV,")"),"g"),"$1$2")).split(/([\t\n ]+)/);for(const[e,t]of u.entries()){if(e%2==1){i.push({type:"whitespace",value:/\n/.test(t)?"\n":" "});continue}if((0===e||e===u.length-1)&&""===t)continue;const a=t.split(new RegExp("(".concat(RV,")")));for(const[e,t]of a.entries())(0!==e&&e!==a.length-1||""!==t)&&(e%2!=0?s(zV.test(t)?{type:"word",value:t,kind:o,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:t,kind:UV.test(t)?"k-letter":r,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1}):""!==t&&s({type:"word",value:t,kind:n,hasLeadingPunctuation:zV.test(t[0]),hasTrailingPunctuation:zV.test(jV(t))}));}return i;function s(e){const t=jV(i);var u,s;t&&"word"===t.type&&(t.kind===n&&e.kind===r&&!t.hasTrailingPunctuation||t.kind===r&&e.kind===n&&!e.hasLeadingPunctuation?i.push({type:"whitespace",value:" "}):(u=n,s=o,t.kind===u&&e.kind===s||t.kind===s&&e.kind===u||[t.value,e.value].some((e=>/\u3000/.test(e)))||i.push({type:"whitespace",value:""}))),i.push(e);}},punctuationPattern:$V,getFencedCodeBlockValue:function(e,t){const{value:n}=e;return e.position.end.offset===t.length&&n.endsWith("\n")&&t.endsWith("\n")?n.slice(0,-1):n},getOrderedListItemInfo:GV,hasGitDiffFriendlyOrderedList:function(e,t){if(!e.ordered)return !1;if(e.children.length<2)return !1;const n=Number(GV(e.children[0],t.originalText).numberText),r=Number(GV(e.children[1],t.originalText).numberText);if(0===n&&e.children.length>2){const n=Number(GV(e.children[2],t.originalText).numberText);return 1===r&&1===n}return 1===r},INLINE_NODE_TYPES:WV,INLINE_NODE_WRAPPER_TYPES:qV,isAutolink:function(e){if(!e||"link"!==e.type||1!==e.children.length)return !1;const t=e.children[0];return t&&_V(e)===_V(t)&&MV(e)===MV(t)}};const{inferParserByLanguage:JV,getMaxContinuousCount:XV}=dc,{builders:{hardline:YV,markAsRoot:KV},utils:{replaceEndOfLine:QV}}=Zc,ZV=Wj,{getFencedCodeBlockValue:e$}=HV;var t$=function(e,t,n,r){const o=e.getValue();if("code"===o.type&&null!==o.lang){const e=JV(o.lang,r);if(e){const t=r.__inJsTemplate?"~":"`",i=t.repeat(Math.max(3,XV(o.value,t)+1)),u={parser:e};"tsx"===o.lang&&(u.filepath="dummy.tsx");const s=n(e$(o,r.originalText),u,{stripTrailingHardline:!0});return KV([i,o.lang,o.meta?" "+o.meta:"",YV,QV(s),YV,i])}}switch(o.type){case"front-matter":return ZV(o,n);case"importExport":return [n(o.value,{parser:"babel"},{stripTrailingHardline:!0}),YV];case"jsx":return n("<$>".concat(o.value,"</$>"),{parser:"__js_expression",rootMarker:"mdx"},{stripTrailingHardline:!0})}return null};const n$=Hj,r$=["format","prettier"];function o$(e){const t="@(".concat(r$.join("|"),")"),n=new RegExp(["\x3c!--\\s*".concat(t,"\\s*--\x3e"),"{\\s*\\/\\*\\s*".concat(t,"\\s*\\*\\/\\s*}"),"\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*".concat(t,"[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e")].join("|"),"m"),r=e.match(n);return r&&0===r.index}var i$={startWithPragma:o$,hasPragma:e=>o$(n$(e).content.trimStart()),insertPragma:e=>{const t=n$(e),n="\x3c!-- @".concat(r$[0]," --\x3e");return t.frontMatter?"".concat(t.frontMatter.raw,"\n\n").concat(n,"\n\n").concat(t.content):"".concat(n,"\n\n").concat(t.content)}};const u$=au,{getOrderedListItemInfo:s$,mapAst:a$,splitText:c$}=HV,l$=/^.$/us;function p$(e,t,n){return a$(e,(e=>{if(!e.children)return e;const r=e.children.reduce(((e,r)=>{const o=u$(e);return o&&t(o,r)?e.splice(-1,1,n(o,r)):e.push(r),e}),[]);return Object.assign(Object.assign({},e),{},{children:r})}))}var f$=function(e,t){return e=function(e,t){return a$(e,(e=>"text"===e.type&&"*"!==e.value&&"_"!==e.value&&l$.test(e.value)&&e.position.end.offset-e.position.start.offset!==e.value.length?Object.assign(Object.assign({},e),{},{value:t.originalText.slice(e.position.start.offset,e.position.end.offset)}):e))}(e,t),e=function(e,t){return a$(e,((e,n,r)=>{if("code"===e.type){const n=/^\n?(?: {4,}|\t)/.test(t.originalText.slice(e.position.start.offset,e.position.end.offset));if(e.isIndented=n,n)for(let e=0;e<r.length;e++){const t=r[e];if(t.hasIndentedCodeblock)break;"list"===t.type&&(t.hasIndentedCodeblock=!0);}}return e}))}(e=function(e){return a$(e,(e=>"inlineCode"!==e.type?e:Object.assign(Object.assign({},e),{},{value:e.value.replace(/\s+/g," ")})))}(e=function(e){return p$(e,((e,t)=>"text"===e.type&&"text"===t.type),((e,t)=>({type:"text",value:e.value+t.value,position:{start:e.position.start,end:t.position.end}})))}(e)),t),e=function(e,t){return a$(e,((e,t,n)=>{if("list"===e.type&&e.children.length>0){for(let t=0;t<n.length;t++){const r=n[t];if("list"===r.type&&!r.isAligned)return e.isAligned=!1,e}e.isAligned=r(e);}return e}));function n(e){return 0===e.children.length?-1:e.children[0].position.start.column-1}function r(e){if(!e.ordered)return !0;const[r,o]=e.children;if(s$(r,t.originalText).leadingSpaces.length>1)return !0;const i=n(r);if(-1===i)return !1;if(1===e.children.length)return i%t.tabWidth==0;if(i!==n(o))return !1;if(i%t.tabWidth==0)return !0;return s$(o,t.originalText).leadingSpaces.length>1}}(e,t),e=function(e,t){return a$(e,((e,n,r)=>{let[o]=r;if("text"!==e.type)return e;let{value:i}=e;return "paragraph"===o.type&&(0===n&&(i=i.trimStart()),n===o.children.length-1&&(i=i.trimEnd())),{type:"sentence",position:e.position,children:c$(i,t)}}))}(e,t),e=function(e){return p$(e,((e,t)=>"importExport"===e.type&&"importExport"===t.type),((e,t)=>({type:"importExport",value:e.value+"\n\n"+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e){return a$(e,(e=>"import"!==e.type&&"export"!==e.type?e:Object.assign(Object.assign({},e),{},{type:"importExport"})))}(e))};const{isFrontMatterNode:d$}=dc,{startWithPragma:h$}=i$,g$=new Set(["position","raw"]);function m$(e,t,n){return "front-matter"!==e.type&&"code"!==e.type&&"yaml"!==e.type&&"import"!==e.type&&"export"!==e.type&&"jsx"!==e.type||delete t.value,"list"===e.type&&delete t.isAligned,"list"!==e.type&&"listItem"!==e.type||(delete t.spread,delete t.loose),"text"===e.type?null:("inlineCode"===e.type&&(t.value=e.value.replace(/[\t\n ]+/g," ")),"wikiLink"===e.type&&(t.value=e.value.trim().replace(/[\t\n]+/g," ")),"definition"!==e.type&&"linkReference"!==e.type||(t.label=e.label.trim().replace(/[\t\n ]+/g," ").toLowerCase()),"definition"!==e.type&&"link"!==e.type&&"image"!==e.type||!e.title||(t.title=e.title.replace(/\\(["')])/g,"$1")),n&&"root"===n.type&&n.children.length>0&&(n.children[0]===e||d$(n.children[0])&&n.children[1]===e)&&"html"===e.type&&h$(e.value)?null:void 0)}m$.ignoredProperties=g$;var y$=m$;const{getLast:D$,getMinNotPresentContinuousCount:E$,getMaxContinuousCount:C$,getStringWidth:b$,isNonEmptyArray:v$}=dc,{builders:{breakParent:A$,join:F$,line:x$,literalline:S$,markAsRoot:w$,hardline:T$,softline:B$,ifBreak:N$,fill:k$,align:P$,indent:O$,group:I$,hardlineWithoutBreakParent:L$},utils:{normalizeDoc:j$,replaceTextEndOfLine:_$},printer:{printDocToString:M$}}=Zc,R$=t$,{insertPragma:V$}=i$,{locStart:$$,locEnd:W$}=LV,q$=f$,U$=y$,{getFencedCodeBlockValue:z$,hasGitDiffFriendlyOrderedList:G$,splitText:H$,punctuationPattern:J$,INLINE_NODE_TYPES:X$,INLINE_NODE_WRAPPER_TYPES:Y$,isAutolink:K$}=HV,Q$=new Set(["importExport"]),Z$=["heading","tableCell","link","wikiLink"],eW=new Set(["listItem","definition","footnoteDefinition"]);function tW(e,t,n,r){const o=e.getValue(),i=null===o.checked?"":o.checked?"[x] ":"[ ] ";return [i,sW(e,t,n,{processor:(e,o)=>{if(0===o&&"list"!==e.getValue().type)return P$(" ".repeat(i.length),n());const u=" ".repeat(function(e,t,n){return e<t?t:e>n?n:e}(t.tabWidth-r.length,0,3));return [u,P$(u,n())]}})]}function nW(e,t){return function(e,t,n){let r=-1;for(const o of t.children)if(o.type===e.type&&n(o)?r++:r=-1,o===e)return r}(e,t,(t=>t.ordered===e.ordered))}function rW(e,t){const n=Array.isArray(t)?t:[t];let r,o=-1;for(;r=e.getParentNode(++o);)if(n.includes(r.type))return o;return -1}function oW(e,t){const n=rW(e,t);return -1===n?null:e.getParentNode(n)}function iW(e,t,n){if("preserve"===n.proseWrap&&"\n"===t)return T$;const r="always"===n.proseWrap&&!oW(e,Z$);return ""!==t?r?x$:" ":r?B$:""}function uW(e,t,n){const r=[];let o=null;const{children:i}=e.getValue();for(const[e,t]of i.entries())switch(cW(t)){case"start":null===o&&(o={index:e,offset:t.position.end.offset});break;case"end":null!==o&&(r.push({start:o,end:{index:e,offset:t.position.start.offset}}),o=null);}return sW(e,t,n,{processor:(e,o)=>{if(r.length>0){const e=r[0];if(o===e.start.index)return [i[e.start.index].value,t.originalText.slice(e.start.offset,e.end.offset),i[e.end.index].value];if(e.start.index<o&&o<e.end.index)return !1;if(o===e.end.index)return r.shift(),!1}return n()}})}function sW(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{postprocessor:o}=r,i=r.processor||(()=>n()),u=e.getValue(),s=[];let a;return e.each(((e,n)=>{const r=e.getValue(),o=i(e,n);if(!1!==o){const e={parts:s,prevNode:a,parentNode:u,options:t};lW(r,e)&&(s.push(T$),a&&Q$.has(a.type)||(pW(r,e)||fW(r,e))&&s.push(T$),fW(r,e)&&s.push(T$)),s.push(o),a=r;}}),"children"),o?o(s):s}function aW(e){let t=e;for(;v$(t.children);)t=D$(t.children);return t}function cW(e){let t;if("html"===e.type)t=e.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);else {let n;"esComment"===e.type?n=e:"paragraph"===e.type&&1===e.children.length&&"esComment"===e.children[0].type&&(n=e.children[0]),n&&(t=n.value.match(/^prettier-ignore(?:-(start|end))?$/));}return !!t&&(t[1]?t[1]:"next")}function lW(e,t){const n=0===t.parts.length,r=X$.includes(e.type),o="html"===e.type&&Y$.includes(t.parentNode.type);return !n&&!r&&!o}function pW(e,t){const n=(t.prevNode&&t.prevNode.type)===e.type&&eW.has(e.type),r="listItem"===t.parentNode.type&&!t.parentNode.loose,o=t.prevNode&&"listItem"===t.prevNode.type&&t.prevNode.loose,i="next"===cW(t.prevNode),u="html"===e.type&&t.prevNode&&"html"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line,s="html"===e.type&&"listItem"===t.parentNode.type&&t.prevNode&&"paragraph"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line;return o||!(n||r||i||u||s)}function fW(e,t){const n=t.prevNode&&"list"===t.prevNode.type,r="code"===e.type&&e.isIndented;return n&&r}function dW(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const n=[" ",...Array.isArray(t)?t:[t]];return new RegExp(n.map((e=>"\\".concat(e))).join("|")).test(e)?"<".concat(e,">"):e}function hW(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)return "";if(n)return " "+hW(e,t,!1);if((e=e.replace(/\\(["')])/g,"$1")).includes('"')&&e.includes("'")&&!e.includes(")"))return "(".concat(e,")");const r=e.split("'").length-1,o=e.split('"').length-1,i=r>o?'"':o>r||t.singleQuote?"'":'"';return e=(e=e.replace(/\\/,"\\\\")).replace(new RegExp("(".concat(i,")"),"g"),"\\$1"),"".concat(i).concat(e).concat(i)}var gW={preprocess:q$,print:function(e,t,n){const r=e.getValue();if(function(e){const t=oW(e,["linkReference","imageReference"]);return t&&("linkReference"!==t.type||"full"!==t.referenceType)}(e))return H$(t.originalText.slice(r.position.start.offset,r.position.end.offset),t).map((n=>"word"===n.type?n.value:""===n.value?"":iW(e,n.value,t)));switch(r.type){case"front-matter":return t.originalText.slice(r.position.start.offset,r.position.end.offset);case"root":return 0===r.children.length?"":[j$(uW(e,t,n)),Q$.has(aW(r).type)?"":T$];case"paragraph":return sW(e,t,n,{postprocessor:k$});case"sentence":return sW(e,t,n);case"word":{let t=r.value.replace(/\*/g,"\\$&").replace(new RegExp(["(^|".concat(J$,")(_+)"),"(_+)(".concat(J$,"|$)")].join("|"),"g"),((e,t,n,r,o)=>(n?"".concat(t).concat(n):"".concat(r).concat(o)).replace(/_/g,"\\_")));const n=(e,t,n)=>"sentence"===e.type&&0===n,o=(e,t,n)=>K$(e.children[n-1]);return t!==r.value&&(e.match(void 0,n,o)||e.match(void 0,n,((e,t,n)=>"emphasis"===e.type&&0===n),o))&&(t=t.replace(/^(\\?[*_])+/,(e=>e.replace(/\\/g,"")))),t}case"whitespace":{const n=e.getParentNode(),o=n.children.indexOf(r),i=n.children[o+1],u=i&&/^>|^(?:[*+-]|#{1,6}|\d+[).])$/.test(i.value)?"never":t.proseWrap;return iW(e,r.value,{proseWrap:u})}case"emphasis":{let o;if(K$(r.children[0]))o=t.originalText[r.position.start.offset];else {const t=e.getParentNode(),n=t.children.indexOf(r),i=t.children[n-1],u=t.children[n+1];o=i&&"sentence"===i.type&&i.children.length>0&&"word"===D$(i.children).type&&!D$(i.children).hasTrailingPunctuation||u&&"sentence"===u.type&&u.children.length>0&&"word"===u.children[0].type&&!u.children[0].hasLeadingPunctuation||oW(e,"emphasis")?"*":"_";}return [o,sW(e,t,n),o]}case"strong":return ["**",sW(e,t,n),"**"];case"delete":return ["~~",sW(e,t,n),"~~"];case"inlineCode":{const e=E$(r.value,"`"),t="`".repeat(e||1),n=e&&!/^\s/.test(r.value)?" ":"";return [t,n,r.value,n,t]}case"wikiLink":{let e="";return e="preserve"===t.proseWrap?r.value:r.value.replace(/[\t\n]+/g," "),["[[",e,"]]"]}case"link":switch(t.originalText[r.position.start.offset]){case"<":{const e="mailto:";return ["<",r.url.startsWith(e)&&t.originalText.slice(r.position.start.offset+1,r.position.start.offset+1+e.length)!==e?r.url.slice(e.length):r.url,">"]}case"[":return ["[",sW(e,t,n),"](",dW(r.url,")"),hW(r.title,t),")"];default:return t.originalText.slice(r.position.start.offset,r.position.end.offset)}case"image":return ["![",r.alt||"","](",dW(r.url,")"),hW(r.title,t),")"];case"blockquote":return ["> ",P$("> ",sW(e,t,n))];case"heading":return ["#".repeat(r.depth)+" ",sW(e,t,n)];case"code":{if(r.isIndented){const e=" ".repeat(4);return P$(e,[e,..._$(r.value,T$)])}const e=t.__inJsTemplate?"~":"`",n=e.repeat(Math.max(3,C$(r.value,e)+1));return [n,r.lang||"",r.meta?" "+r.meta:"",T$,..._$(z$(r,t.originalText),T$),T$,n]}case"html":{const t=e.getParentNode(),n="root"===t.type&&D$(t.children)===r?r.value.trimEnd():r.value,o=/^<!--.*-->$/s.test(n);return _$(n,o?T$:w$(S$))}case"list":{const o=nW(r,e.getParentNode()),i=G$(r,t);return sW(e,t,n,{processor:(e,u)=>{const s=function(){const e=r.ordered?(0===u?r.start:i?1:r.start+u)+(o%2==0?". ":") "):o%2==0?"- ":"* ";return r.isAligned||r.hasIndentedCodeblock?function(e,t){const n=r();return e+" ".repeat(n>=4?0:n);function r(){const n=e.length%t.tabWidth;return 0===n?0:t.tabWidth-n}}(e,t):e}(),a=e.getValue();return 2===a.children.length&&"html"===a.children[1].type&&a.children[0].position.start.column!==a.children[1].position.start.column?[s,tW(e,t,n,s)]:[s,P$(" ".repeat(s.length),tW(e,t,n,s))]}})}case"thematicBreak":{const t=rW(e,"list");if(-1===t)return "---";return nW(e.getParentNode(t),e.getParentNode(t+1))%2==0?"***":"---"}case"linkReference":return ["[",sW(e,t,n),"]","full"===r.referenceType?["[",r.identifier,"]"]:"collapsed"===r.referenceType?"[]":""];case"imageReference":return "full"===r.referenceType?["![",r.alt||"","][",r.identifier,"]"]:["![",r.alt,"]","collapsed"===r.referenceType?"[]":""];case"definition":{const e="always"===t.proseWrap?x$:" ";return I$(["[",r.identifier,"]:",O$([e,dW(r.url),null===r.title?"":[e,hW(r.title,t,!1)]])])}case"footnote":return ["[^",sW(e,t,n),"]"];case"footnoteReference":return ["[^",r.identifier,"]"];case"footnoteDefinition":{const o=e.getParentNode().children[e.getName()+1],i=1===r.children.length&&"paragraph"===r.children[0].type&&("never"===t.proseWrap||"preserve"===t.proseWrap&&r.children[0].position.start.line===r.children[0].position.end.line);return ["[^",r.identifier,"]: ",i?sW(e,t,n):I$([P$(" ".repeat(4),sW(e,t,n,{processor:(e,t)=>0===t?I$([B$,n()]):n()})),o&&"footnoteDefinition"===o.type?B$:""])]}case"table":return function(e,t,n){const r=e.getValue(),o=[],i=e.map((e=>e.map(((e,r)=>{const i=M$(n(),t).formatted,u=b$(i);return o[r]=Math.max(o[r]||3,u),{text:i,width:u}}),"children")),"children"),u=a(!1);if("never"!==t.proseWrap)return [A$,u];const s=a(!0);return [A$,I$(N$(s,u))];function a(e){const t=[l(i[0],e),c(e)];return i.length>1&&t.push(F$(L$,i.slice(1).map((t=>l(t,e))))),F$(L$,t)}function c(e){const t=o.map(((t,n)=>{const o=r.align[n],i="center"===o||"left"===o?":":"-",u="center"===o||"right"===o?":":"-",s=e?"-":"-".repeat(t-2);return "".concat(i).concat(s).concat(u)}));return "| ".concat(t.join(" | ")," |")}function l(e,t){const n=e.map(((e,n)=>{let{text:i,width:u}=e;if(t)return i;const s=o[n]-u,a=r.align[n];let c=0;"right"===a?c=s:"center"===a&&(c=Math.floor(s/2));const l=s-c;return "".concat(" ".repeat(c)).concat(i).concat(" ".repeat(l))}));return "| ".concat(n.join(" | ")," |")}}(e,t,n);case"tableCell":return sW(e,t,n);case"break":return /\s/.test(t.originalText[r.position.start.offset])?["  ",w$(S$)]:["\\",T$];case"liquidNode":return _$(r.value,T$);case"importExport":return [r.value,T$];case"esComment":return ["{/* ",r.value," */}"];case"jsx":return r.value;case"math":return ["$$",T$,r.value?[..._$(r.value,T$),T$]:"","$$"];case"inlineMath":return t.originalText.slice($$(r),W$(r));default:throw new Error("Unknown markdown type ".concat(JSON.stringify(r.type)))}},embed:R$,massageAstNode:U$,hasPrettierIgnore:function(e){const t=Number(e.getName());return 0!==t&&"next"===cW(e.getParentNode().children[t-1])},insertPragma:V$};var mW={name:"Markdown",type:"prose",color:"#083fa1",aliases:["pandoc"],aceMode:"markdown",codemirrorMode:"gfm",codemirrorMimeType:"text/x-gfm",wrap:!0,extensions:[".md",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".scd",".workbook"],filenames:["contents.lr"],tmScope:"source.gfm",languageId:222};const yW=bE,DW=gW,EW={proseWrap:bj.proseWrap,singleQuote:bj.singleQuote},CW=[yW(mW,(e=>({since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:[...e.filenames,"README"],extensions:e.extensions.filter((e=>".mdx"!==e))}))),yW(mW,(()=>({name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]})))];var bW={languages:CW,options:EW,printers:{mdast:DW},parsers:undefined};const{isFrontMatterNode:vW}=dc,AW=new Set(["sourceSpan","startSourceSpan","endSourceSpan","nameSpan","valueSpan"]);function FW(e,t){return "text"===e.type||"comment"===e.type||vW(e)||"yaml"===e.type||"toml"===e.type?null:("attribute"===e.type&&delete t.value,void("docType"===e.type&&delete t.value))}FW.ignoredProperties=AW;var xW=FW;const SW=["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"],wW={"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"],abbr:["title"],applet:["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"],area:["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],base:["href","target"],basefont:["color","face","size"],bdo:["dir"],blockquote:["cite"],body:["alink","background","bgcolor","link","text","vlink"],br:["clear"],button:["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"],canvas:["height","width"],caption:["align"],col:["align","char","charoff","span","valign","width"],colgroup:["align","char","charoff","span","valign","width"],data:["value"],del:["cite","datetime"],details:["open"],dfn:["title"],dialog:["open"],dir:["compact"],div:["align"],dl:["compact"],embed:["height","src","type","width"],fieldset:["disabled","form","name"],font:["color","face","size"],form:["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"],frame:["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"],frameset:["cols","rows"],h1:["align"],h2:["align"],h3:["align"],h4:["align"],h5:["align"],h6:["align"],head:["profile"],hr:["align","noshade","size","width"],html:["manifest","version"],iframe:["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","loading","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"],img:["align","alt","border","crossorigin","decoding","height","hspace","ismap","loading","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"],input:["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"],ins:["cite","datetime"],isindex:["prompt"],label:["accesskey","for","form"],legend:["accesskey","align"],li:["type","value"],link:["as","charset","color","crossorigin","disabled","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"],map:["name"],menu:["compact"],meta:["charset","content","http-equiv","name","scheme"],meter:["high","low","max","min","optimum","value"],object:["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"],ol:["compact","reversed","start","type"],optgroup:["disabled","label"],option:["disabled","label","selected","value"],output:["for","form","name"],p:["align"],param:["name","type","value","valuetype"],pre:["width"],progress:["max","value"],q:["cite"],script:["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"],select:["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"],slot:["name"],source:["media","sizes","src","srcset","type"],style:["media","nonce","title","type"],table:["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"],tbody:["align","char","charoff","valign"],td:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],textarea:["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"],tfoot:["align","char","charoff","valign"],th:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],thead:["align","char","charoff","valign"],time:["datetime"],tr:["align","bgcolor","char","charoff","valign"],track:["default","kind","label","src","srclang"],ul:["compact","type"],video:["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"]},{inferParserByLanguage:TW,isFrontMatterNode:BW}=dc,{builders:{line:NW,hardline:kW,join:PW},utils:{getDocParts:OW,replaceTextEndOfLine:IW}}=Zc,{CSS_DISPLAY_TAGS:LW,CSS_DISPLAY_DEFAULT:jW,CSS_WHITE_SPACE_TAGS:_W,CSS_WHITE_SPACE_DEFAULT:MW}={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"},RW=GW(SW),VW=function(e,t){const n=Object.create(null);for(const[r,o]of Object.entries(e))n[r]=t(o,r);return n}(wW,GW),$W=new Set(["\t","\n","\f","\r"," "]),WW=e=>e.replace(/[\t\n\f\r ]+$/,""),qW=e=>(e=>e.replace(/^[\t\f\r ]*?\n/g,""))(WW(e)),UW=e=>e.split(/[\t\n\f\r ]+/),zW=e=>e.match(/^[\t\n\f\r ]*/)[0];function GW(e){const t=Object.create(null);for(const n of e)t[n]=!0;return t}function HW(e){return "element"===e.type&&("script"===e.fullName||"style"===e.fullName||"svg:style"===e.fullName||oq(e)&&("script"===e.name||"style"===e.name))}function JW(e){return iq(e).startsWith("pre")}function XW(e){return "element"===e.type&&e.children.length>0&&(["html","head","ul","ol","select"].includes(e.name)||e.cssDisplay.startsWith("table")&&"table-cell"!==e.cssDisplay)}function YW(e){return eq(e)||"element"===e.type&&"br"===e.fullName||KW(e)}function KW(e){return QW(e)&&ZW(e)}function QW(e){return e.hasLeadingSpaces&&(e.prev?e.prev.sourceSpan.end.line<e.sourceSpan.start.line:"root"===e.parent.type||e.parent.startSourceSpan.end.line<e.sourceSpan.start.line)}function ZW(e){return e.hasTrailingSpaces&&(e.next?e.next.sourceSpan.start.line>e.sourceSpan.end.line:"root"===e.parent.type||e.parent.endSourceSpan&&e.parent.endSourceSpan.start.line>e.sourceSpan.end.line)}function eq(e){switch(e.type){case"ieConditionalComment":case"comment":case"directive":return !0;case"element":return ["script","select"].includes(e.name)}return !1}function tq(e){const{type:t,lang:n}=e.attrMap;return "module"===t||"text/javascript"===t||"text/babel"===t||"application/javascript"===t||"jsx"===n?"babel":"application/x-typescript"===t||"ts"===n||"tsx"===n?"typescript":"text/markdown"===t?"markdown":"text/html"===t?"html":t&&(t.endsWith("json")||t.endsWith("importmap"))?"json":"text/x-handlebars-template"===t?"glimmer":void 0}function nq(e){return "block"===e||"list-item"===e||e.startsWith("table")}function rq(e){return iq(e).startsWith("pre")}function oq(e){return "element"===e.type&&!e.hasExplicitNamespace&&!["html","svg"].includes(e.namespace)}function iq(e){return "element"===e.type&&(!e.namespace||oq(e))&&_W[e.name]||MW}function uq(e){let t=Number.POSITIVE_INFINITY;for(const n of e.split("\n")){if(0===n.length)continue;if(!$W.has(n[0]))return 0;const e=zW(n).length;n.length!==e&&(e<t&&(t=e));}return t===Number.POSITIVE_INFINITY?0:t}function sq(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:uq(e);return 0===t?e:e.split("\n").map((e=>e.slice(t))).join("\n")}const aq=new Set(["template","style","script"]);function cq(e,t){return lq(e,t)&&!aq.has(e.fullName)}function lq(e,t){return "vue"===t.parser&&"element"===e.type&&"root"===e.parent.type&&"html"!==e.fullName.toLowerCase()}function pq(e,t){return lq(e,t)&&(cq(e,t)||e.attrMap.lang&&"html"!==e.attrMap.lang)}var fq={HTML_ELEMENT_ATTRIBUTES:VW,HTML_TAGS:RW,htmlTrim:e=>(e=>e.replace(/^[\t\n\f\r ]+/,""))(WW(e)),htmlTrimPreserveIndentation:qW,hasHtmlWhitespace:e=>/[\t\n\f\r ]/.test(e),getLeadingAndTrailingHtmlWhitespace:e=>{const[,t,n,r]=e.match(/^([\t\n\f\r ]*)(.*?)([\t\n\f\r ]*)$/s);return {leadingWhitespace:t,trailingWhitespace:r,text:n}},canHaveInterpolation:function(e){return e.children&&!HW(e)},countChars:function(e,t){let n=0;for(let r=0;r<e.length;r++)e[r]===t&&n++;return n},countParents:function(e,t){let n=0;for(let r=e.stack.length-1;r>=0;r--){const o=e.stack[r];o&&"object"==typeof o&&!Array.isArray(o)&&t(o)&&n++;}return n},dedentString:sq,forceBreakChildren:XW,forceBreakContent:function(e){return XW(e)||"element"===e.type&&e.children.length>0&&(["body","script","style"].includes(e.name)||e.children.some((e=>function(e){return e.children&&e.children.some((e=>"text"!==e.type))}(e))))||e.firstChild&&e.firstChild===e.lastChild&&"text"!==e.firstChild.type&&QW(e.firstChild)&&(!e.lastChild.isTrailingSpaceSensitive||ZW(e.lastChild))},forceNextEmptyLine:function(e){return BW(e)||e.next&&e.sourceSpan.end&&e.sourceSpan.end.line+1<e.next.sourceSpan.start.line},getLastDescendant:function e(t){return t.lastChild?e(t.lastChild):t},getNodeCssStyleDisplay:function(e,t){if(e.prev&&"comment"===e.prev.type){const t=e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(t)return t[1]}let n=!1;if("element"===e.type&&"svg"===e.namespace){if(!function(e,t){let n=e;for(;n;){if(t(n))return !0;n=n.parent;}return !1}(e,(e=>"svg:foreignObject"===e.fullName)))return "svg"===e.name?"inline-block":"block";n=!0;}switch(t.htmlWhitespaceSensitivity){case"strict":return "inline";case"ignore":return "block";default:return "vue"===t.parser&&e.parent&&"root"===e.parent.type?"block":"element"===e.type&&(!e.namespace||n||oq(e))&&LW[e.name]||jW}},getNodeCssStyleWhiteSpace:iq,hasPrettierIgnore:function(e){return "attribute"!==e.type&&(!!e.parent&&("number"==typeof e.index&&0!==e.index&&function(e){return "comment"===e.type&&"prettier-ignore"===e.value.trim()}(e.parent.children[e.index-1])))},inferScriptParser:function(e,t){return "script"!==e.name||e.attrMap.src?"style"===e.name?function(e){const{lang:t}=e.attrMap;return t&&"postcss"!==t&&"css"!==t?"scss"===t?"scss":"less"===t?"less":void 0:"css"}(e):t&&pq(e,t)?tq(e)||!("src"in e.attrMap)&&TW(e.attrMap.lang,t):void 0:e.attrMap.lang||e.attrMap.type?tq(e):"babel"},isVueCustomBlock:cq,isVueNonHtmlBlock:pq,isVueSlotAttribute:function(e){const t=e.fullName;return "#"===t.charAt(0)||"slot-scope"===t||"v-slot"===t||t.startsWith("v-slot:")},isVueSfcBindingsAttribute:function(e,t){const n=e.parent;if(!lq(n,t))return !1;const r=n.fullName,o=e.fullName;return "script"===r&&"setup"===o||"style"===r&&"vars"===o},isDanglingSpaceSensitiveNode:function(e){return !(t=e.cssDisplay,nq(t)||"inline-block"===t||HW(e));var t;},isIndentationSensitiveNode:JW,isLeadingSpaceSensitiveNode:function(e,t){const n=function(){if(BW(e))return !1;if(("text"===e.type||"interpolation"===e.type)&&e.prev&&("text"===e.prev.type||"interpolation"===e.prev.type))return !0;if(!e.parent||"none"===e.parent.cssDisplay)return !1;if(rq(e.parent))return !0;if(!e.prev&&("root"===e.parent.type||rq(e)&&e.parent||HW(e.parent)||cq(e.parent,t)||(n=e.parent.cssDisplay,nq(n)||"inline-block"===n)))return !1;var n;if(e.prev&&!function(e){return !nq(e)}(e.prev.cssDisplay))return !1;return !0}();return n&&!e.prev&&e.parent&&e.parent.tagDefinition&&e.parent.tagDefinition.ignoreFirstLf?"interpolation"===e.type:n},isPreLikeNode:rq,isScriptLikeTag:HW,isTextLikeNode:function(e){return "text"===e.type||"comment"===e.type},isTrailingSpaceSensitiveNode:function(e,t){return !BW(e)&&(!("text"!==e.type&&"interpolation"!==e.type||!e.next||"text"!==e.next.type&&"interpolation"!==e.next.type)||!(!e.parent||"none"===e.parent.cssDisplay)&&(!!rq(e.parent)||!(!e.next&&("root"===e.parent.type||rq(e)&&e.parent||HW(e.parent)||cq(e.parent,t)||(n=e.parent.cssDisplay,nq(n)||"inline-block"===n)))&&!(e.next&&!function(e){return !nq(e)}(e.next.cssDisplay))));var n;},isWhitespaceSensitiveNode:function(e){return HW(e)||"interpolation"===e.type||JW(e)},isUnknownNamespace:oq,preferHardlineAsLeadingSpaces:function(e){return eq(e)||e.prev&&YW(e.prev)||KW(e)},preferHardlineAsTrailingSpaces:YW,shouldPreserveContent:function(e,t){return !("ieConditionalComment"!==e.type||!e.lastChild||e.lastChild.isSelfClosing||e.lastChild.endSourceSpan)||("ieConditionalComment"===e.type&&!e.complete||(!(!rq(e)||!e.children.some((e=>"text"!==e.type&&"interpolation"!==e.type)))||!(!pq(e,t)||HW(e)||"interpolation"===e.type)))},unescapeQuoteEntities:function(e){return e.replace(/&apos;/g,"'").replace(/&quot;/g,'"')},getTextValueParts:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.value;return e.parent.isWhitespaceSensitive?e.parent.isIndentationSensitive?IW(t):IW(sq(qW(t)),kW):OW(PW(NW,UW(t)))}},dq={},hq={};!function(e){function t(t){return e.$0<=t&&t<=e.$9}
/**
	   * @license
	   * Copyright Google Inc. All Rights Reserved.
	   *
	   * Use of this source code is governed by an MIT-style license that can be
	   * found in the LICENSE file at https://angular.io/license
	   */
Object.defineProperty(e,"__esModule",{value:!0}),e.$EOF=0,e.$BSPACE=8,e.$TAB=9,e.$LF=10,e.$VTAB=11,e.$FF=12,e.$CR=13,e.$SPACE=32,e.$BANG=33,e.$DQ=34,e.$HASH=35,e.$$=36,e.$PERCENT=37,e.$AMPERSAND=38,e.$SQ=39,e.$LPAREN=40,e.$RPAREN=41,e.$STAR=42,e.$PLUS=43,e.$COMMA=44,e.$MINUS=45,e.$PERIOD=46,e.$SLASH=47,e.$COLON=58,e.$SEMICOLON=59,e.$LT=60,e.$EQ=61,e.$GT=62,e.$QUESTION=63,e.$0=48,e.$7=55,e.$9=57,e.$A=65,e.$E=69,e.$F=70,e.$X=88,e.$Z=90,e.$LBRACKET=91,e.$BACKSLASH=92,e.$RBRACKET=93,e.$CARET=94,e.$_=95,e.$a=97,e.$b=98,e.$e=101,e.$f=102,e.$n=110,e.$r=114,e.$t=116,e.$u=117,e.$v=118,e.$x=120,e.$z=122,e.$LBRACE=123,e.$BAR=124,e.$RBRACE=125,e.$NBSP=160,e.$PIPE=124,e.$TILDA=126,e.$AT=64,e.$BT=96,e.isWhitespace=function(t){return t>=e.$TAB&&t<=e.$SPACE||t==e.$NBSP},e.isDigit=t,e.isAsciiLetter=function(t){return t>=e.$a&&t<=e.$z||t>=e.$A&&t<=e.$Z},e.isAsciiHexDigit=function(n){return n>=e.$a&&n<=e.$f||n>=e.$A&&n<=e.$F||t(n)},e.isNewLine=function(t){return t===e.$LF||t===e.$CR},e.isOctalDigit=function(t){return e.$0<=t&&t<=e.$7};}(hq);var gq={},mq={};
/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
Object.defineProperty(mq,"__esModule",{value:!0});class yq{constructor(e,t,n){this.filePath=e,this.name=t,this.members=n;}assertNoMembers(){if(this.members.length)throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this),"."))}}mq.StaticSymbol=yq;mq.StaticSymbolCache=class{constructor(){this.cache=new Map;}get(e,t,n){const r=(n=n||[]).length?".".concat(n.join(".")):"",o='"'.concat(e,'".').concat(t).concat(r);let i=this.cache.get(o);return i||(i=new yq(e,t,n),this.cache.set(o,i)),i}};var Dq={};
/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */Object.defineProperty(Dq,"__esModule",{value:!0});const Eq=/-+([a-z0-9])/g;function Cq(e,t,n){const r=e.indexOf(t);return -1==r?n:[e.slice(0,r).trim(),e.slice(r+1).trim()]}function bq(e,t,n){return Array.isArray(e)?t.visitArray(e,n):function(e){return "object"==typeof e&&null!==e&&Object.getPrototypeOf(e)===Fq}(e)?t.visitStringMap(e,n):null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e?t.visitPrimitive(e,n):t.visitOther(e,n)}Dq.dashCaseToCamelCase=function(e){return e.replace(Eq,(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t[1].toUpperCase()}))},Dq.splitAtColon=function(e,t){return Cq(e,":",t)},Dq.splitAtPeriod=function(e,t){return Cq(e,".",t)},Dq.visitValue=bq,Dq.isDefined=function(e){return null!=e},Dq.noUndefined=function(e){return void 0===e?null:e};Dq.ValueTransformer=class{visitArray(e,t){return e.map((e=>bq(e,this,t)))}visitStringMap(e,t){const n={};return Object.keys(e).forEach((r=>{n[r]=bq(e[r],this,t);})),n}visitPrimitive(e,t){return e}visitOther(e,t){return e}},Dq.SyncAsync={assertSync:e=>{if(xq(e))throw new Error("Illegal state: value cannot be a promise");return e},then:(e,t)=>xq(e)?e.then(t):t(e),all:e=>e.some(xq)?Promise.all(e):e},Dq.error=function(e){throw new Error("Internal Error: ".concat(e))},Dq.syntaxError=function(e,t){const n=Error(e);return n[vq]=!0,t&&(n[Aq]=t),n};const vq="ngSyntaxError",Aq="ngParseErrors";Dq.isSyntaxError=function(e){return e[vq]},Dq.getParseErrors=function(e){return e[Aq]||[]},Dq.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};const Fq=Object.getPrototypeOf({});function xq(e){return !!e&&"function"==typeof e.then}Dq.utf8Encode=function(e){let t="";for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r>=55296&&r<=56319&&e.length>n+1){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(n++,r=(r-55296<<10)+t-56320+65536);}r<=127?t+=String.fromCharCode(r):r<=2047?t+=String.fromCharCode(r>>6&31|192,63&r|128):r<=65535?t+=String.fromCharCode(r>>12|224,r>>6&63|128,63&r|128):r<=2097151&&(t+=String.fromCharCode(r>>18&7|240,r>>12&63|128,r>>6&63|128,63&r|128));}return t},Dq.stringify=function e(t){if("string"==typeof t)return t;if(t instanceof Array)return "["+t.map(e).join(", ")+"]";if(null==t)return ""+t;if(t.overriddenName)return "".concat(t.overriddenName);if(t.name)return "".concat(t.name);if(!t.toString)return "object";const n=t.toString();if(null==n)return ""+n;const r=n.indexOf("\n");return -1===r?n:n.substring(0,r)},Dq.resolveForwardRef=function(e){return "function"==typeof e&&e.hasOwnProperty("__forward_ref__")?e():e},Dq.isPromise=xq;Dq.Version=class{constructor(e){this.full=e;const t=e.split(".");this.major=t[0],this.minor=t[1],this.patch=t.slice(2).join(".");}};const Sq="undefined"!=typeof window&&window,wq="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Tq=void 0!==e&&e||Sq||wq;Dq.global=Tq,function(e){
/**
	   * @license
	   * Copyright Google Inc. All Rights Reserved.
	   *
	   * Use of this source code is governed by an MIT-style license that can be
	   * found in the LICENSE file at https://angular.io/license
	   */
Object.defineProperty(e,"__esModule",{value:!0});const t=mq,n=Dq,r=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function o(e){return e.replace(/\W/g,"_")}e.sanitizeIdentifier=o;let i=0;function u(e){if(!e||!e.reference)return null;const r=e.reference;if(r instanceof t.StaticSymbol)return r.name;if(r.__anonymousType)return r.__anonymousType;let u=n.stringify(r);return u.indexOf("(")>=0?(u="anonymous_".concat(i++),r.__anonymousType=u):u=o(u),u}var s;e.identifierName=u,e.identifierModuleUrl=function(e){const r=e.reference;return r instanceof t.StaticSymbol?r.filePath:"./".concat(n.stringify(r))},e.viewClassName=function(e,t){return "View_".concat(u({reference:e}),"_").concat(t)},e.rendererTypeName=function(e){return "RenderType_".concat(u({reference:e}))},e.hostViewClassName=function(e){return "HostView_".concat(u({reference:e}))},e.componentFactoryName=function(e){return "".concat(u({reference:e}),"NgFactory")},function(e){e[e.Pipe=0]="Pipe",e[e.Directive=1]="Directive",e[e.NgModule=2]="NgModule",e[e.Injectable=3]="Injectable";}(s=e.CompileSummaryKind||(e.CompileSummaryKind={})),e.tokenName=function(e){return null!=e.value?o(e.value):u(e.identifier)},e.tokenReference=function(e){return null!=e.identifier?e.identifier.reference:e.value};e.CompileStylesheetMetadata=class{constructor(){let{moduleUrl:e,styles:t,styleUrls:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.moduleUrl=e||null,this.styles=c(t),this.styleUrls=c(n);}};e.CompileTemplateMetadata=class{constructor(e){let{encapsulation:t,template:n,templateUrl:r,htmlAst:o,styles:i,styleUrls:u,externalStylesheets:s,animations:a,ngContentSelectors:p,interpolation:f,isInline:d,preserveWhitespaces:h}=e;if(this.encapsulation=t,this.template=n,this.templateUrl=r,this.htmlAst=o,this.styles=c(i),this.styleUrls=c(u),this.externalStylesheets=c(s),this.animations=a?l(a):[],this.ngContentSelectors=p||[],f&&2!=f.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=f,this.isInline=d,this.preserveWhitespaces=h;}toSummary(){return {ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};class a{static create(e){let{isHost:t,type:o,isComponent:i,selector:u,exportAs:s,changeDetection:c,inputs:l,outputs:p,host:f,providers:d,viewProviders:h,queries:g,guards:m,viewQueries:y,entryComponents:D,template:E,componentViewType:C,rendererType:b,componentFactory:v}=e;const A={},F={},x={};null!=f&&Object.keys(f).forEach((e=>{const t=f[e],n=e.match(r);null===n?x[e]=t:null!=n[1]?F[n[1]]=t:null!=n[2]&&(A[n[2]]=t);}));const S={};null!=l&&l.forEach((e=>{const t=n.splitAtColon(e,[e,e]);S[t[0]]=t[1];}));const w={};return null!=p&&p.forEach((e=>{const t=n.splitAtColon(e,[e,e]);w[t[0]]=t[1];})),new a({isHost:t,type:o,isComponent:!!i,selector:u,exportAs:s,changeDetection:c,inputs:S,outputs:w,hostListeners:A,hostProperties:F,hostAttributes:x,providers:d,viewProviders:h,queries:g,guards:m,viewQueries:y,entryComponents:D,template:E,componentViewType:C,rendererType:b,componentFactory:v})}constructor(e){let{isHost:t,type:n,isComponent:r,selector:o,exportAs:i,changeDetection:u,inputs:s,outputs:a,hostListeners:l,hostProperties:p,hostAttributes:f,providers:d,viewProviders:h,queries:g,guards:m,viewQueries:y,entryComponents:D,template:E,componentViewType:C,rendererType:b,componentFactory:v}=e;this.isHost=!!t,this.type=n,this.isComponent=r,this.selector=o,this.exportAs=i,this.changeDetection=u,this.inputs=s,this.outputs=a,this.hostListeners=l,this.hostProperties=p,this.hostAttributes=f,this.providers=c(d),this.viewProviders=c(h),this.queries=c(g),this.guards=m,this.viewQueries=c(y),this.entryComponents=c(D),this.template=E,this.componentViewType=C,this.rendererType=b,this.componentFactory=v;}toSummary(){return {summaryKind:s.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}}e.CompileDirectiveMetadata=a;e.CompilePipeMetadata=class{constructor(e){let{type:t,name:n,pure:r}=e;this.type=t,this.name=n,this.pure=!!r;}toSummary(){return {summaryKind:s.Pipe,type:this.type,name:this.name,pure:this.pure}}};e.CompileShallowModuleMetadata=class{};e.CompileNgModuleMetadata=class{constructor(e){let{type:t,providers:n,declaredDirectives:r,exportedDirectives:o,declaredPipes:i,exportedPipes:u,entryComponents:s,bootstrapComponents:a,importedModules:l,exportedModules:p,schemas:f,transitiveModule:d,id:h}=e;this.type=t||null,this.declaredDirectives=c(r),this.exportedDirectives=c(o),this.declaredPipes=c(i),this.exportedPipes=c(u),this.providers=c(n),this.entryComponents=c(s),this.bootstrapComponents=c(a),this.importedModules=c(l),this.exportedModules=c(p),this.schemas=c(f),this.id=h||null,this.transitiveModule=d||null;}toSummary(){const e=this.transitiveModule;return {summaryKind:s.NgModule,type:this.type,entryComponents:e.entryComponents,providers:e.providers,modules:e.modules,exportedDirectives:e.exportedDirectives,exportedPipes:e.exportedPipes}}};function c(e){return e||[]}e.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[];}addProvider(e,t){this.providers.push({provider:e,module:t});}addDirective(e){this.directivesSet.has(e.reference)||(this.directivesSet.add(e.reference),this.directives.push(e));}addExportedDirective(e){this.exportedDirectivesSet.has(e.reference)||(this.exportedDirectivesSet.add(e.reference),this.exportedDirectives.push(e));}addPipe(e){this.pipesSet.has(e.reference)||(this.pipesSet.add(e.reference),this.pipes.push(e));}addExportedPipe(e){this.exportedPipesSet.has(e.reference)||(this.exportedPipesSet.add(e.reference),this.exportedPipes.push(e));}addModule(e){this.modulesSet.has(e.reference)||(this.modulesSet.add(e.reference),this.modules.push(e));}addEntryComponent(e){this.entryComponentsSet.has(e.componentType)||(this.entryComponentsSet.add(e.componentType),this.entryComponents.push(e));}};function l(e){return e.reduce(((e,t)=>{const n=Array.isArray(t)?l(t):t;return e.concat(n)}),[])}function p(e){return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}e.ProviderMeta=class{constructor(e,t){let{useClass:n,useValue:r,useExisting:o,useFactory:i,deps:u,multi:s}=t;this.token=e,this.useClass=n||null,this.useValue=r,this.useExisting=o,this.useFactory=i||null,this.dependencies=u||null,this.multi=!!s;}},e.flatten=l,e.templateSourceUrl=function(e,n,r){let o;return o=r.isInline?n.type.reference instanceof t.StaticSymbol?"".concat(n.type.reference.filePath,".").concat(n.type.reference.name,".html"):"".concat(u(e),"/").concat(u(n.type),".html"):r.templateUrl,n.type.reference instanceof t.StaticSymbol?o:p(o)},e.sharedStylesheetJitUrl=function(e,t){const n=e.moduleUrl.split(/\/\\/g),r=n[n.length-1];return p("css/".concat(t).concat(r,".ngstyle.js"))},e.ngModuleJitUrl=function(e){return p("".concat(u(e.type),"/module.ngfactory.js"))},e.templateJitUrl=function(e,t){return p("".concat(u(e),"/").concat(u(t.type),".ngfactory.js"))};}(gq),function(e){Object.defineProperty(e,"__esModule",{value:!0});
/**
	   * @license
	   * Copyright Google Inc. All Rights Reserved.
	   *
	   * Use of this source code is governed by an MIT-style license that can be
	   * found in the LICENSE file at https://angular.io/license
	   */
const t=hq,n=gq;class r{constructor(e,t,n,r){this.file=e,this.offset=t,this.line=n,this.col=r;}toString(){return null!=this.offset?"".concat(this.file.url,"@").concat(this.line,":").concat(this.col):this.file.url}moveBy(e){const n=this.file.content,o=n.length;let i=this.offset,u=this.line,s=this.col;for(;i>0&&e<0;){i--,e++;if(n.charCodeAt(i)==t.$LF){u--;const e=n.substr(0,i-1).lastIndexOf(String.fromCharCode(t.$LF));s=e>0?i-e:i;}else s--;}for(;i<o&&e>0;){const r=n.charCodeAt(i);i++,e--,r==t.$LF?(u++,s=0):s++;}return new r(this.file,i,u,s)}getContext(e,t){const n=this.file.content;let r=this.offset;if(null!=r){r>n.length-1&&(r=n.length-1);let o=r,i=0,u=0;for(;i<e&&r>0&&(r--,i++,"\n"!=n[r]||++u!=t););for(i=0,u=0;i<e&&o<n.length-1&&(o++,i++,"\n"!=n[o]||++u!=t););return {before:n.substring(r,this.offset),after:n.substring(this.offset,o+1)}}return null}}e.ParseLocation=r;class o{constructor(e,t){this.content=e,this.url=t;}}e.ParseSourceFile=o;class i{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.start=e,this.end=t,this.details=n;}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}}var u;e.ParseSourceSpan=i,e.EMPTY_PARSE_LOCATION=new r(new o("",""),0,0,0),e.EMPTY_SOURCE_SPAN=new i(e.EMPTY_PARSE_LOCATION,e.EMPTY_PARSE_LOCATION),function(e){e[e.WARNING=0]="WARNING",e[e.ERROR=1]="ERROR";}(u=e.ParseErrorLevel||(e.ParseErrorLevel={}));e.ParseError=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.ERROR;this.span=e,this.msg=t,this.level=n;}contextualMessage(){const e=this.span.start.getContext(100,3);return e?"".concat(this.msg,' ("').concat(e.before,"[").concat(u[this.level]," ->]").concat(e.after,'")'):this.msg}toString(){const e=this.span.details?", ".concat(this.span.details):"";return "".concat(this.contextualMessage(),": ").concat(this.span.start).concat(e)}},e.typeSourceSpan=function(e,t){const u=n.identifierModuleUrl(t),s=null!=u?"in ".concat(e," ").concat(n.identifierName(t)," in ").concat(u):"in ".concat(e," ").concat(n.identifierName(t)),a=new o("",s);return new i(new r(a,-1,-1,-1),new r(a,-1,-1,-1))},e.r3JitTypeSourceSpan=function(e,t,n){const u="in ".concat(e," ").concat(t," in ").concat(n),s=new o("",u);return new i(new r(s,-1,-1,-1),new r(s,-1,-1,-1))};}(dq);const{ParseSourceSpan:Bq}=dq,Nq=au,{htmlTrim:kq,getLeadingAndTrailingHtmlWhitespace:Pq,hasHtmlWhitespace:Oq,canHaveInterpolation:Iq,getNodeCssStyleDisplay:Lq,isDanglingSpaceSensitiveNode:jq,isIndentationSensitiveNode:_q,isLeadingSpaceSensitiveNode:Mq,isTrailingSpaceSensitiveNode:Rq,isWhitespaceSensitiveNode:Vq}=fq,$q=[function(e){e.walk((e=>{if("element"===e.type&&e.tagDefinition.ignoreFirstLf&&e.children.length>0&&"text"===e.children[0].type&&"\n"===e.children[0].value[0]){const[t,...n]=e.children;e.setChildren(1===t.value.length?n:[t.clone({value:t.value.slice(1)}),...n]);}}));},function(e){const t=e=>"element"===e.type&&e.prev&&"ieConditionalStartComment"===e.prev.type&&e.prev.sourceSpan.end.offset===e.startSourceSpan.start.offset&&e.firstChild&&"ieConditionalEndComment"===e.firstChild.type&&e.firstChild.sourceSpan.start.offset===e.startSourceSpan.end.offset;e.walk((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const o=e.children[r];if(!n[r+1])if(n[r]){const e=o.prev,n=o.firstChild,r=new Bq(e.sourceSpan.start,n.sourceSpan.end),i=new Bq(r.start,o.sourceSpan.end);t.push(o.clone({condition:e.condition,sourceSpan:i,startSourceSpan:r,children:o.children.slice(1)}));}else t.push(o);}e.setChildren(t);}}}));},function(e){return function(e,t,n){e.walk((e=>{if(e.children){const r=e.children.map(t);if(r.some(Boolean)){const t=[];for(let o=0;o<e.children.length;o++){const i=e.children[o];if("text"!==i.type&&!r[o]){t.push(i);continue}const u="text"===i.type?i:i.clone({type:"text",value:n(i)});if(0===t.length||"text"!==Nq(t).type){t.push(u);continue}const s=t.pop();t.push(s.clone({value:s.value+u.value,sourceSpan:new Bq(s.sourceSpan.start,u.sourceSpan.end)}));}e.setChildren(t);}}}));}(e,(e=>"cdata"===e.type),(e=>"<![CDATA[".concat(e.value,"]]>")))},function(e,t){if("html"===t.parser)return;const n=/{{(.+?)}}/s;e.walk((e=>{if(!Iq(e))return;const t=[];for(const r of e.children){if("text"!==r.type){t.push(r);continue}let e=r.sourceSpan.start,o=null;const i=r.value.split(n);for(let n=0;n<i.length;n++,e=o){const r=i[n];n%2!=0?(o=e.moveBy(r.length+4),t.push({type:"interpolation",sourceSpan:new Bq(e,o),children:0===r.length?[]:[{type:"text",value:r,sourceSpan:new Bq(e.moveBy(2),o.moveBy(-2))}]})):(o=e.moveBy(r.length),r.length>0&&t.push({type:"text",value:r,sourceSpan:new Bq(e,o)}));}}e.setChildren(t);}));},function(e){e.walk((e=>{if(!e.children)return;if(0===e.children.length||1===e.children.length&&"text"===e.children[0].type&&0===kq(e.children[0].value).length)return e.hasDanglingSpaces=e.children.length>0,void(e.children=[]);const t=Vq(e),n=_q(e);e.setChildren(e.children.flatMap((e=>{if("text"!==e.type||t)return e;const n=[],{leadingWhitespace:r,text:o,trailingWhitespace:i}=Pq(e.value);return r&&n.push(Wq),o&&n.push({type:"text",value:o,sourceSpan:new Bq(e.sourceSpan.start.moveBy(r.length),e.sourceSpan.end.moveBy(-i.length))}),i&&n.push(Wq),n})).map(((e,t,n)=>{if(e!==Wq)return Object.assign(Object.assign({},e),{},{hasLeadingSpaces:n[t-1]===Wq,hasTrailingSpaces:n[t+1]===Wq})})).filter(Boolean)),e.isWhitespaceSensitive=t,e.isIndentationSensitive=n;}));},function(e,t){e.walk((e=>Object.assign(e,{cssDisplay:Lq(e,t)})));},function(e){e.walk((e=>Object.assign(e,{isSelfClosing:!e.children||"element"===e.type&&(e.tagDefinition.isVoid||e.startSourceSpan===e.endSourceSpan)})));},function(e,t){e.walk((e=>"element"!==e.type?e:Object.assign(e,{hasHtmComponentClosingTag:e.endSourceSpan&&/^<\s*\/\s*\/\s*>$/.test(t.originalText.slice(e.endSourceSpan.start.offset,e.endSourceSpan.end.offset))})));},function(e,t){e.walk((e=>{e.children&&(0!==e.children.length?e.setChildren(e.children.map((e=>Object.assign(Object.assign({},e),{},{isLeadingSpaceSensitive:Mq(e,t),isTrailingSpaceSensitive:Rq(e,t)}))).map(((e,t,n)=>Object.assign(Object.assign({},e),{},{isLeadingSpaceSensitive:(0===t||n[t-1].isTrailingSpaceSensitive)&&e.isLeadingSpaceSensitive,isTrailingSpaceSensitive:(t===n.length-1||n[t+1].isLeadingSpaceSensitive)&&e.isTrailingSpaceSensitive})))):e.isDanglingSpaceSensitive=jq(e));}));},function(e){const t=e=>"element"===e.type&&0===e.attrs.length&&1===e.children.length&&"text"===e.firstChild.type&&!Oq(e.children[0].value)&&!e.firstChild.hasLeadingSpaces&&!e.firstChild.hasTrailingSpaces&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces&&e.prev&&"text"===e.prev.type&&e.next&&"text"===e.next.type;e.walk((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const o=e.children[r];if(n[r]){const n=t.pop(),i=e.children[++r],{isTrailingSpaceSensitive:u,hasTrailingSpaces:s}=i;t.push(n.clone({value:n.value+"<".concat(o.rawName,">")+o.firstChild.value+"</".concat(o.rawName,">")+i.value,sourceSpan:new Bq(n.sourceSpan.start,i.sourceSpan.end),isTrailingSpaceSensitive:u,hasTrailingSpaces:s}));}else t.push(o);}e.setChildren(t);}}}));}];const Wq={type:"whitespace"};var qq=function(e,t){const n=e.map((e=>e));for(const e of $q)e(n,t);return n};var Uq={hasPragma:function(e){return /^\s*<!--\s*@(?:format|prettier)\s*-->/.test(e)},insertPragma:function(e){return "\x3c!-- @format --\x3e\n\n"+e.replace(/^\s*\n/,"")}};var zq={locStart:function(e){return e.sourceSpan.start.offset},locEnd:function(e){return e.sourceSpan.end.offset}};const Gq=Ty,{isNonEmptyArray:Hq}=dc,{builders:{indent:Jq,join:Xq,line:Yq,softline:Kq},utils:{replaceTextEndOfLine:Qq}}=Zc,{locStart:Zq,locEnd:eU}=zq,{isTextLikeNode:tU,getLastDescendant:nU,isPreLikeNode:rU,hasPrettierIgnore:oU,shouldPreserveContent:iU}=fq;function uU(e,t){return e.lastChild&&gU(e.lastChild)?"":[aU(e,t),lU(e,t)]}function sU(e,t){return (e.next?dU(e.next):hU(e.parent))?"":[pU(e,t),cU(e,t)]}function aU(e,t){return hU(e)?pU(e.lastChild,t):""}function cU(e,t){return gU(e)?lU(e.parent,t):mU(e)?vU(e.next):""}function lU(e,t){if(Gq(!e.isSelfClosing),fU(e,t))return "";switch(e.type){case"ieConditionalComment":return "<!";case"element":if(e.hasHtmComponentClosingTag)return "<//";default:return "</".concat(e.rawName)}}function pU(e,t){if(fU(e,t))return "";switch(e.type){case"ieConditionalComment":case"ieConditionalEndComment":return "[endif]--\x3e";case"ieConditionalStartComment":return "]>\x3c!--\x3e";case"interpolation":return "}}";case"element":if(e.isSelfClosing)return "/>";default:return ">"}}function fU(e,t){return !e.isSelfClosing&&!e.endSourceSpan&&(oU(e)||iU(e.parent,t))}function dU(e){return e.prev&&"docType"!==e.prev.type&&!tU(e.prev)&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function hU(e){return e.lastChild&&e.lastChild.isTrailingSpaceSensitive&&!e.lastChild.hasTrailingSpaces&&!tU(nU(e.lastChild))&&!rU(e)}function gU(e){return !e.next&&!e.hasTrailingSpaces&&e.isTrailingSpaceSensitive&&tU(nU(e))}function mU(e){return e.next&&!tU(e.next)&&tU(e)&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces}function yU(e){return !e.prev&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function DU(e,t,n){const r=e.getValue();if(!Hq(r.attrs))return r.isSelfClosing?" ":"";const o=r.prev&&"comment"===r.prev.type&&function(e){const t=e.trim().match(/^prettier-ignore-attribute(?:\s+(.+))?$/s);return !!t&&(!t[1]||t[1].split(/\s+/))}(r.prev.value),i="boolean"==typeof o?()=>o:Array.isArray(o)?e=>o.includes(e.rawName):()=>!1,u=e.map((e=>{const r=e.getValue();return i(r)?Qq(t.originalText.slice(Zq(r),eU(r))):n()}),"attrs"),s="element"===r.type&&"script"===r.fullName&&1===r.attrs.length&&"src"===r.attrs[0].fullName&&0===r.children.length,a=[Jq([s?" ":Yq,Xq(Yq,u)])];return r.firstChild&&yU(r.firstChild)||r.isSelfClosing&&hU(r.parent)||s?a.push(r.isSelfClosing?" ":""):a.push(t.bracketSameLine?r.isSelfClosing?" ":"":r.isSelfClosing?Yq:Kq),a}function EU(e){return e.firstChild&&yU(e.firstChild)?"":AU(e)}function CU(e,t){return e.prev&&mU(e.prev)?"":[bU(e,t),vU(e)]}function bU(e,t){return yU(e)?AU(e.parent):dU(e)?pU(e.prev,t):""}function vU(e){switch(e.type){case"ieConditionalComment":case"ieConditionalStartComment":return "\x3c!--[if ".concat(e.condition);case"ieConditionalEndComment":return "\x3c!--<!";case"interpolation":return "{{";case"docType":return "<!DOCTYPE";case"element":if(e.condition)return "\x3c!--[if ".concat(e.condition,"]>\x3c!--\x3e<").concat(e.rawName);default:return "<".concat(e.rawName)}}function AU(e){switch(Gq(!e.isSelfClosing),e.type){case"ieConditionalComment":return "]>";case"element":if(e.condition)return ">\x3c!--<![endif]--\x3e";default:return ">"}}var FU={printClosingTag:function(e,t){return [e.isSelfClosing?"":uU(e,t),sU(e,t)]},printClosingTagStart:uU,printClosingTagStartMarker:lU,printClosingTagEndMarker:pU,printClosingTagSuffix:cU,printClosingTagEnd:sU,needsToBorrowLastChildClosingTagEndMarker:hU,needsToBorrowParentClosingTagStartMarker:gU,needsToBorrowPrevClosingTagEndMarker:dU,printOpeningTag:function(e,t,n){const r=e.getValue();return [CU(r,t),DU(e,t,n),r.isSelfClosing?"":EU(r)]},printOpeningTagStart:CU,printOpeningTagPrefix:bU,printOpeningTagStartMarker:vU,printOpeningTagEndMarker:AU,needsToBorrowNextOpeningTagStartMarker:mU,needsToBorrowParentOpeningTagEndMarker:yU},xU={exports:{}};!function(t){var n,r;n=e,r=function(){return function(e,t){var n=t&&t.logger||console;function r(e){return " "===e||"\t"===e||"\n"===e||"\f"===e||"\r"===e}function o(t){var n,r=t.exec(e.substring(y));if(r)return n=r[0],y+=n.length,n}for(var i,u,s,a,c,l=e.length,p=/^[ \t\n\r\u000c]+/,f=/^[, \t\n\r\u000c]+/,d=/^[^ \t\n\r\u000c]+/,h=/[,]+$/,g=/^\d+$/,m=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,y=0,D=[];;){if(o(f),y>=l)return D;i=o(d),u=[],","===i.slice(-1)?(i=i.replace(h,""),C()):E();}function E(){for(o(p),s="",a="in descriptor";;){if(c=e.charAt(y),"in descriptor"===a)if(r(c))s&&(u.push(s),s="",a="after descriptor");else {if(","===c)return y+=1,s&&u.push(s),void C();if("("===c)s+=c,a="in parens";else {if(""===c)return s&&u.push(s),void C();s+=c;}}else if("in parens"===a)if(")"===c)s+=c,a="in descriptor";else {if(""===c)return u.push(s),void C();s+=c;}else if("after descriptor"===a)if(r(c));else {if(""===c)return void C();a="in descriptor",y-=1;}y+=1;}}function C(){var t,r,o,s,a,c,l,p,f,d=!1,h={};for(s=0;s<u.length;s++)c=(a=u[s])[a.length-1],l=a.substring(0,a.length-1),p=parseInt(l,10),f=parseFloat(l),g.test(l)&&"w"===c?((t||r)&&(d=!0),0===p?d=!0:t=p):m.test(l)&&"x"===c?((t||r||o)&&(d=!0),f<0?d=!0:r=f):g.test(l)&&"h"===c?((o||r)&&(d=!0),0===p?d=!0:o=p):d=!0;d?n&&n.error&&n.error("Invalid srcset descriptor found in '"+e+"' at '"+a+"'."):(h.url=i,t&&(h.w=t),r&&(h.d=r),o&&(h.h=o),D.push(h));}}},t.exports?t.exports=r():n.parseSrcset=r();}(xU);const SU=xU.exports,{builders:{ifBreak:wU,join:TU,line:BU}}=Zc;var NU={printImgSrcset:function(e){const t=SU(e,{logger:{error(e){throw new Error(e)}}}),n=t.some((e=>{let{w:t}=e;return t})),r=t.some((e=>{let{h:t}=e;return t}));if(n+r+t.some((e=>{let{d:t}=e;return t}))>1)throw new Error("Mixed descriptor in srcset is not supported");const o=n?"w":r?"h":"d",i=n?"w":r?"h":"x",u=e=>Math.max(...e),s=t.map((e=>e.url)),a=u(s.map((e=>e.length))),c=t.map((e=>e[o])).map((e=>e?e.toString():"")),l=c.map((e=>{const t=e.indexOf(".");return -1===t?e.length:t})),p=u(l);return TU([",",BU],s.map(((e,t)=>{const n=[e],r=c[t];if(r){const o=a-e.length+1,u=p-l[t],s=" ".repeat(o+u);n.push(wU(s," "),r+i);}return n})))},printClassNames:function(e){return e.trim().split(/\s+/).join(" ")}};const{builders:{group:kU}}=Zc;var PU={isVueEventBindingExpression:function(e){const t=e.trim();return /^(?:[\w$]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t)||/^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(t)},printVueFor:function(e,t){const{left:n,operator:r,right:o}=function(e){const t=/(.*?)\s+(in|of)\s+(.*)/s,n=/,([^,\]}]*)(?:,([^,\]}]*))?$/,r=/^\(|\)$/g,o=e.match(t);if(!o)return;const i={};i.for=o[3].trim();const u=o[1].trim().replace(r,""),s=u.match(n);s?(i.alias=u.replace(n,""),i.iterator1=s[1].trim(),s[2]&&(i.iterator2=s[2].trim())):i.alias=u;return {left:"".concat([i.alias,i.iterator1,i.iterator2].filter(Boolean).join(",")),operator:o[2],right:i.for}}(e);return [kU(t("function _(".concat(n,") {}"),{parser:"babel",__isVueForBindingLeft:!0}))," ",r," ",t(o,{parser:"__js_expression"},{stripTrailingHardline:!0})]},printVueBindings:function(e,t){return t("function _(".concat(e,") {}"),{parser:"babel",__isVueBindings:!0})}};const{needsToBorrowParentClosingTagStartMarker:OU,printClosingTagStartMarker:IU,needsToBorrowLastChildClosingTagEndMarker:LU,printClosingTagEndMarker:jU,needsToBorrowParentOpeningTagEndMarker:_U,printOpeningTagEndMarker:MU}=FU;var RU=function(e,t){let n=e.startSourceSpan.end.offset;e.firstChild&&_U(e.firstChild)&&(n-=MU(e).length);let r=e.endSourceSpan.start.offset;return e.lastChild&&OU(e.lastChild)?r+=IU(e,t).length:LU(e)&&(r-=jU(e.lastChild,t).length),t.originalText.slice(n,r)};const{builders:{breakParent:VU,group:$U,hardline:WU,indent:qU,line:UU,fill:zU,softline:GU},utils:{mapDoc:HU,replaceTextEndOfLine:JU}}=Zc,XU=Wj,{printClosingTag:YU,printClosingTagSuffix:KU,needsToBorrowPrevClosingTagEndMarker:QU,printOpeningTagPrefix:ZU,printOpeningTag:ez}=FU,{printImgSrcset:tz,printClassNames:nz}=NU,{printVueFor:rz,printVueBindings:oz,isVueEventBindingExpression:iz}=PU,{isScriptLikeTag:uz,isVueNonHtmlBlock:sz,inferScriptParser:az,htmlTrimPreserveIndentation:cz,dedentString:lz,unescapeQuoteEntities:pz,isVueSlotAttribute:fz,isVueSfcBindingsAttribute:dz,getTextValueParts:hz}=fq,gz=RU;function mz(e,t,n){const r=t=>new RegExp(t.join("|")).test(e.fullName),o=()=>pz(e.value);let i=!1;const u=(e,t)=>{const n="NGRoot"===e.type?"NGMicrosyntax"===e.node.type&&1===e.node.body.length&&"NGMicrosyntaxExpression"===e.node.body[0].type?e.node.body[0].expression:e.node:"JsExpressionRoot"===e.type?e.node:e;!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&("__vue_expression"!==t.parser||"TemplateLiteral"!==n.type&&"StringLiteral"!==n.type)||(i=!0);},s=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return $U([qU([GU,e]),t?GU:""])},a=e=>i?(e=>$U(e))(e):s(e),c=(e,n)=>t(e,Object.assign({__onHtmlBindingRoot:u,__embeddedInHtml:!0},n),{stripTrailingHardline:!0});if("srcset"===e.fullName&&("img"===e.parent.fullName||"source"===e.parent.fullName))return s(tz(o()));if("class"===e.fullName&&!n.parentParser){const e=o();if(!e.includes("{{"))return nz(e)}if("style"===e.fullName&&!n.parentParser){const e=o();if(!e.includes("{{"))return s(c(e,{parser:"css",__isHTMLStyleAttribute:!0}))}if("vue"===n.parser){if("v-for"===e.fullName)return rz(o(),c);if(fz(e)||dz(e,n))return oz(o(),c);const t=["^:","^v-bind:"],i=["^v-"];if(r(["^@","^v-on:"])){const e=o();return a(c(e,{parser:iz(e)?"__js_expression":"__vue_event_binding"}))}if(r(t))return a(c(o(),{parser:"__vue_expression"}));if(r(i))return a(c(o(),{parser:"__js_expression"}))}if("angular"===n.parser){const t=(e,t)=>c(e,Object.assign(Object.assign({},t),{},{trailingComma:"none"})),n=["^\\*"],i=["^\\[.+\\]$","^bind(on)?-","^ng-(if|show|hide|class|style)$"],u=["^i18n(-.+)?$"];if(r(["^\\(.+\\)$","^on-"]))return a(t(o(),{parser:"__ng_action"}));if(r(i))return a(t(o(),{parser:"__ng_binding"}));if(r(u)){const t=o().trim();return s(zU(hz(e,t)),!t.includes("@@"))}if(r(n))return a(t(o(),{parser:"__ng_directive"}));const l=/{{(.+?)}}/s,p=o();if(l.test(p)){const e=[];for(const[n,r]of p.split(l).entries())if(n%2==0)e.push(JU(r));else try{e.push($U(["{{",qU([UU,t(r,{parser:"__ng_interpolation",__isInHtmlInterpolation:!0})]),UU,"}}"]));}catch{e.push("{{",JU(r),"}}");}return $U(e)}}return null}var yz=function(e,t,n,r){const o=e.getValue();switch(o.type){case"element":if(uz(o)||"interpolation"===o.type)return;if(!o.isSelfClosing&&sz(o,r)){const i=az(o,r);if(!i)return;const u=gz(o,r);let s=/^\s*$/.test(u),a="";return s||(a=n(cz(u),{parser:i,__embeddedInHtml:!0},{stripTrailingHardline:!0}),s=""===a),[ZU(o,r),$U(ez(e,r,t)),s?"":WU,a,s?"":WU,YU(o,r),KU(o,r)]}break;case"text":if(uz(o.parent)){const e=az(o.parent);if(e){const t="markdown"===e?lz(o.value.replace(/^[^\S\n]*?\n/,"")):o.value,i={parser:e,__embeddedInHtml:!0};if("html"===r.parser&&"babel"===e){let e="script";const{attrMap:t}=o.parent;t&&("module"===t.type||"text/babel"===t.type&&"module"===t["data-type"])&&(e="module"),i.__babelSourceType=e;}return [VU,ZU(o,r),n(t,i,{stripTrailingHardline:!0}),KU(o,r)]}}else if("interpolation"===o.parent.type){const e={__isInHtmlInterpolation:!0,__embeddedInHtml:!0};return "angular"===r.parser?(e.parser="__ng_interpolation",e.trailingComma="none"):"vue"===r.parser?e.parser="__vue_expression":e.parser="__js_expression",[qU([UU,n(o.value,e,{stripTrailingHardline:!0})]),o.parent.next&&QU(o.parent.next)?" ":UU]}break;case"attribute":{if(!o.value)break;if(/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(r.originalText.slice(o.valueSpan.start.offset,o.valueSpan.end.offset)))return [o.rawName,"=",o.value];if("lwc"===r.parser){if(/^{.*}$/s.test(r.originalText.slice(o.valueSpan.start.offset,o.valueSpan.end.offset)))return [o.rawName,"=",o.value]}const e=mz(o,((e,t)=>n(e,Object.assign({__isInHtmlAttribute:!0,__embeddedInHtml:!0},t),{stripTrailingHardline:!0})),r);if(e)return [o.rawName,'="',$U(HU(e,(e=>"string"==typeof e?e.replace(/"/g,"&quot;"):e))),'"'];break}case"front-matter":return XU(o,n)}};const{builders:{breakParent:Dz,group:Ez,ifBreak:Cz,line:bz,softline:vz,hardline:Az},utils:{replaceTextEndOfLine:Fz}}=Zc,{locStart:xz,locEnd:Sz}=zq,{forceBreakChildren:wz,forceNextEmptyLine:Tz,isTextLikeNode:Bz,hasPrettierIgnore:Nz,preferHardlineAsLeadingSpaces:kz}=fq,{printOpeningTagPrefix:Pz,needsToBorrowNextOpeningTagStartMarker:Oz,printOpeningTagStartMarker:Iz,needsToBorrowPrevClosingTagEndMarker:Lz,printClosingTagEndMarker:jz,printClosingTagSuffix:_z,needsToBorrowParentClosingTagStartMarker:Mz}=FU;function Rz(e,t,n){const r=e.getValue();return Nz(r)?[Pz(r,t),...Fz(t.originalText.slice(xz(r)+(r.prev&&Oz(r.prev)?Iz(r).length:0),Sz(r)-(r.next&&Lz(r.next)?jz(r,t).length:0))),_z(r,t)]:n()}function Vz(e,t){return Bz(e)&&Bz(t)?e.isTrailingSpaceSensitive?e.hasTrailingSpaces?kz(t)?Az:bz:"":kz(t)?Az:vz:Oz(e)&&(Nz(t)||t.firstChild||t.isSelfClosing||"element"===t.type&&t.attrs.length>0)||"element"===e.type&&e.isSelfClosing&&Lz(t)?"":!t.isLeadingSpaceSensitive||kz(t)||Lz(t)&&e.lastChild&&Mz(e.lastChild)&&e.lastChild.lastChild&&Mz(e.lastChild.lastChild)?Az:t.hasLeadingSpaces?bz:vz}var $z={printChildren:function(e,t,n){const r=e.getValue();if(wz(r))return [Dz,...e.map((e=>{const r=e.getValue(),o=r.prev?Vz(r.prev,r):"";return [o?[o,Tz(r.prev)?Az:""]:"",Rz(e,t,n)]}),"children")];const o=r.children.map((()=>Symbol("")));return e.map(((e,r)=>{const i=e.getValue();if(Bz(i)){if(i.prev&&Bz(i.prev)){const r=Vz(i.prev,i);if(r)return Tz(i.prev)?[Az,Az,Rz(e,t,n)]:[r,Rz(e,t,n)]}return Rz(e,t,n)}const u=[],s=[],a=[],c=[],l=i.prev?Vz(i.prev,i):"",p=i.next?Vz(i,i.next):"";return l&&(Tz(i.prev)?u.push(Az,Az):l===Az?u.push(Az):Bz(i.prev)?s.push(l):s.push(Cz("",vz,{groupId:o[r-1]}))),p&&(Tz(i)?Bz(i.next)&&c.push(Az,Az):p===Az?Bz(i.next)&&c.push(Az):a.push(p)),[...u,Ez([...s,Ez([Rz(e,t,n),...a],{id:o[r]})]),...c]}),"children")}};const{builders:{breakParent:Wz,dedentToRoot:qz,group:Uz,ifBreak:zz,indentIfBreak:Gz,indent:Hz,line:Jz,softline:Xz},utils:{replaceTextEndOfLine:Yz}}=Zc,Kz=RU,{shouldPreserveContent:Qz,isScriptLikeTag:Zz,isVueCustomBlock:eG,countParents:tG,forceBreakContent:nG}=fq,{printOpeningTagPrefix:rG,printOpeningTag:oG,printClosingTagSuffix:iG,printClosingTag:uG,needsToBorrowPrevClosingTagEndMarker:sG,needsToBorrowLastChildClosingTagEndMarker:aG}=FU,{printChildren:cG}=$z;var lG={printElement:function(e,t,n){const r=e.getValue();if(Qz(r,t))return [rG(r,t),Uz(oG(e,t,n)),...Yz(Kz(r,t)),...uG(r,t),iG(r,t)];const o=1===r.children.length&&"interpolation"===r.firstChild.type&&r.firstChild.isLeadingSpaceSensitive&&!r.firstChild.hasLeadingSpaces&&r.lastChild.isTrailingSpaceSensitive&&!r.lastChild.hasTrailingSpaces,i=Symbol("element-attr-group-id"),u=o=>Uz([Uz(oG(e,t,n),{id:i}),o,uG(r,t)]);return 0===r.children.length?u(r.hasDanglingSpaces&&r.isDanglingSpaceSensitive?Jz:""):u([nG(r)?Wz:"",(s=[o?zz(Xz,"",{groupId:i}):r.firstChild.hasLeadingSpaces&&r.firstChild.isLeadingSpaceSensitive?Jz:"text"===r.firstChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive?qz(Xz):Xz,cG(e,t,n)],o?Gz(s,{groupId:i}):!Zz(r)&&!eG(r,t)||"root"!==r.parent.type||"vue"!==t.parser||t.vueIndentScriptAndStyle?Hz(s):s),(r.next?sG(r.next):aG(r.parent))?r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?" ":"":o?zz(Xz,"",{groupId:i}):r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?Jz:("comment"===r.lastChild.type||"text"===r.lastChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive)&&new RegExp("\\n[\\t ]{".concat(t.tabWidth*tG(e,(e=>e.parent&&"root"!==e.parent.type)),"}$")).test(r.lastChild.value)?"":Xz]);var s;}};const{builders:{fill:pG,group:fG,hardline:dG,literalline:hG},utils:{cleanDoc:gG,getDocParts:mG,isConcat:yG,replaceTextEndOfLine:DG}}=Zc,EG=xW,{countChars:CG,unescapeQuoteEntities:bG,getTextValueParts:vG}=fq,AG=qq,{insertPragma:FG}=Uq,{locStart:xG,locEnd:SG}=zq,wG=yz,{printClosingTagSuffix:TG,printClosingTagEnd:BG,printOpeningTagPrefix:NG,printOpeningTagStart:kG}=FU,{printElement:PG}=lG,{printChildren:OG}=$z;var IG={preprocess:AG,print:function(e,t,n){const r=e.getValue();switch(r.type){case"front-matter":return DG(r.raw);case"root":return t.__onHtmlRoot&&t.__onHtmlRoot(r),[fG(OG(e,t,n)),dG];case"element":case"ieConditionalComment":return PG(e,t,n);case"ieConditionalStartComment":case"ieConditionalEndComment":return [kG(r),BG(r)];case"interpolation":return [kG(r,t),...e.map(n,"children"),BG(r,t)];case"text":{if("interpolation"===r.parent.type){const e=/\n[^\S\n]*?$/,t=e.test(r.value),n=t?r.value.replace(e,""):r.value;return [...DG(n),t?dG:""]}const e=gG([NG(r,t),...vG(r),TG(r,t)]);return yG(e)||"fill"===e.type?pG(mG(e)):e}case"docType":return [fG([kG(r,t)," ",r.value.replace(/^html\b/i,"html").replace(/\s+/g," ")]),BG(r,t)];case"comment":return [NG(r,t),...DG(t.originalText.slice(xG(r),SG(r)),hG),TG(r,t)];case"attribute":{if(null===r.value)return r.rawName;const e=bG(r.value),t=CG(e,"'")<CG(e,'"')?"'":'"';return [r.rawName,"=",t,...DG('"'===t?e.replace(/"/g,"&quot;"):e.replace(/'/g,"&apos;")),t]}default:throw new Error("Unexpected node type ".concat(r.type))}},insertPragma:FG,massageAstNode:EG,embed:wG};const LG="HTML";var jG={name:"HTML",type:"markup",tmScope:"text.html.basic",aceMode:"html",codemirrorMode:"htmlmixed",codemirrorMimeType:"text/html",color:"#e34c26",aliases:["xhtml"],extensions:[".html",".htm",".html.hl",".inc",".xht",".xhtml"],languageId:146},_G={name:"Vue",type:"markup",color:"#41b883",extensions:[".vue"],tmScope:"text.html.vue",aceMode:"html",languageId:391};const MG=bE,RG=IG,VG={bracketSameLine:bj.bracketSameLine,htmlWhitespaceSensitivity:{since:"1.15.0",category:LG,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},vueIndentScriptAndStyle:{since:"1.19.0",category:LG,type:"boolean",default:!1,description:"Indent script and style tags in Vue files."}},$G=[MG(jG,(()=>({name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]}))),MG(jG,(e=>({since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:[...e.extensions,".mjml"]}))),MG(jG,(()=>({name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]}))),MG(_G,(()=>({since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]})))];var WG={languages:$G,printers:{html:RG},options:VG,parsers:undefined};var qG={isPragma:function(e){return /^\s*@(?:prettier|format)\s*$/.test(e)},hasPragma:function(e){return /^\s*#[^\S\n]*@(?:prettier|format)\s*?(?:\n|$)/.test(e)},insertPragma:function(e){return "# @format\n\n".concat(e)}};var UG={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}};var zG=function(e,t,n,r){if("root"===e.getValue().type&&r.filepath&&/(?:[/\\]|^)\.(?:prettier|stylelint)rc$/.test(r.filepath))return n(r.originalText,Object.assign(Object.assign({},r),{},{parser:"json"}))};const{getLast:GG,isNonEmptyArray:HG}=dc;function JG(e,t){return e&&"string"==typeof e.type&&(!t||t.includes(e.type))}function XG(e){return "prettier-ignore"===e.value.trim()}function YG(e){return e&&HG(e.leadingComments)}function KG(e){return e&&HG(e.middleComments)}function QG(e){return e&&e.indicatorComment}function ZG(e){return e&&e.trailingComment}function eH(e){return e&&HG(e.endComments)}function tH(e){const t=[];let n;for(const r of e.split(/( +)/))" "!==r?" "===n?t.push(r):t.push((t.pop()||"")+r):void 0===n&&t.unshift(""),n=r;return " "===n&&t.push((t.pop()||"")+" "),""===t[0]&&(t.shift(),t.unshift(" "+(t.shift()||""))),t}var nH={getLast:GG,getAncestorCount:function(e,t){let n=0;const r=e.stack.length-1;for(let o=0;o<r;o++){const r=e.stack[o];JG(r)&&t(r)&&n++;}return n},isNode:JG,isEmptyNode:function(e){return !HG(e.children)&&!function(e){return YG(e)||KG(e)||QG(e)||ZG(e)||eH(e)}(e)},isInlineNode:function(e){if(!e)return !0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return !0;default:return !1}},mapNode:function e(t,n,r){return n("children"in t?Object.assign(Object.assign({},t),{},{children:t.children.map((r=>e(r,n,t)))}):t,r)},defineShortcut:function(e,t,n){Object.defineProperty(e,t,{get:n,enumerable:!1});},isNextLineEmpty:function(e,t){let n=0;const r=t.length;for(let o=e.position.end.offset-1;o<r;o++){const e=t[o];if("\n"===e&&n++,1===n&&/\S/.test(e))return !1;if(2===n)return !0}return !1},isLastDescendantNode:function(e){switch(e.getValue().type){case"tag":case"anchor":case"comment":return !1}const t=e.stack.length;for(let n=1;n<t;n++){const t=e.stack[n],r=e.stack[n-1];if(Array.isArray(r)&&"number"==typeof t&&t!==r.length-1)return !1}return !0},getBlockValueLineContents:function(e,t){let{parentIndent:n,isLastDescendant:r,options:o}=t;const i=e.position.start.line===e.position.end.line?"":o.originalText.slice(e.position.start.offset,e.position.end.offset).match(/^[^\n]*?\n(.*)$/s)[1],u=null===e.indent?(e=>e?e[1].length:Number.POSITIVE_INFINITY)(i.match(/^( *)\S/m)):e.indent-1+n,s=i.split("\n").map((e=>e.slice(u)));return "preserve"===o.proseWrap||"blockLiteral"===e.type?a(s.map((e=>0===e.length?[]:[e]))):a(s.map((e=>0===e.length?[]:tH(e))).reduce(((e,t,n)=>0!==n&&s[n-1].length>0&&t.length>0&&!/^\s/.test(t[0])&&!/^\s|\s$/.test(GG(e))?[...e.slice(0,-1),[...GG(e),...t]]:[...e,t]),[]).map((e=>e.reduce(((e,t)=>e.length>0&&/\s$/.test(GG(e))?[...e.slice(0,-1),GG(e)+" "+t]:[...e,t]),[]))).map((e=>"never"===o.proseWrap?[e.join(" ")]:e)));function a(t){if("keep"===e.chomping)return 0===GG(t).length?t.slice(0,-1):t;let n=0;for(let e=t.length-1;e>=0&&0===t[e].length;e--)n++;return 0===n?t:n>=2&&!r?t.slice(0,-(n-1)):t.slice(0,-n)}},getFlowScalarLineContents:function(e,t,n){const r=t.split("\n").map(((e,t,n)=>0===t&&t===n.length-1?e:0!==t&&t!==n.length-1?e.trim():0===t?e.trimEnd():e.trimStart()));return "preserve"===n.proseWrap?r.map((e=>0===e.length?[]:[e])):r.map((e=>0===e.length?[]:tH(e))).reduce(((t,n,o)=>0!==o&&r[o-1].length>0&&n.length>0&&("quoteDouble"!==e||!GG(GG(t)).endsWith("\\"))?[...t.slice(0,-1),[...GG(t),...n]]:[...t,n]),[]).map((e=>"never"===n.proseWrap?[e.join(" ")]:e))},getLastDescendantNode:function e(t){return HG(t.children)?e(GG(t.children)):t},hasPrettierIgnore:function(e){const t=e.getValue();if("documentBody"===t.type){const t=e.getParentNode();return eH(t.head)&&XG(GG(t.head.endComments))}return YG(t)&&XG(GG(t.leadingComments))},hasLeadingComments:YG,hasMiddleComments:KG,hasIndicatorComment:QG,hasTrailingComment:ZG,hasEndComments:eH};const{defineShortcut:rH,mapNode:oH}=nH;function iH(e){switch(e.type){case"document":rH(e,"head",(()=>e.children[0])),rH(e,"body",(()=>e.children[1]));break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":rH(e,"content",(()=>e.children[0]));break;case"mappingItem":case"flowMappingItem":rH(e,"key",(()=>e.children[0])),rH(e,"value",(()=>e.children[1]));}return e}var uH=function(e){return oH(e,iH)};const{builders:{softline:sH,align:aH}}=Zc,{hasEndComments:cH,isNextLineEmpty:lH,isNode:pH}=nH,fH=new WeakMap;function dH(e){return cH(e)&&!pH(e,["documentHead","documentBody","flowMapping","flowSequence"])}var hH={alignWithSpaces:function(e,t){return aH(" ".repeat(e),t)},shouldPrintEndComments:dH,printNextEmptyLine:function(e,t){const n=e.getValue(),r=e.stack[0];let o;return fH.has(r)?o=fH.get(r):(o=new Set,fH.set(r,o)),o.has(n.position.end.line)||(o.add(n.position.end.line),!lH(n,t)||dH(e.getParentNode()))?"":sH}};const{builders:{ifBreak:gH,line:mH,softline:yH,hardline:DH,join:EH}}=Zc,{isEmptyNode:CH,getLast:bH,hasEndComments:vH}=nH,{printNextEmptyLine:AH,alignWithSpaces:FH}=hH;function xH(e,t,n){const r=e.getValue(),o="flowMapping"===r.type,i=o?"{":"[",u=o?"}":"]";let s=yH;o&&r.children.length>0&&n.bracketSpacing&&(s=mH);const a=bH(r.children),c=a&&"flowMappingItem"===a.type&&CH(a.key)&&CH(a.value);return [i,FH(n.tabWidth,[s,SH(e,t,n),"none"===n.trailingComma?"":gH(","),vH(r)?[DH,EH(DH,e.map(t,"endComments"))]:""]),c?"":s,u]}function SH(e,t,n){const r=e.getValue();return e.map(((e,o)=>[t(),o===r.children.length-1?"":[",",mH,r.children[o].position.start.line!==r.children[o+1].position.start.line?AH(e,n.originalText):""]]),"children")}var wH={printFlowMapping:xH,printFlowSequence:xH};const{builders:{conditionalGroup:TH,group:BH,hardline:NH,ifBreak:kH,join:PH,line:OH}}=Zc,{hasLeadingComments:IH,hasMiddleComments:LH,hasTrailingComment:jH,hasEndComments:_H,isNode:MH,isEmptyNode:RH,isInlineNode:VH}=nH,{alignWithSpaces:$H}=hH;function WH(e,t){if(!e)return !0;switch(e.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return !0;default:return !1}if("preserve"===t.proseWrap)return e.position.start.line===e.position.end.line;if(/\\$/m.test(t.originalText.slice(e.position.start.offset,e.position.end.offset)))return !1;switch(t.proseWrap){case"never":return !e.value.includes("\n");case"always":return !/[\n ]/.test(e.value);default:return !1}}var qH=function(e,t,n,r,o){const{key:i,value:u}=e,s=RH(i),a=RH(u);if(s&&a)return ": ";const c=r("key"),l=function(e){return e.key.content&&"alias"===e.key.content.type}(e)?" ":"";if(a)return "flowMappingItem"===e.type&&"flowMapping"===t.type?c:"mappingItem"!==e.type||!WH(i.content,o)||jH(i.content)||t.tag&&"tag:yaml.org,2002:set"===t.tag.value?["? ",$H(2,c)]:[c,l,":"];const p=r("value");if(s)return [": ",$H(2,p)];if(IH(u)||!VH(i.content))return ["? ",$H(2,c),NH,PH("",n.map(r,"value","leadingComments").map((e=>[e,NH]))),": ",$H(2,p)];if(function(e){if(!e)return !0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":return e.position.start.line===e.position.end.line;case"alias":return !0;default:return !1}}(i.content)&&!IH(i.content)&&!LH(i.content)&&!jH(i.content)&&!_H(i)&&!IH(u.content)&&!LH(u.content)&&!_H(u)&&WH(u.content,o))return [c,l,": ",p];const f=Symbol("mappingKey"),d=BH([kH("? "),BH($H(2,c),{id:f})]),h=[NH,": ",$H(2,p)],g=[l,":"];IH(u.content)||_H(u)&&u.content&&!MH(u.content,["mapping","sequence"])||"mapping"===t.type&&jH(i.content)&&VH(u.content)||MH(u.content,["mapping","sequence"])&&null===u.content.tag&&null===u.content.anchor?g.push(NH):u.content&&g.push(OH),g.push(p);const m=$H(o.tabWidth,g);return !WH(i.content,o)||IH(i.content)||LH(i.content)||_H(i)?TH([[d,kH(h,m,{groupId:f})]]):TH([[c,m]])};const{builders:{dedent:UH,dedentToRoot:zH,fill:GH,hardline:HH,join:JH,line:XH,literalline:YH,markAsRoot:KH},utils:{getDocParts:QH}}=Zc,{getAncestorCount:ZH,getBlockValueLineContents:eJ,hasIndicatorComment:tJ,isLastDescendantNode:nJ,isNode:rJ}=nH,{alignWithSpaces:oJ}=hH;var iJ=function(e,t,n){const r=e.getValue(),o=ZH(e,(e=>rJ(e,["sequence","mapping"]))),i=nJ(e),u=["blockFolded"===r.type?">":"|"];null!==r.indent&&u.push(r.indent.toString()),"clip"!==r.chomping&&u.push("keep"===r.chomping?"+":"-"),tJ(r)&&u.push(" ",t("indicatorComment"));const s=eJ(r,{parentIndent:o,isLastDescendant:i,options:n}),a=[];for(const[e,t]of s.entries())0===e&&a.push(HH),a.push(GH(QH(JH(XH,t)))),e!==s.length-1?a.push(0===t.length?HH:KH(YH)):"keep"===r.chomping&&i&&a.push(zH(0===t.length?HH:YH));return null===r.indent?u.push(UH(oJ(n.tabWidth,a))):u.push(zH(oJ(r.indent-1+o,a))),u};const{builders:{breakParent:uJ,fill:sJ,group:aJ,hardline:cJ,join:lJ,line:pJ,lineSuffix:fJ,literalline:dJ},utils:{getDocParts:hJ,replaceTextEndOfLine:gJ}}=Zc,{isPreviousLineEmpty:mJ}=dc,{insertPragma:yJ,isPragma:DJ}=qG,{locStart:EJ}=UG,CJ=zG,{getFlowScalarLineContents:bJ,getLastDescendantNode:vJ,hasLeadingComments:AJ,hasMiddleComments:FJ,hasTrailingComment:xJ,hasEndComments:SJ,hasPrettierIgnore:wJ,isLastDescendantNode:TJ,isNode:BJ,isInlineNode:NJ}=nH,kJ=uH,{alignWithSpaces:PJ,printNextEmptyLine:OJ,shouldPrintEndComments:IJ}=hH,{printFlowMapping:LJ,printFlowSequence:jJ}=wH,_J=qH,MJ=iJ;function RJ(e,t){return xJ(e)||t&&(t.head.children.length>0||SJ(t.head))}function VJ(e,t,n){const r=bJ(e,t,n);return lJ(cJ,r.map((e=>sJ(hJ(lJ(pJ,e))))))}var $J={preprocess:kJ,embed:CJ,print:function(e,t,n){const r=e.getValue(),o=[];"mappingValue"!==r.type&&AJ(r)&&o.push([lJ(cJ,e.map(n,"leadingComments")),cJ]);const{tag:i,anchor:u}=r;i&&o.push(n("tag")),i&&u&&o.push(" "),u&&o.push(n("anchor"));let s="";BJ(r,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!TJ(e)&&(s=OJ(e,t.originalText)),(i||u)&&(BJ(r,["sequence","mapping"])&&!FJ(r)?o.push(cJ):o.push(" ")),FJ(r)&&o.push([1===r.middleComments.length?"":cJ,lJ(cJ,e.map(n,"middleComments")),cJ]);const a=e.getParentNode();return wJ(e)?o.push(gJ(t.originalText.slice(r.position.start.offset,r.position.end.offset).trimEnd(),dJ)):o.push(aJ(function(e,t,n,r,o){switch(e.type){case"root":{const{children:t}=e,r=[];n.each(((e,n)=>{const i=t[n],u=t[n+1];0!==n&&r.push(cJ),r.push(o()),RJ(i,u)?(r.push(cJ,"..."),xJ(i)&&r.push(" ",o("trailingComment"))):u&&!xJ(u.head)&&r.push(cJ,"---");}),"children");const i=vJ(e);return BJ(i,["blockLiteral","blockFolded"])&&"keep"===i.chomping||r.push(cJ),r}case"document":{const i=[];return "head"===function(e,t,n,r){if(n.children[0]===e&&/---(?:\s|$)/.test(r.originalText.slice(EJ(e),EJ(e)+4))||e.head.children.length>0||SJ(e.head)||xJ(e.head))return "head";if(RJ(e,t))return !1;return !!t&&"root"}(e,t.children[n.getName()+1],t,r)&&((e.head.children.length>0||e.head.endComments.length>0)&&i.push(o("head")),xJ(e.head)?i.push(["---"," ",o(["head","trailingComment"])]):i.push("---")),function(e){return e.body.children.length>0||SJ(e.body)}(e)&&i.push(o("body")),lJ(cJ,i)}case"documentHead":return lJ(cJ,[...n.map(o,"children"),...n.map(o,"endComments")]);case"documentBody":{const{children:t,endComments:r}=e;let i="";if(t.length>0&&r.length>0){const t=vJ(e);BJ(t,["blockFolded","blockLiteral"])?"keep"!==t.chomping&&(i=[cJ,cJ]):i=cJ;}return [lJ(cJ,n.map(o,"children")),i,lJ(cJ,n.map(o,"endComments"))]}case"directive":return ["%",lJ(" ",[e.name,...e.parameters])];case"comment":return ["#",e.value];case"alias":return ["*",e.value];case"tag":return r.originalText.slice(e.position.start.offset,e.position.end.offset);case"anchor":return ["&",e.value];case"plain":return VJ(e.type,r.originalText.slice(e.position.start.offset,e.position.end.offset),r);case"quoteDouble":case"quoteSingle":{const t="'",n='"',o=r.originalText.slice(e.position.start.offset+1,e.position.end.offset-1);if("quoteSingle"===e.type&&o.includes("\\")||"quoteDouble"===e.type&&/\\[^"]/.test(o)){const i="quoteDouble"===e.type?n:t;return [i,VJ(e.type,o,r),i]}if(o.includes(n))return [t,VJ(e.type,"quoteDouble"===e.type?o.replace(/\\"/g,n).replace(/'/g,t.repeat(2)):o,r),t];if(o.includes(t))return [n,VJ(e.type,"quoteSingle"===e.type?o.replace(/''/g,t):o,r),n];const i=r.singleQuote?t:n;return [i,VJ(e.type,o,r),i]}case"blockFolded":case"blockLiteral":return MJ(n,o,r);case"mapping":case"sequence":return lJ(cJ,n.map(o,"children"));case"sequenceItem":return ["- ",PJ(2,e.content?o("content"):"")];case"mappingKey":case"mappingValue":return e.content?o("content"):"";case"mappingItem":case"flowMappingItem":return _J(e,t,n,o,r);case"flowMapping":return LJ(n,o,r);case"flowSequence":return jJ(n,o,r);case"flowSequenceItem":return o("content");default:throw new Error("Unexpected node type ".concat(e.type))}}(r,a,e,t,n))),xJ(r)&&!BJ(r,["document","documentHead"])&&o.push(fJ(["mappingValue"!==r.type||r.content?" ":"","mappingKey"===a.type&&"mapping"===e.getParentNode(2).type&&NJ(r)?"":uJ,n("trailingComment")])),IJ(r)&&o.push(PJ("sequenceItem"===r.type?2:0,[cJ,lJ(cJ,e.map((e=>[mJ(t.originalText,e.getValue(),EJ)?cJ:"",n()]),"endComments"))])),o.push(s),o},massageAstNode:function(e,t){if(BJ(t))switch(delete t.position,t.type){case"comment":if(DJ(t.value))return null;break;case"quoteDouble":case"quoteSingle":t.type="quote";}},insertPragma:yJ};const WJ=$J,qJ={bracketSpacing:bj.bracketSpacing,singleQuote:bj.singleQuote,proseWrap:bj.proseWrap},UJ=[bE({name:"YAML",type:"data",color:"#cb171e",tmScope:"source.yaml",aliases:["yml"],extensions:[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"],filenames:[".clang-format",".clang-tidy",".gemrc","glide.lock","yarn.lock"],aceMode:"yaml",codemirrorMode:"yaml",codemirrorMimeType:"text/x-yaml",languageId:407},(e=>({since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml","ansible","home-assistant"],filenames:[...e.filenames.filter((e=>"yarn.lock"!==e)),".prettierrc",".stylelintrc"]})))];var zJ=[Ij,QM,fV,IV,bW,WG,{languages:UJ,printers:{yaml:WJ},options:qJ,parsers:undefined}];const{version:GJ}=n,HJ=XD,{getSupportInfo:JJ}=za,XJ=EE,YJ=zJ,KJ=Zc;function QJ(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return function(){for(var n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];const i=r[t]||{},u=i.plugins||[];return r[t]=Object.assign(Object.assign({},i),{},{plugins:[...YJ,...Array.isArray(u)?u:Object.values(u)]}),e(...r)}}const ZJ=QJ(HJ.formatWithCursor);var eX={formatWithCursor:ZJ,format:(e,t)=>ZJ(e,t).formatted,check(e,t){const{formatted:n}=ZJ(e,t);return n===e},doc:KJ,getSupportInfo:QJ(JJ,0),version:GJ,util:XJ,__debug:{parse:QJ(HJ.parse),formatAST:QJ(HJ.formatAST),formatDoc:QJ(HJ.formatDoc),printToDoc:QJ(HJ.printToDoc),printDocToString:QJ(HJ.printDocToString)}};return eX}));
}(standalone));

var parser$2 = {};

// needs a separate module as this is required inside chevrotain productive code
// and also in the entry point for webpack(api.ts).
// A separate file avoids cyclic dependencies and webpack errors.
var VERSION = "7.1.1";

/*
 Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.
 These utils should replace usage of lodash in the production code base. not because they are any better...
 but for the purpose of being a dependency free library.

 The hotspots in the code are already written in imperative style for performance reasons.
 so writing several dozen utils which may be slower than the original lodash, does not matter as much
 considering they will not be invoked in hotspots...
 */
function isEmpty(arr) {
    return arr && arr.length === 0;
}
function keys(obj) {
    if (obj === undefined || obj === null) {
        return [];
    }
    return Object.keys(obj);
}
function values(obj) {
    var vals = [];
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
        vals.push(obj[keys[i]]);
    }
    return vals;
}
function mapValues(obj, callback) {
    var result = [];
    var objKeys = keys(obj);
    for (var idx = 0; idx < objKeys.length; idx++) {
        var currKey = objKeys[idx];
        result.push(callback.call(null, obj[currKey], currKey));
    }
    return result;
}
function map(arr, callback) {
    var result = [];
    for (var idx = 0; idx < arr.length; idx++) {
        result.push(callback.call(null, arr[idx], idx));
    }
    return result;
}
function flatten(arr) {
    var result = [];
    for (var idx = 0; idx < arr.length; idx++) {
        var currItem = arr[idx];
        if (Array.isArray(currItem)) {
            result = result.concat(flatten(currItem));
        }
        else {
            result.push(currItem);
        }
    }
    return result;
}
function first$1(arr) {
    return isEmpty(arr) ? undefined : arr[0];
}
function last(arr) {
    var len = arr && arr.length;
    return len ? arr[len - 1] : undefined;
}
function forEach(collection, iteratorCallback) {
    /* istanbul ignore else */
    if (Array.isArray(collection)) {
        for (var i = 0; i < collection.length; i++) {
            iteratorCallback.call(null, collection[i], i);
        }
    }
    else if (isObject(collection)) {
        var colKeys = keys(collection);
        for (var i = 0; i < colKeys.length; i++) {
            var key = colKeys[i];
            var value = collection[key];
            iteratorCallback.call(null, value, key);
        }
    }
    else {
        throw Error("non exhaustive match");
    }
}
function isString(item) {
    return typeof item === "string";
}
function isUndefined(item) {
    return item === undefined;
}
function isFunction(item) {
    return item instanceof Function;
}
function drop(arr, howMuch) {
    if (howMuch === void 0) { howMuch = 1; }
    return arr.slice(howMuch, arr.length);
}
function dropRight(arr, howMuch) {
    if (howMuch === void 0) { howMuch = 1; }
    return arr.slice(0, arr.length - howMuch);
}
function filter(arr, predicate) {
    var result = [];
    if (Array.isArray(arr)) {
        for (var i = 0; i < arr.length; i++) {
            var item = arr[i];
            if (predicate.call(null, item)) {
                result.push(item);
            }
        }
    }
    return result;
}
function reject(arr, predicate) {
    return filter(arr, function (item) { return !predicate(item); });
}
function pick(obj, predicate) {
    var keys = Object.keys(obj);
    var result = {};
    for (var i = 0; i < keys.length; i++) {
        var currKey = keys[i];
        var currItem = obj[currKey];
        if (predicate(currItem)) {
            result[currKey] = currItem;
        }
    }
    return result;
}
function has(obj, prop) {
    if (isObject(obj)) {
        return obj.hasOwnProperty(prop);
    }
    return false;
}
function contains(arr, item) {
    return find(arr, function (currItem) { return currItem === item; }) !== undefined ? true : false;
}
/**
 * shallow clone
 */
function cloneArr(arr) {
    var newArr = [];
    for (var i = 0; i < arr.length; i++) {
        newArr.push(arr[i]);
    }
    return newArr;
}
/**
 * shallow clone
 */
function cloneObj(obj) {
    var clonedObj = {};
    for (var key in obj) {
        /* istanbul ignore else */
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            clonedObj[key] = obj[key];
        }
    }
    return clonedObj;
}
function find(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        var item = arr[i];
        if (predicate.call(null, item)) {
            return item;
        }
    }
    return undefined;
}
function findAll(arr, predicate) {
    var found = [];
    for (var i = 0; i < arr.length; i++) {
        var item = arr[i];
        if (predicate.call(null, item)) {
            found.push(item);
        }
    }
    return found;
}
function reduce(arrOrObj, iterator, initial) {
    var isArr = Array.isArray(arrOrObj);
    var vals = isArr ? arrOrObj : values(arrOrObj);
    var objKeys = isArr ? [] : keys(arrOrObj);
    var accumulator = initial;
    for (var i = 0; i < vals.length; i++) {
        accumulator = iterator.call(null, accumulator, vals[i], isArr ? i : objKeys[i]);
    }
    return accumulator;
}
function compact(arr) {
    return reject(arr, function (item) { return item === null || item === undefined; });
}
function uniq(arr, identity) {
    if (identity === void 0) { identity = function (item) { return item; }; }
    var identities = [];
    return reduce(arr, function (result, currItem) {
        var currIdentity = identity(currItem);
        if (contains(identities, currIdentity)) {
            return result;
        }
        else {
            identities.push(currIdentity);
            return result.concat(currItem);
        }
    }, []);
}
function isArray(obj) {
    return Array.isArray(obj);
}
function isRegExp(obj) {
    return obj instanceof RegExp;
}
function isObject(obj) {
    return obj instanceof Object;
}
function every(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        if (!predicate(arr[i], i)) {
            return false;
        }
    }
    return true;
}
function difference(arr, values) {
    return reject(arr, function (item) { return contains(values, item); });
}
function some(arr, predicate) {
    for (var i = 0; i < arr.length; i++) {
        if (predicate(arr[i])) {
            return true;
        }
    }
    return false;
}
function indexOf(arr, value) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === value) {
            return i;
        }
    }
    return -1;
}
/**
 * mutates! (and returns) target
 */
function assign(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var i = 0; i < sources.length; i++) {
        var curSource = sources[i];
        var currSourceKeys = keys(curSource);
        for (var j = 0; j < currSourceKeys.length; j++) {
            var currKey = currSourceKeys[j];
            target[currKey] = curSource[currKey];
        }
    }
    return target;
}
/**
 * mutates! (and returns) target
 */
function assignNoOverwrite(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var i = 0; i < sources.length; i++) {
        var curSource = sources[i];
        var currSourceKeys = keys(curSource);
        for (var j = 0; j < currSourceKeys.length; j++) {
            var currKey = currSourceKeys[j];
            if (!has(target, currKey)) {
                target[currKey] = curSource[currKey];
            }
        }
    }
    return target;
}
function defaults() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    return assignNoOverwrite.apply(null, [{}].concat(sources));
}
function groupBy(arr, groupKeyFunc) {
    var result = {};
    forEach(arr, function (item) {
        var currGroupKey = groupKeyFunc(item);
        var currGroupArr = result[currGroupKey];
        if (currGroupArr) {
            currGroupArr.push(item);
        }
        else {
            result[currGroupKey] = [item];
        }
    });
    return result;
}
/**
 * Merge obj2 into obj1.
 * Will overwrite existing properties with the same name
 */
function merge(obj1, obj2) {
    var result = cloneObj(obj1);
    var keys2 = keys(obj2);
    for (var i = 0; i < keys2.length; i++) {
        var key = keys2[i];
        var value = obj2[key];
        result[key] = value;
    }
    return result;
}
function NOOP() { }
function IDENTITY(item) {
    return item;
}
/**
 * Will return a new packed array with same values.
 */
function packArray(holeyArr) {
    var result = [];
    for (var i = 0; i < holeyArr.length; i++) {
        var orgValue = holeyArr[i];
        result.push(orgValue !== undefined ? orgValue : undefined);
    }
    return result;
}
function PRINT_ERROR(msg) {
    /* istanbul ignore else - can't override global.console in node.js */
    if (console && console.error) {
        console.error("Error: " + msg);
    }
}
function PRINT_WARNING(msg) {
    /* istanbul ignore else - can't override global.console in node.js*/
    if (console && console.warn) {
        // TODO: modify docs accordingly
        console.warn("Warning: " + msg);
    }
}
function isES2015MapSupported() {
    return typeof Map === "function";
}
function applyMixins(derivedCtor, baseCtors) {
    baseCtors.forEach(function (baseCtor) {
        var baseProto = baseCtor.prototype;
        Object.getOwnPropertyNames(baseProto).forEach(function (propName) {
            if (propName === "constructor") {
                return;
            }
            var basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);
            // Handle Accessors
            if (basePropDescriptor &&
                (basePropDescriptor.get || basePropDescriptor.set)) {
                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);
            }
            else {
                derivedCtor.prototype[propName] = baseCtor.prototype[propName];
            }
        });
    });
}
// base on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216
function toFastProperties(toBecomeFast) {
    function FakeConstructor() { }
    // If our object is used as a constructor it would receive
    FakeConstructor.prototype = toBecomeFast;
    var fakeInstance = new FakeConstructor();
    function fakeAccess() {
        return typeof fakeInstance.bar;
    }
    // help V8 understand this is a "real" prototype by actually using
    // the fake instance.
    fakeAccess();
    fakeAccess();
    return toBecomeFast;
}
function peek(arr) {
    return arr[arr.length - 1];
}
/* istanbul ignore next - for performance tracing*/
function timer(func) {
    var start = new Date().getTime();
    var val = func();
    var end = new Date().getTime();
    var total = end - start;
    return { time: total, value: val };
}

var regexpToAst = {exports: {}};

(function (module) {
(function(root, factory) {
    // istanbul ignore next
    if (module.exports) {
        module.exports = factory();
    } else {
        // istanbul ignore next
        root.regexpToAst = factory();
    }
})(
    typeof self !== "undefined"
        ? // istanbul ignore next
          self
        : commonjsGlobal,
    function() {
        // references
        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983
        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern
        function RegExpParser() {}

        RegExpParser.prototype.saveState = function() {
            return {
                idx: this.idx,
                input: this.input,
                groupIdx: this.groupIdx
            }
        };

        RegExpParser.prototype.restoreState = function(newState) {
            this.idx = newState.idx;
            this.input = newState.input;
            this.groupIdx = newState.groupIdx;
        };

        RegExpParser.prototype.pattern = function(input) {
            // parser state
            this.idx = 0;
            this.input = input;
            this.groupIdx = 0;

            this.consumeChar("/");
            var value = this.disjunction();
            this.consumeChar("/");

            var flags = {
                type: "Flags",
                loc: { begin: this.idx, end: input.length },
                global: false,
                ignoreCase: false,
                multiLine: false,
                unicode: false,
                sticky: false
            };

            while (this.isRegExpFlag()) {
                switch (this.popChar()) {
                    case "g":
                        addFlag(flags, "global");
                        break
                    case "i":
                        addFlag(flags, "ignoreCase");
                        break
                    case "m":
                        addFlag(flags, "multiLine");
                        break
                    case "u":
                        addFlag(flags, "unicode");
                        break
                    case "y":
                        addFlag(flags, "sticky");
                        break
                }
            }

            if (this.idx !== this.input.length) {
                throw Error(
                    "Redundant input: " + this.input.substring(this.idx)
                )
            }
            return {
                type: "Pattern",
                flags: flags,
                value: value,
                loc: this.loc(0)
            }
        };

        RegExpParser.prototype.disjunction = function() {
            var alts = [];
            var begin = this.idx;

            alts.push(this.alternative());

            while (this.peekChar() === "|") {
                this.consumeChar("|");
                alts.push(this.alternative());
            }

            return { type: "Disjunction", value: alts, loc: this.loc(begin) }
        };

        RegExpParser.prototype.alternative = function() {
            var terms = [];
            var begin = this.idx;

            while (this.isTerm()) {
                terms.push(this.term());
            }

            return { type: "Alternative", value: terms, loc: this.loc(begin) }
        };

        RegExpParser.prototype.term = function() {
            if (this.isAssertion()) {
                return this.assertion()
            } else {
                return this.atom()
            }
        };

        RegExpParser.prototype.assertion = function() {
            var begin = this.idx;
            switch (this.popChar()) {
                case "^":
                    return {
                        type: "StartAnchor",
                        loc: this.loc(begin)
                    }
                case "$":
                    return { type: "EndAnchor", loc: this.loc(begin) }
                // '\b' or '\B'
                case "\\":
                    switch (this.popChar()) {
                        case "b":
                            return {
                                type: "WordBoundary",
                                loc: this.loc(begin)
                            }
                        case "B":
                            return {
                                type: "NonWordBoundary",
                                loc: this.loc(begin)
                            }
                    }
                    // istanbul ignore next
                    throw Error("Invalid Assertion Escape")
                // '(?=' or '(?!'
                case "(":
                    this.consumeChar("?");

                    var type;
                    switch (this.popChar()) {
                        case "=":
                            type = "Lookahead";
                            break
                        case "!":
                            type = "NegativeLookahead";
                            break
                    }
                    ASSERT_EXISTS(type);

                    var disjunction = this.disjunction();

                    this.consumeChar(")");

                    return {
                        type: type,
                        value: disjunction,
                        loc: this.loc(begin)
                    }
            }
            // istanbul ignore next
            ASSERT_NEVER_REACH_HERE();
        };

        RegExpParser.prototype.quantifier = function(isBacktracking) {
            var range;
            var begin = this.idx;
            switch (this.popChar()) {
                case "*":
                    range = {
                        atLeast: 0,
                        atMost: Infinity
                    };
                    break
                case "+":
                    range = {
                        atLeast: 1,
                        atMost: Infinity
                    };
                    break
                case "?":
                    range = {
                        atLeast: 0,
                        atMost: 1
                    };
                    break
                case "{":
                    var atLeast = this.integerIncludingZero();
                    switch (this.popChar()) {
                        case "}":
                            range = {
                                atLeast: atLeast,
                                atMost: atLeast
                            };
                            break
                        case ",":
                            var atMost;
                            if (this.isDigit()) {
                                atMost = this.integerIncludingZero();
                                range = {
                                    atLeast: atLeast,
                                    atMost: atMost
                                };
                            } else {
                                range = {
                                    atLeast: atLeast,
                                    atMost: Infinity
                                };
                            }
                            this.consumeChar("}");
                            break
                    }
                    // throwing exceptions from "ASSERT_EXISTS" during backtracking
                    // causes severe performance degradations
                    if (isBacktracking === true && range === undefined) {
                        return undefined
                    }
                    ASSERT_EXISTS(range);
                    break
            }

            // throwing exceptions from "ASSERT_EXISTS" during backtracking
            // causes severe performance degradations
            if (isBacktracking === true && range === undefined) {
                return undefined
            }

            ASSERT_EXISTS(range);

            if (this.peekChar(0) === "?") {
                this.consumeChar("?");
                range.greedy = false;
            } else {
                range.greedy = true;
            }

            range.type = "Quantifier";
            range.loc = this.loc(begin);
            return range
        };

        RegExpParser.prototype.atom = function() {
            var atom;
            var begin = this.idx;
            switch (this.peekChar()) {
                case ".":
                    atom = this.dotAll();
                    break
                case "\\":
                    atom = this.atomEscape();
                    break
                case "[":
                    atom = this.characterClass();
                    break
                case "(":
                    atom = this.group();
                    break
            }

            if (atom === undefined && this.isPatternCharacter()) {
                atom = this.patternCharacter();
            }

            ASSERT_EXISTS(atom);

            atom.loc = this.loc(begin);

            if (this.isQuantifier()) {
                atom.quantifier = this.quantifier();
            }

            return atom
        };

        RegExpParser.prototype.dotAll = function() {
            this.consumeChar(".");
            return {
                type: "Set",
                complement: true,
                value: [cc("\n"), cc("\r"), cc("\u2028"), cc("\u2029")]
            }
        };

        RegExpParser.prototype.atomEscape = function() {
            this.consumeChar("\\");

            switch (this.peekChar()) {
                case "1":
                case "2":
                case "3":
                case "4":
                case "5":
                case "6":
                case "7":
                case "8":
                case "9":
                    return this.decimalEscapeAtom()
                case "d":
                case "D":
                case "s":
                case "S":
                case "w":
                case "W":
                    return this.characterClassEscape()
                case "f":
                case "n":
                case "r":
                case "t":
                case "v":
                    return this.controlEscapeAtom()
                case "c":
                    return this.controlLetterEscapeAtom()
                case "0":
                    return this.nulCharacterAtom()
                case "x":
                    return this.hexEscapeSequenceAtom()
                case "u":
                    return this.regExpUnicodeEscapeSequenceAtom()
                default:
                    return this.identityEscapeAtom()
            }
        };

        RegExpParser.prototype.decimalEscapeAtom = function() {
            var value = this.positiveInteger();

            return { type: "GroupBackReference", value: value }
        };

        RegExpParser.prototype.characterClassEscape = function() {
            var set;
            var complement = false;
            switch (this.popChar()) {
                case "d":
                    set = digitsCharCodes;
                    break
                case "D":
                    set = digitsCharCodes;
                    complement = true;
                    break
                case "s":
                    set = whitespaceCodes;
                    break
                case "S":
                    set = whitespaceCodes;
                    complement = true;
                    break
                case "w":
                    set = wordCharCodes;
                    break
                case "W":
                    set = wordCharCodes;
                    complement = true;
                    break
            }

            ASSERT_EXISTS(set);

            return { type: "Set", value: set, complement: complement }
        };

        RegExpParser.prototype.controlEscapeAtom = function() {
            var escapeCode;
            switch (this.popChar()) {
                case "f":
                    escapeCode = cc("\f");
                    break
                case "n":
                    escapeCode = cc("\n");
                    break
                case "r":
                    escapeCode = cc("\r");
                    break
                case "t":
                    escapeCode = cc("\t");
                    break
                case "v":
                    escapeCode = cc("\v");
                    break
            }
            ASSERT_EXISTS(escapeCode);

            return { type: "Character", value: escapeCode }
        };

        RegExpParser.prototype.controlLetterEscapeAtom = function() {
            this.consumeChar("c");
            var letter = this.popChar();
            if (/[a-zA-Z]/.test(letter) === false) {
                throw Error("Invalid ")
            }

            var letterCode = letter.toUpperCase().charCodeAt(0) - 64;
            return { type: "Character", value: letterCode }
        };

        RegExpParser.prototype.nulCharacterAtom = function() {
            // TODO implement '[lookahead ∉ DecimalDigit]'
            // TODO: for the deprecated octal escape sequence
            this.consumeChar("0");
            return { type: "Character", value: cc("\0") }
        };

        RegExpParser.prototype.hexEscapeSequenceAtom = function() {
            this.consumeChar("x");
            return this.parseHexDigits(2)
        };

        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {
            this.consumeChar("u");
            return this.parseHexDigits(4)
        };

        RegExpParser.prototype.identityEscapeAtom = function() {
            // TODO: implement "SourceCharacter but not UnicodeIDContinue"
            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments
            var escapedChar = this.popChar();
            return { type: "Character", value: cc(escapedChar) }
        };

        RegExpParser.prototype.classPatternCharacterAtom = function() {
            switch (this.peekChar()) {
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                // istanbul ignore next
                case "\\":
                // istanbul ignore next
                case "]":
                    throw Error("TBD")
                default:
                    var nextChar = this.popChar();
                    return { type: "Character", value: cc(nextChar) }
            }
        };

        RegExpParser.prototype.characterClass = function() {
            var set = [];
            var complement = false;
            this.consumeChar("[");
            if (this.peekChar(0) === "^") {
                this.consumeChar("^");
                complement = true;
            }

            while (this.isClassAtom()) {
                var from = this.classAtom();
                var isFromSingleChar = from.type === "Character";
                if (isFromSingleChar && this.isRangeDash()) {
                    this.consumeChar("-");
                    var to = this.classAtom();
                    var isToSingleChar = to.type === "Character";

                    // a range can only be used when both sides are single characters
                    if (isToSingleChar) {
                        if (to.value < from.value) {
                            throw Error("Range out of order in character class")
                        }
                        set.push({ from: from.value, to: to.value });
                    } else {
                        // literal dash
                        insertToSet(from.value, set);
                        set.push(cc("-"));
                        insertToSet(to.value, set);
                    }
                } else {
                    insertToSet(from.value, set);
                }
            }

            this.consumeChar("]");

            return { type: "Set", complement: complement, value: set }
        };

        RegExpParser.prototype.classAtom = function() {
            switch (this.peekChar()) {
                // istanbul ignore next
                case "]":
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                    throw Error("TBD")
                case "\\":
                    return this.classEscape()
                default:
                    return this.classPatternCharacterAtom()
            }
        };

        RegExpParser.prototype.classEscape = function() {
            this.consumeChar("\\");
            switch (this.peekChar()) {
                // Matches a backspace.
                // (Not to be confused with \b word boundary outside characterClass)
                case "b":
                    this.consumeChar("b");
                    return { type: "Character", value: cc("\u0008") }
                case "d":
                case "D":
                case "s":
                case "S":
                case "w":
                case "W":
                    return this.characterClassEscape()
                case "f":
                case "n":
                case "r":
                case "t":
                case "v":
                    return this.controlEscapeAtom()
                case "c":
                    return this.controlLetterEscapeAtom()
                case "0":
                    return this.nulCharacterAtom()
                case "x":
                    return this.hexEscapeSequenceAtom()
                case "u":
                    return this.regExpUnicodeEscapeSequenceAtom()
                default:
                    return this.identityEscapeAtom()
            }
        };

        RegExpParser.prototype.group = function() {
            var capturing = true;
            this.consumeChar("(");
            switch (this.peekChar(0)) {
                case "?":
                    this.consumeChar("?");
                    this.consumeChar(":");
                    capturing = false;
                    break
                default:
                    this.groupIdx++;
                    break
            }
            var value = this.disjunction();
            this.consumeChar(")");

            var groupAst = {
                type: "Group",
                capturing: capturing,
                value: value
            };

            if (capturing) {
                groupAst.idx = this.groupIdx;
            }

            return groupAst
        };

        RegExpParser.prototype.positiveInteger = function() {
            var number = this.popChar();

            // istanbul ignore next - can't ever get here due to previous lookahead checks
            // still implementing this error checking in case this ever changes.
            if (decimalPatternNoZero.test(number) === false) {
                throw Error("Expecting a positive integer")
            }

            while (decimalPattern.test(this.peekChar(0))) {
                number += this.popChar();
            }

            return parseInt(number, 10)
        };

        RegExpParser.prototype.integerIncludingZero = function() {
            var number = this.popChar();
            if (decimalPattern.test(number) === false) {
                throw Error("Expecting an integer")
            }

            while (decimalPattern.test(this.peekChar(0))) {
                number += this.popChar();
            }

            return parseInt(number, 10)
        };

        RegExpParser.prototype.patternCharacter = function() {
            var nextChar = this.popChar();
            switch (nextChar) {
                // istanbul ignore next
                case "\n":
                // istanbul ignore next
                case "\r":
                // istanbul ignore next
                case "\u2028":
                // istanbul ignore next
                case "\u2029":
                // istanbul ignore next
                case "^":
                // istanbul ignore next
                case "$":
                // istanbul ignore next
                case "\\":
                // istanbul ignore next
                case ".":
                // istanbul ignore next
                case "*":
                // istanbul ignore next
                case "+":
                // istanbul ignore next
                case "?":
                // istanbul ignore next
                case "(":
                // istanbul ignore next
                case ")":
                // istanbul ignore next
                case "[":
                // istanbul ignore next
                case "|":
                    // istanbul ignore next
                    throw Error("TBD")
                default:
                    return { type: "Character", value: cc(nextChar) }
            }
        };
        RegExpParser.prototype.isRegExpFlag = function() {
            switch (this.peekChar(0)) {
                case "g":
                case "i":
                case "m":
                case "u":
                case "y":
                    return true
                default:
                    return false
            }
        };

        RegExpParser.prototype.isRangeDash = function() {
            return this.peekChar() === "-" && this.isClassAtom(1)
        };

        RegExpParser.prototype.isDigit = function() {
            return decimalPattern.test(this.peekChar(0))
        };

        RegExpParser.prototype.isClassAtom = function(howMuch) {
            if (howMuch === undefined) {
                howMuch = 0;
            }

            switch (this.peekChar(howMuch)) {
                case "]":
                case "\n":
                case "\r":
                case "\u2028":
                case "\u2029":
                    return false
                default:
                    return true
            }
        };

        RegExpParser.prototype.isTerm = function() {
            return this.isAtom() || this.isAssertion()
        };

        RegExpParser.prototype.isAtom = function() {
            if (this.isPatternCharacter()) {
                return true
            }

            switch (this.peekChar(0)) {
                case ".":
                case "\\": // atomEscape
                case "[": // characterClass
                // TODO: isAtom must be called before isAssertion - disambiguate
                case "(": // group
                    return true
                default:
                    return false
            }
        };

        RegExpParser.prototype.isAssertion = function() {
            switch (this.peekChar(0)) {
                case "^":
                case "$":
                    return true
                // '\b' or '\B'
                case "\\":
                    switch (this.peekChar(1)) {
                        case "b":
                        case "B":
                            return true
                        default:
                            return false
                    }
                // '(?=' or '(?!'
                case "(":
                    return (
                        this.peekChar(1) === "?" &&
                        (this.peekChar(2) === "=" || this.peekChar(2) === "!")
                    )
                default:
                    return false
            }
        };

        RegExpParser.prototype.isQuantifier = function() {
            var prevState = this.saveState();
            try {
                return this.quantifier(true) !== undefined
            } catch (e) {
                return false
            } finally {
                this.restoreState(prevState);
            }
        };

        RegExpParser.prototype.isPatternCharacter = function() {
            switch (this.peekChar()) {
                case "^":
                case "$":
                case "\\":
                case ".":
                case "*":
                case "+":
                case "?":
                case "(":
                case ")":
                case "[":
                case "|":
                case "/":
                case "\n":
                case "\r":
                case "\u2028":
                case "\u2029":
                    return false
                default:
                    return true
            }
        };

        RegExpParser.prototype.parseHexDigits = function(howMany) {
            var hexString = "";
            for (var i = 0; i < howMany; i++) {
                var hexChar = this.popChar();
                if (hexDigitPattern.test(hexChar) === false) {
                    throw Error("Expecting a HexDecimal digits")
                }
                hexString += hexChar;
            }
            var charCode = parseInt(hexString, 16);
            return { type: "Character", value: charCode }
        };

        RegExpParser.prototype.peekChar = function(howMuch) {
            if (howMuch === undefined) {
                howMuch = 0;
            }
            return this.input[this.idx + howMuch]
        };

        RegExpParser.prototype.popChar = function() {
            var nextChar = this.peekChar(0);
            this.consumeChar();
            return nextChar
        };

        RegExpParser.prototype.consumeChar = function(char) {
            if (char !== undefined && this.input[this.idx] !== char) {
                throw Error(
                    "Expected: '" +
                        char +
                        "' but found: '" +
                        this.input[this.idx] +
                        "' at offset: " +
                        this.idx
                )
            }

            if (this.idx >= this.input.length) {
                throw Error("Unexpected end of input")
            }
            this.idx++;
        };

        RegExpParser.prototype.loc = function(begin) {
            return { begin: begin, end: this.idx }
        };

        // consts and utilities
        var hexDigitPattern = /[0-9a-fA-F]/;
        var decimalPattern = /[0-9]/;
        var decimalPatternNoZero = /[1-9]/;

        function cc(char) {
            return char.charCodeAt(0)
        }

        function insertToSet(item, set) {
            if (item.length !== undefined) {
                item.forEach(function(subItem) {
                    set.push(subItem);
                });
            } else {
                set.push(item);
            }
        }

        function addFlag(flagObj, flagKey) {
            if (flagObj[flagKey] === true) {
                throw "duplicate flag " + flagKey
            }

            flagObj[flagKey] = true;
        }

        function ASSERT_EXISTS(obj) {
            // istanbul ignore next
            if (obj === undefined) {
                throw Error("Internal Error - Should never get here!")
            }
        }

        // istanbul ignore next
        function ASSERT_NEVER_REACH_HERE() {
            throw Error("Internal Error - Should never get here!")
        }

        var i;
        var digitsCharCodes = [];
        for (i = cc("0"); i <= cc("9"); i++) {
            digitsCharCodes.push(i);
        }

        var wordCharCodes = [cc("_")].concat(digitsCharCodes);
        for (i = cc("a"); i <= cc("z"); i++) {
            wordCharCodes.push(i);
        }

        for (i = cc("A"); i <= cc("Z"); i++) {
            wordCharCodes.push(i);
        }

        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes
        var whitespaceCodes = [
            cc(" "),
            cc("\f"),
            cc("\n"),
            cc("\r"),
            cc("\t"),
            cc("\v"),
            cc("\t"),
            cc("\u00a0"),
            cc("\u1680"),
            cc("\u2000"),
            cc("\u2001"),
            cc("\u2002"),
            cc("\u2003"),
            cc("\u2004"),
            cc("\u2005"),
            cc("\u2006"),
            cc("\u2007"),
            cc("\u2008"),
            cc("\u2009"),
            cc("\u200a"),
            cc("\u2028"),
            cc("\u2029"),
            cc("\u202f"),
            cc("\u205f"),
            cc("\u3000"),
            cc("\ufeff")
        ];

        function BaseRegExpVisitor() {}

        BaseRegExpVisitor.prototype.visitChildren = function(node) {
            for (var key in node) {
                var child = node[key];
                /* istanbul ignore else */
                if (node.hasOwnProperty(key)) {
                    if (child.type !== undefined) {
                        this.visit(child);
                    } else if (Array.isArray(child)) {
                        child.forEach(function(subChild) {
                            this.visit(subChild);
                        }, this);
                    }
                }
            }
        };

        BaseRegExpVisitor.prototype.visit = function(node) {
            switch (node.type) {
                case "Pattern":
                    this.visitPattern(node);
                    break
                case "Flags":
                    this.visitFlags(node);
                    break
                case "Disjunction":
                    this.visitDisjunction(node);
                    break
                case "Alternative":
                    this.visitAlternative(node);
                    break
                case "StartAnchor":
                    this.visitStartAnchor(node);
                    break
                case "EndAnchor":
                    this.visitEndAnchor(node);
                    break
                case "WordBoundary":
                    this.visitWordBoundary(node);
                    break
                case "NonWordBoundary":
                    this.visitNonWordBoundary(node);
                    break
                case "Lookahead":
                    this.visitLookahead(node);
                    break
                case "NegativeLookahead":
                    this.visitNegativeLookahead(node);
                    break
                case "Character":
                    this.visitCharacter(node);
                    break
                case "Set":
                    this.visitSet(node);
                    break
                case "Group":
                    this.visitGroup(node);
                    break
                case "GroupBackReference":
                    this.visitGroupBackReference(node);
                    break
                case "Quantifier":
                    this.visitQuantifier(node);
                    break
            }

            this.visitChildren(node);
        };

        BaseRegExpVisitor.prototype.visitPattern = function(node) {};

        BaseRegExpVisitor.prototype.visitFlags = function(node) {};

        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {};

        BaseRegExpVisitor.prototype.visitAlternative = function(node) {};

        // Assertion
        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {};

        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {};

        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {};

        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {};

        BaseRegExpVisitor.prototype.visitLookahead = function(node) {};

        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {};

        // atoms
        BaseRegExpVisitor.prototype.visitCharacter = function(node) {};

        BaseRegExpVisitor.prototype.visitSet = function(node) {};

        BaseRegExpVisitor.prototype.visitGroup = function(node) {};

        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {};

        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {};

        return {
            RegExpParser: RegExpParser,
            BaseRegExpVisitor: BaseRegExpVisitor,
            VERSION: "0.5.0"
        }
    }
);
}(regexpToAst));

var regExpAstCache = {};
var regExpParser = new regexpToAst.exports.RegExpParser();
function getRegExpAst(regExp) {
    var regExpStr = regExp.toString();
    if (regExpAstCache.hasOwnProperty(regExpStr)) {
        return regExpAstCache[regExpStr];
    }
    else {
        var regExpAst = regExpParser.pattern(regExpStr);
        regExpAstCache[regExpStr] = regExpAst;
        return regExpAst;
    }
}
function clearRegExpParserCache() {
    regExpAstCache = {};
}

var __extends$a = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var complementErrorMessage = "Complement Sets are not supported for first char optimization";
var failedOptimizationPrefixMsg = 'Unable to use "first char" lexer optimizations:\n';
function getOptimizedStartCodesIndices(regExp, ensureOptimizations) {
    if (ensureOptimizations === void 0) { ensureOptimizations = false; }
    try {
        var ast = getRegExpAst(regExp);
        var firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);
        return firstChars;
    }
    catch (e) {
        /* istanbul ignore next */
        // Testing this relies on the regexp-to-ast library having a bug... */
        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc
        if (e.message === complementErrorMessage) {
            if (ensureOptimizations) {
                PRINT_WARNING("" + failedOptimizationPrefixMsg +
                    ("\tUnable to optimize: < " + regExp.toString() + " >\n") +
                    "\tComplement Sets cannot be automatically optimized.\n" +
                    "\tThis will disable the lexer's first char optimizations.\n" +
                    "\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.");
            }
        }
        else {
            var msgSuffix = "";
            if (ensureOptimizations) {
                msgSuffix =
                    "\n\tThis will disable the lexer's first char optimizations.\n" +
                        "\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.";
            }
            PRINT_ERROR(failedOptimizationPrefixMsg + "\n" +
                ("\tFailed parsing: < " + regExp.toString() + " >\n") +
                ("\tUsing the regexp-to-ast library version: " + regexpToAst.exports.VERSION + "\n") +
                "\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues" +
                msgSuffix);
        }
    }
    return [];
}
function firstCharOptimizedIndices(ast, result, ignoreCase) {
    switch (ast.type) {
        case "Disjunction":
            for (var i = 0; i < ast.value.length; i++) {
                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);
            }
            break;
        case "Alternative":
            var terms = ast.value;
            for (var i = 0; i < terms.length; i++) {
                var term = terms[i];
                // skip terms that cannot effect the first char results
                switch (term.type) {
                    case "EndAnchor":
                    // A group back reference cannot affect potential starting char.
                    // because if a back reference is the first production than automatically
                    // the group being referenced has had to come BEFORE so its codes have already been added
                    case "GroupBackReference":
                    // assertions do not affect potential starting codes
                    case "Lookahead":
                    case "NegativeLookahead":
                    case "StartAnchor":
                    case "WordBoundary":
                    case "NonWordBoundary":
                        continue;
                }
                var atom = term;
                switch (atom.type) {
                    case "Character":
                        addOptimizedIdxToResult(atom.value, result, ignoreCase);
                        break;
                    case "Set":
                        if (atom.complement === true) {
                            throw Error(complementErrorMessage);
                        }
                        forEach(atom.value, function (code) {
                            if (typeof code === "number") {
                                addOptimizedIdxToResult(code, result, ignoreCase);
                            }
                            else {
                                // range
                                var range = code;
                                // cannot optimize when ignoreCase is
                                if (ignoreCase === true) {
                                    for (var rangeCode = range.from; rangeCode <= range.to; rangeCode++) {
                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);
                                    }
                                }
                                // Optimization (2 orders of magnitude less work for very large ranges)
                                else {
                                    // handle unoptimized values
                                    for (var rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {
                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);
                                    }
                                    // Less common charCode where we optimize for faster init time, by using larger "buckets"
                                    if (range.to >= minOptimizationVal) {
                                        var minUnOptVal = range.from >= minOptimizationVal
                                            ? range.from
                                            : minOptimizationVal;
                                        var maxUnOptVal = range.to;
                                        var minOptIdx = charCodeToOptimizedIndex(minUnOptVal);
                                        var maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);
                                        for (var currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {
                                            result[currOptIdx] = currOptIdx;
                                        }
                                    }
                                }
                            }
                        });
                        break;
                    case "Group":
                        firstCharOptimizedIndices(atom.value, result, ignoreCase);
                        break;
                    /* istanbul ignore next */
                    default:
                        throw Error("Non Exhaustive Match");
                }
                // reached a mandatory production, no more **start** codes can be found on this alternative
                var isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;
                if (
                // A group may be optional due to empty contents /(?:)/
                // or if everything inside it is optional /((a)?)/
                (atom.type === "Group" && isWholeOptional(atom) === false) ||
                    // If this term is not a group it may only be optional if it has an optional quantifier
                    (atom.type !== "Group" && isOptionalQuantifier === false)) {
                    break;
                }
            }
            break;
        /* istanbul ignore next */
        default:
            throw Error("non exhaustive match!");
    }
    // console.log(Object.keys(result).length)
    return values(result);
}
function addOptimizedIdxToResult(code, result, ignoreCase) {
    var optimizedCharIdx = charCodeToOptimizedIndex(code);
    result[optimizedCharIdx] = optimizedCharIdx;
    if (ignoreCase === true) {
        handleIgnoreCase(code, result);
    }
}
function handleIgnoreCase(code, result) {
    var char = String.fromCharCode(code);
    var upperChar = char.toUpperCase();
    /* istanbul ignore else */
    if (upperChar !== char) {
        var optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));
        result[optimizedCharIdx] = optimizedCharIdx;
    }
    else {
        var lowerChar = char.toLowerCase();
        if (lowerChar !== char) {
            var optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));
            result[optimizedCharIdx] = optimizedCharIdx;
        }
    }
}
function findCode(setNode, targetCharCodes) {
    return find(setNode.value, function (codeOrRange) {
        if (typeof codeOrRange === "number") {
            return contains(targetCharCodes, codeOrRange);
        }
        else {
            // range
            var range_1 = codeOrRange;
            return (find(targetCharCodes, function (targetCode) { return range_1.from <= targetCode && targetCode <= range_1.to; }) !== undefined);
        }
    });
}
function isWholeOptional(ast) {
    if (ast.quantifier && ast.quantifier.atLeast === 0) {
        return true;
    }
    if (!ast.value) {
        return false;
    }
    return isArray(ast.value)
        ? every(ast.value, isWholeOptional)
        : isWholeOptional(ast.value);
}
var CharCodeFinder = /** @class */ (function (_super) {
    __extends$a(CharCodeFinder, _super);
    function CharCodeFinder(targetCharCodes) {
        var _this = _super.call(this) || this;
        _this.targetCharCodes = targetCharCodes;
        _this.found = false;
        return _this;
    }
    CharCodeFinder.prototype.visitChildren = function (node) {
        // No need to keep looking...
        if (this.found === true) {
            return;
        }
        // switch lookaheads as they do not actually consume any characters thus
        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.
        switch (node.type) {
            case "Lookahead":
                this.visitLookahead(node);
                return;
            case "NegativeLookahead":
                this.visitNegativeLookahead(node);
                return;
        }
        _super.prototype.visitChildren.call(this, node);
    };
    CharCodeFinder.prototype.visitCharacter = function (node) {
        if (contains(this.targetCharCodes, node.value)) {
            this.found = true;
        }
    };
    CharCodeFinder.prototype.visitSet = function (node) {
        if (node.complement) {
            if (findCode(node, this.targetCharCodes) === undefined) {
                this.found = true;
            }
        }
        else {
            if (findCode(node, this.targetCharCodes) !== undefined) {
                this.found = true;
            }
        }
    };
    return CharCodeFinder;
}(regexpToAst.exports.BaseRegExpVisitor));
function canMatchCharCode(charCodes, pattern) {
    if (pattern instanceof RegExp) {
        var ast = getRegExpAst(pattern);
        var charCodeFinder = new CharCodeFinder(charCodes);
        charCodeFinder.visit(ast);
        return charCodeFinder.found;
    }
    else {
        return (find(pattern, function (char) {
            return contains(charCodes, char.charCodeAt(0));
        }) !== undefined);
    }
}

var __extends$9 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var PATTERN = "PATTERN";
var DEFAULT_MODE = "defaultMode";
var MODES = "modes";
var SUPPORT_STICKY = typeof new RegExp("(?:)").sticky === "boolean";
function analyzeTokenTypes(tokenTypes, options) {
    options = defaults(options, {
        useSticky: SUPPORT_STICKY,
        debug: false,
        safeMode: false,
        positionTracking: "full",
        lineTerminatorCharacters: ["\r", "\n"],
        tracer: function (msg, action) { return action(); }
    });
    var tracer = options.tracer;
    tracer("initCharCodeToOptimizedIndexMap", function () {
        initCharCodeToOptimizedIndexMap();
    });
    var onlyRelevantTypes;
    tracer("Reject Lexer.NA", function () {
        onlyRelevantTypes = reject(tokenTypes, function (currType) {
            return currType[PATTERN] === Lexer$1.NA;
        });
    });
    var hasCustom = false;
    var allTransformedPatterns;
    tracer("Transform Patterns", function () {
        hasCustom = false;
        allTransformedPatterns = map(onlyRelevantTypes, function (currType) {
            var currPattern = currType[PATTERN];
            /* istanbul ignore else */
            if (isRegExp(currPattern)) {
                var regExpSource = currPattern.source;
                if (regExpSource.length === 1 &&
                    // only these regExp meta characters which can appear in a length one regExp
                    regExpSource !== "^" &&
                    regExpSource !== "$" &&
                    regExpSource !== "." &&
                    !currPattern.ignoreCase) {
                    return regExpSource;
                }
                else if (regExpSource.length === 2 &&
                    regExpSource[0] === "\\" &&
                    // not a meta character
                    !contains([
                        "d",
                        "D",
                        "s",
                        "S",
                        "t",
                        "r",
                        "n",
                        "t",
                        "0",
                        "c",
                        "b",
                        "B",
                        "f",
                        "v",
                        "w",
                        "W"
                    ], regExpSource[1])) {
                    // escaped meta Characters: /\+/ /\[/
                    // or redundant escaping: /\a/
                    // without the escaping "\"
                    return regExpSource[1];
                }
                else {
                    return options.useSticky
                        ? addStickyFlag(currPattern)
                        : addStartOfInput(currPattern);
                }
            }
            else if (isFunction(currPattern)) {
                hasCustom = true;
                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object
                return { exec: currPattern };
            }
            else if (has(currPattern, "exec")) {
                hasCustom = true;
                // ICustomPattern
                return currPattern;
            }
            else if (typeof currPattern === "string") {
                if (currPattern.length === 1) {
                    return currPattern;
                }
                else {
                    var escapedRegExpString = currPattern.replace(/[\\^$.*+?()[\]{}|]/g, "\\$&");
                    var wrappedRegExp = new RegExp(escapedRegExpString);
                    return options.useSticky
                        ? addStickyFlag(wrappedRegExp)
                        : addStartOfInput(wrappedRegExp);
                }
            }
            else {
                throw Error("non exhaustive match");
            }
        });
    });
    var patternIdxToType;
    var patternIdxToGroup;
    var patternIdxToLongerAltIdx;
    var patternIdxToPushMode;
    var patternIdxToPopMode;
    tracer("misc mapping", function () {
        patternIdxToType = map(onlyRelevantTypes, function (currType) { return currType.tokenTypeIdx; });
        patternIdxToGroup = map(onlyRelevantTypes, function (clazz) {
            var groupName = clazz.GROUP;
            /* istanbul ignore next */
            if (groupName === Lexer$1.SKIPPED) {
                return undefined;
            }
            else if (isString(groupName)) {
                return groupName;
            }
            else if (isUndefined(groupName)) {
                return false;
            }
            else {
                throw Error("non exhaustive match");
            }
        });
        patternIdxToLongerAltIdx = map(onlyRelevantTypes, function (clazz) {
            var longerAltType = clazz.LONGER_ALT;
            if (longerAltType) {
                var longerAltIdx = indexOf(onlyRelevantTypes, longerAltType);
                return longerAltIdx;
            }
        });
        patternIdxToPushMode = map(onlyRelevantTypes, function (clazz) { return clazz.PUSH_MODE; });
        patternIdxToPopMode = map(onlyRelevantTypes, function (clazz) {
            return has(clazz, "POP_MODE");
        });
    });
    var patternIdxToCanLineTerminator;
    tracer("Line Terminator Handling", function () {
        var lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);
        patternIdxToCanLineTerminator = map(onlyRelevantTypes, function (tokType) { return false; });
        if (options.positionTracking !== "onlyOffset") {
            patternIdxToCanLineTerminator = map(onlyRelevantTypes, function (tokType) {
                if (has(tokType, "LINE_BREAKS")) {
                    return tokType.LINE_BREAKS;
                }
                else {
                    if (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false) {
                        return canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);
                    }
                }
            });
        }
    });
    var patternIdxToIsCustom;
    var patternIdxToShort;
    var emptyGroups;
    var patternIdxToConfig;
    tracer("Misc Mapping #2", function () {
        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);
        patternIdxToShort = map(allTransformedPatterns, isShortPattern);
        emptyGroups = reduce(onlyRelevantTypes, function (acc, clazz) {
            var groupName = clazz.GROUP;
            if (isString(groupName) && !(groupName === Lexer$1.SKIPPED)) {
                acc[groupName] = [];
            }
            return acc;
        }, {});
        patternIdxToConfig = map(allTransformedPatterns, function (x, idx) {
            return {
                pattern: allTransformedPatterns[idx],
                longerAlt: patternIdxToLongerAltIdx[idx],
                canLineTerminator: patternIdxToCanLineTerminator[idx],
                isCustom: patternIdxToIsCustom[idx],
                short: patternIdxToShort[idx],
                group: patternIdxToGroup[idx],
                push: patternIdxToPushMode[idx],
                pop: patternIdxToPopMode[idx],
                tokenTypeIdx: patternIdxToType[idx],
                tokenType: onlyRelevantTypes[idx]
            };
        });
    });
    var canBeOptimized = true;
    var charCodeToPatternIdxToConfig = [];
    if (!options.safeMode) {
        tracer("First Char Optimization", function () {
            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, function (result, currTokType, idx) {
                if (typeof currTokType.PATTERN === "string") {
                    var charCode = currTokType.PATTERN.charCodeAt(0);
                    var optimizedIdx = charCodeToOptimizedIndex(charCode);
                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);
                }
                else if (isArray(currTokType.START_CHARS_HINT)) {
                    var lastOptimizedIdx_1;
                    forEach(currTokType.START_CHARS_HINT, function (charOrInt) {
                        var charCode = typeof charOrInt === "string"
                            ? charOrInt.charCodeAt(0)
                            : charOrInt;
                        var currOptimizedIdx = charCodeToOptimizedIndex(charCode);
                        // Avoid adding the config multiple times
                        /* istanbul ignore else */
                        // - Difficult to check this scenario effects as it is only a performance
                        //   optimization that does not change correctness
                        if (lastOptimizedIdx_1 !== currOptimizedIdx) {
                            lastOptimizedIdx_1 = currOptimizedIdx;
                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);
                        }
                    });
                }
                else if (isRegExp(currTokType.PATTERN)) {
                    if (currTokType.PATTERN.unicode) {
                        canBeOptimized = false;
                        if (options.ensureOptimizations) {
                            PRINT_ERROR("" + failedOptimizationPrefixMsg +
                                ("\tUnable to analyze < " + currTokType.PATTERN.toString() + " > pattern.\n") +
                                "\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\n" +
                                "\tThis will disable the lexer's first char optimizations.\n" +
                                "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE");
                        }
                    }
                    else {
                        var optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);
                        /* istanbul ignore if */
                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library
                        // the first should be a different validation and the second cannot be tested.
                        if (isEmpty(optimizedCodes)) {
                            // we cannot understand what codes may start possible matches
                            // The optimization correctness requires knowing start codes for ALL patterns.
                            // Not actually sure this is an error, no debug message
                            canBeOptimized = false;
                        }
                        forEach(optimizedCodes, function (code) {
                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);
                        });
                    }
                }
                else {
                    if (options.ensureOptimizations) {
                        PRINT_ERROR("" + failedOptimizationPrefixMsg +
                            ("\tTokenType: <" + currTokType.name + "> is using a custom token pattern without providing <start_chars_hint> parameter.\n") +
                            "\tThis will disable the lexer's first char optimizations.\n" +
                            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE");
                    }
                    canBeOptimized = false;
                }
                return result;
            }, []);
        });
    }
    tracer("ArrayPacking", function () {
        charCodeToPatternIdxToConfig = packArray(charCodeToPatternIdxToConfig);
    });
    return {
        emptyGroups: emptyGroups,
        patternIdxToConfig: patternIdxToConfig,
        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,
        hasCustom: hasCustom,
        canBeOptimized: canBeOptimized
    };
}
function validatePatterns(tokenTypes, validModesNames) {
    var errors = [];
    var missingResult = findMissingPatterns(tokenTypes);
    errors = errors.concat(missingResult.errors);
    var invalidResult = findInvalidPatterns(missingResult.valid);
    var validTokenTypes = invalidResult.valid;
    errors = errors.concat(invalidResult.errors);
    errors = errors.concat(validateRegExpPattern(validTokenTypes));
    errors = errors.concat(findInvalidGroupType(validTokenTypes));
    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));
    errors = errors.concat(findUnreachablePatterns(validTokenTypes));
    return errors;
}
function validateRegExpPattern(tokenTypes) {
    var errors = [];
    var withRegExpPatterns = filter(tokenTypes, function (currTokType) {
        return isRegExp(currTokType[PATTERN]);
    });
    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));
    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));
    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));
    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));
    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));
    return errors;
}
function findMissingPatterns(tokenTypes) {
    var tokenTypesWithMissingPattern = filter(tokenTypes, function (currType) {
        return !has(currType, PATTERN);
    });
    var errors = map(tokenTypesWithMissingPattern, function (currType) {
        return {
            message: "Token Type: ->" +
                currType.name +
                "<- missing static 'PATTERN' property",
            type: LexerDefinitionErrorType.MISSING_PATTERN,
            tokenTypes: [currType]
        };
    });
    var valid = difference(tokenTypes, tokenTypesWithMissingPattern);
    return { errors: errors, valid: valid };
}
function findInvalidPatterns(tokenTypes) {
    var tokenTypesWithInvalidPattern = filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return (!isRegExp(pattern) &&
            !isFunction(pattern) &&
            !has(pattern, "exec") &&
            !isString(pattern));
    });
    var errors = map(tokenTypesWithInvalidPattern, function (currType) {
        return {
            message: "Token Type: ->" +
                currType.name +
                "<- static 'PATTERN' can only be a RegExp, a" +
                " Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",
            type: LexerDefinitionErrorType.INVALID_PATTERN,
            tokenTypes: [currType]
        };
    });
    var valid = difference(tokenTypes, tokenTypesWithInvalidPattern);
    return { errors: errors, valid: valid };
}
var end_of_input = /[^\\][\$]/;
function findEndOfInputAnchor(tokenTypes) {
    var EndAnchorFinder = /** @class */ (function (_super) {
        __extends$9(EndAnchorFinder, _super);
        function EndAnchorFinder() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.found = false;
            return _this;
        }
        EndAnchorFinder.prototype.visitEndAnchor = function (node) {
            this.found = true;
        };
        return EndAnchorFinder;
    }(regexpToAst.exports.BaseRegExpVisitor));
    var invalidRegex = filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        try {
            var regexpAst = getRegExpAst(pattern);
            var endAnchorVisitor = new EndAnchorFinder();
            endAnchorVisitor.visit(regexpAst);
            return endAnchorVisitor.found;
        }
        catch (e) {
            // old behavior in case of runtime exceptions with regexp-to-ast.
            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/
            return end_of_input.test(pattern.source);
        }
    });
    var errors = map(invalidRegex, function (currType) {
        return {
            message: "Unexpected RegExp Anchor Error:\n" +
                "\tToken Type: ->" +
                currType.name +
                "<- static 'PATTERN' cannot contain end of input anchor '$'\n" +
                "\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS" +
                "\tfor details.",
            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
function findEmptyMatchRegExps(tokenTypes) {
    var matchesEmptyString = filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return pattern.test("");
    });
    var errors = map(matchesEmptyString, function (currType) {
        return {
            message: "Token Type: ->" +
                currType.name +
                "<- static 'PATTERN' must not match an empty string",
            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,
            tokenTypes: [currType]
        };
    });
    return errors;
}
var start_of_input = /[^\\[][\^]|^\^/;
function findStartOfInputAnchor(tokenTypes) {
    var StartAnchorFinder = /** @class */ (function (_super) {
        __extends$9(StartAnchorFinder, _super);
        function StartAnchorFinder() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.found = false;
            return _this;
        }
        StartAnchorFinder.prototype.visitStartAnchor = function (node) {
            this.found = true;
        };
        return StartAnchorFinder;
    }(regexpToAst.exports.BaseRegExpVisitor));
    var invalidRegex = filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        try {
            var regexpAst = getRegExpAst(pattern);
            var startAnchorVisitor = new StartAnchorFinder();
            startAnchorVisitor.visit(regexpAst);
            return startAnchorVisitor.found;
        }
        catch (e) {
            // old behavior in case of runtime exceptions with regexp-to-ast.
            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/
            return start_of_input.test(pattern.source);
        }
    });
    var errors = map(invalidRegex, function (currType) {
        return {
            message: "Unexpected RegExp Anchor Error:\n" +
                "\tToken Type: ->" +
                currType.name +
                "<- static 'PATTERN' cannot contain start of input anchor '^'\n" +
                "\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS" +
                "\tfor details.",
            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
function findUnsupportedFlags(tokenTypes) {
    var invalidFlags = filter(tokenTypes, function (currType) {
        var pattern = currType[PATTERN];
        return pattern instanceof RegExp && (pattern.multiline || pattern.global);
    });
    var errors = map(invalidFlags, function (currType) {
        return {
            message: "Token Type: ->" +
                currType.name +
                "<- static 'PATTERN' may NOT contain global('g') or multiline('m')",
            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
// This can only test for identical duplicate RegExps, not semantically equivalent ones.
function findDuplicatePatterns(tokenTypes) {
    var found = [];
    var identicalPatterns = map(tokenTypes, function (outerType) {
        return reduce(tokenTypes, function (result, innerType) {
            if (outerType.PATTERN.source === innerType.PATTERN.source &&
                !contains(found, innerType) &&
                innerType.PATTERN !== Lexer$1.NA) {
                // this avoids duplicates in the result, each Token Type may only appear in one "set"
                // in essence we are creating Equivalence classes on equality relation.
                found.push(innerType);
                result.push(innerType);
                return result;
            }
            return result;
        }, []);
    });
    identicalPatterns = compact(identicalPatterns);
    var duplicatePatterns = filter(identicalPatterns, function (currIdenticalSet) {
        return currIdenticalSet.length > 1;
    });
    var errors = map(duplicatePatterns, function (setOfIdentical) {
        var tokenTypeNames = map(setOfIdentical, function (currType) {
            return currType.name;
        });
        var dupPatternSrc = first$1(setOfIdentical).PATTERN;
        return {
            message: "The same RegExp pattern ->" + dupPatternSrc + "<-" +
                ("has been used in all of the following Token Types: " + tokenTypeNames.join(", ") + " <-"),
            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,
            tokenTypes: setOfIdentical
        };
    });
    return errors;
}
function findInvalidGroupType(tokenTypes) {
    var invalidTypes = filter(tokenTypes, function (clazz) {
        if (!has(clazz, "GROUP")) {
            return false;
        }
        var group = clazz.GROUP;
        return group !== Lexer$1.SKIPPED && group !== Lexer$1.NA && !isString(group);
    });
    var errors = map(invalidTypes, function (currType) {
        return {
            message: "Token Type: ->" +
                currType.name +
                "<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",
            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,
            tokenTypes: [currType]
        };
    });
    return errors;
}
function findModesThatDoNotExist(tokenTypes, validModes) {
    var invalidModes = filter(tokenTypes, function (clazz) {
        return (clazz.PUSH_MODE !== undefined && !contains(validModes, clazz.PUSH_MODE));
    });
    var errors = map(invalidModes, function (tokType) {
        var msg = "Token Type: ->" + tokType.name + "<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->" + tokType.PUSH_MODE + "<-" +
            "which does not exist";
        return {
            message: msg,
            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,
            tokenTypes: [tokType]
        };
    });
    return errors;
}
function findUnreachablePatterns(tokenTypes) {
    var errors = [];
    var canBeTested = reduce(tokenTypes, function (result, tokType, idx) {
        var pattern = tokType.PATTERN;
        if (pattern === Lexer$1.NA) {
            return result;
        }
        // a more comprehensive validation for all forms of regExps would require
        // deeper regExp analysis capabilities
        if (isString(pattern)) {
            result.push({ str: pattern, idx: idx, tokenType: tokType });
        }
        else if (isRegExp(pattern) && noMetaChar(pattern)) {
            result.push({ str: pattern.source, idx: idx, tokenType: tokType });
        }
        return result;
    }, []);
    forEach(tokenTypes, function (tokType, testIdx) {
        forEach(canBeTested, function (_a) {
            var str = _a.str, idx = _a.idx, tokenType = _a.tokenType;
            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {
                var msg = "Token: ->" + tokenType.name + "<- can never be matched.\n" +
                    ("Because it appears AFTER the Token Type ->" + tokType.name + "<-") +
                    "in the lexer's definition.\n" +
                    "See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE";
                errors.push({
                    message: msg,
                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,
                    tokenTypes: [tokType, tokenType]
                });
            }
        });
    });
    return errors;
}
function testTokenType(str, pattern) {
    /* istanbul ignore else */
    if (isRegExp(pattern)) {
        var regExpArray = pattern.exec(str);
        return regExpArray !== null && regExpArray.index === 0;
    }
    else if (isFunction(pattern)) {
        // maintain the API of custom patterns
        return pattern(str, 0, [], {});
    }
    else if (has(pattern, "exec")) {
        // maintain the API of custom patterns
        return pattern.exec(str, 0, [], {});
    }
    else if (typeof pattern === "string") {
        return pattern === str;
    }
    else {
        throw Error("non exhaustive match");
    }
}
function noMetaChar(regExp) {
    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
    var metaChars = [
        ".",
        "\\",
        "[",
        "]",
        "|",
        "^",
        "$",
        "(",
        ")",
        "?",
        "*",
        "+",
        "{"
    ];
    return (find(metaChars, function (char) { return regExp.source.indexOf(char) !== -1; }) === undefined);
}
function addStartOfInput(pattern) {
    var flags = pattern.ignoreCase ? "i" : "";
    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.
    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)
    return new RegExp("^(?:" + pattern.source + ")", flags);
}
function addStickyFlag(pattern) {
    var flags = pattern.ignoreCase ? "iy" : "y";
    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.
    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)
    return new RegExp("" + pattern.source, flags);
}
function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {
    var errors = [];
    // some run time checks to help the end users.
    if (!has(lexerDefinition, DEFAULT_MODE)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized without a <" +
                DEFAULT_MODE +
                "> property in its definition\n",
            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE
        });
    }
    if (!has(lexerDefinition, MODES)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized without a <" +
                MODES +
                "> property in its definition\n",
            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY
        });
    }
    if (has(lexerDefinition, MODES) &&
        has(lexerDefinition, DEFAULT_MODE) &&
        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {
        errors.push({
            message: "A MultiMode Lexer cannot be initialized with a " + DEFAULT_MODE + ": <" + lexerDefinition.defaultMode + ">" +
                "which does not exist\n",
            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST
        });
    }
    if (has(lexerDefinition, MODES)) {
        forEach(lexerDefinition.modes, function (currModeValue, currModeName) {
            forEach(currModeValue, function (currTokType, currIdx) {
                if (isUndefined(currTokType)) {
                    errors.push({
                        message: "A Lexer cannot be initialized using an undefined Token Type. Mode:" +
                            ("<" + currModeName + "> at index: <" + currIdx + ">\n"),
                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED
                    });
                }
            });
        });
    }
    return errors;
}
function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {
    var warnings = [];
    var hasAnyLineBreak = false;
    var allTokenTypes = compact(flatten(mapValues(lexerDefinition.modes, function (tokTypes) { return tokTypes; })));
    var concreteTokenTypes = reject(allTokenTypes, function (currType) { return currType[PATTERN] === Lexer$1.NA; });
    var terminatorCharCodes = getCharCodes(lineTerminatorCharacters);
    if (trackLines) {
        forEach(concreteTokenTypes, function (tokType) {
            var currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);
            if (currIssue !== false) {
                var message = buildLineBreakIssueMessage(tokType, currIssue);
                var warningDescriptor = {
                    message: message,
                    type: currIssue.issue,
                    tokenType: tokType
                };
                warnings.push(warningDescriptor);
            }
            else {
                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.
                if (has(tokType, "LINE_BREAKS")) {
                    if (tokType.LINE_BREAKS === true) {
                        hasAnyLineBreak = true;
                    }
                }
                else {
                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {
                        hasAnyLineBreak = true;
                    }
                }
            }
        });
    }
    if (trackLines && !hasAnyLineBreak) {
        warnings.push({
            message: "Warning: No LINE_BREAKS Found.\n" +
                "\tThis Lexer has been defined to track line and column information,\n" +
                "\tBut none of the Token Types can be identified as matching a line terminator.\n" +
                "\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \n" +
                "\tfor details.",
            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS
        });
    }
    return warnings;
}
function cloneEmptyGroups(emptyGroups) {
    var clonedResult = {};
    var groupKeys = keys(emptyGroups);
    forEach(groupKeys, function (currKey) {
        var currGroupValue = emptyGroups[currKey];
        /* istanbul ignore else */
        if (isArray(currGroupValue)) {
            clonedResult[currKey] = [];
        }
        else {
            throw Error("non exhaustive match");
        }
    });
    return clonedResult;
}
// TODO: refactor to avoid duplication
function isCustomPattern(tokenType) {
    var pattern = tokenType.PATTERN;
    /* istanbul ignore else */
    if (isRegExp(pattern)) {
        return false;
    }
    else if (isFunction(pattern)) {
        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object
        return true;
    }
    else if (has(pattern, "exec")) {
        // ICustomPattern
        return true;
    }
    else if (isString(pattern)) {
        return false;
    }
    else {
        throw Error("non exhaustive match");
    }
}
function isShortPattern(pattern) {
    if (isString(pattern) && pattern.length === 1) {
        return pattern.charCodeAt(0);
    }
    else {
        return false;
    }
}
/**
 * Faster than using a RegExp for default newline detection during lexing.
 */
var LineTerminatorOptimizedTester = {
    // implements /\n|\r\n?/g.test
    test: function (text) {
        var len = text.length;
        for (var i = this.lastIndex; i < len; i++) {
            var c = text.charCodeAt(i);
            if (c === 10) {
                this.lastIndex = i + 1;
                return true;
            }
            else if (c === 13) {
                if (text.charCodeAt(i + 1) === 10) {
                    this.lastIndex = i + 2;
                }
                else {
                    this.lastIndex = i + 1;
                }
                return true;
            }
        }
        return false;
    },
    lastIndex: 0
};
function checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {
    if (has(tokType, "LINE_BREAKS")) {
        // if the user explicitly declared the line_breaks option we will respect their choice
        // and assume it is correct.
        return false;
    }
    else {
        /* istanbul ignore else */
        if (isRegExp(tokType.PATTERN)) {
            try {
                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);
            }
            catch (e) {
                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */
                return {
                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,
                    errMsg: e.message
                };
            }
            return false;
        }
        else if (isString(tokType.PATTERN)) {
            // string literal patterns can always be analyzed to detect line terminator usage
            return false;
        }
        else if (isCustomPattern(tokType)) {
            // custom token types
            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };
        }
        else {
            throw Error("non exhaustive match");
        }
    }
}
function buildLineBreakIssueMessage(tokType, details) {
    /* istanbul ignore else */
    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {
        return ("Warning: unable to identify line terminator usage in pattern.\n" +
            ("\tThe problem is in the <" + tokType.name + "> Token Type\n") +
            ("\t Root cause: " + details.errMsg + ".\n") +
            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR");
    }
    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {
        return ("Warning: A Custom Token Pattern should specify the <line_breaks> option.\n" +
            ("\tThe problem is in the <" + tokType.name + "> Token Type\n") +
            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK");
    }
    else {
        throw Error("non exhaustive match");
    }
}
function getCharCodes(charsOrCodes) {
    var charCodes = map(charsOrCodes, function (numOrString) {
        if (isString(numOrString) && numOrString.length > 0) {
            return numOrString.charCodeAt(0);
        }
        else {
            return numOrString;
        }
    });
    return charCodes;
}
function addToMapOfArrays(map, key, value) {
    if (map[key] === undefined) {
        map[key] = [value];
    }
    else {
        map[key].push(value);
    }
}
var minOptimizationVal = 256;
/**
 * We ae mapping charCode above ASCI (256) into buckets each in the size of 256.
 * This is because ASCI are the most common start chars so each one of those will get its own
 * possible token configs vector.
 *
 * Tokens starting with charCodes "above" ASCI are uncommon, so we can "afford"
 * to place these into buckets of possible token configs, What we gain from
 * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'
 * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).
 * Our 'charCodeToPatternIdxToConfig' max size will now be:
 * 256 + (2^16 / 2^8) - 1 === 511
 *
 * note the hack for fast division integer part extraction
 * See: https://stackoverflow.com/a/4228528
 */
function charCodeToOptimizedIndex(charCode) {
    return charCode < minOptimizationVal
        ? charCode
        : charCodeToOptimizedIdxMap[charCode];
}
/**
 * This is a compromise between cold start / hot running performance
 * Creating this array takes ~3ms on a modern machine,
 * But if we perform the computation at runtime as needed the CSS Lexer benchmark
 * performance degrades by ~10%
 *
 * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.
 */
var charCodeToOptimizedIdxMap = [];
function initCharCodeToOptimizedIndexMap() {
    if (isEmpty(charCodeToOptimizedIdxMap)) {
        charCodeToOptimizedIdxMap = new Array(65536);
        for (var i = 0; i < 65536; i++) {
            /* tslint:disable */
            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;
            /* tslint:enable */
        }
    }
}

function tokenStructuredMatcher(tokInstance, tokConstructor) {
    var instanceType = tokInstance.tokenTypeIdx;
    if (instanceType === tokConstructor.tokenTypeIdx) {
        return true;
    }
    else {
        return (tokConstructor.isParent === true &&
            tokConstructor.categoryMatchesMap[instanceType] === true);
    }
}
// Optimized tokenMatcher in case our grammar does not use token categories
// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead
function tokenStructuredMatcherNoCategories(token, tokType) {
    return token.tokenTypeIdx === tokType.tokenTypeIdx;
}
var tokenShortNameIdx = 1;
var tokenIdxToClass = {};
function augmentTokenTypes(tokenTypes) {
    // collect the parent Token Types as well.
    var tokenTypesAndParents = expandCategories(tokenTypes);
    // add required tokenType and categoryMatches properties
    assignTokenDefaultProps(tokenTypesAndParents);
    // fill up the categoryMatches
    assignCategoriesMapProp(tokenTypesAndParents);
    assignCategoriesTokensProp(tokenTypesAndParents);
    forEach(tokenTypesAndParents, function (tokType) {
        tokType.isParent = tokType.categoryMatches.length > 0;
    });
}
function expandCategories(tokenTypes) {
    var result = cloneArr(tokenTypes);
    var categories = tokenTypes;
    var searching = true;
    while (searching) {
        categories = compact(flatten(map(categories, function (currTokType) { return currTokType.CATEGORIES; })));
        var newCategories = difference(categories, result);
        result = result.concat(newCategories);
        if (isEmpty(newCategories)) {
            searching = false;
        }
        else {
            categories = newCategories;
        }
    }
    return result;
}
function assignTokenDefaultProps(tokenTypes) {
    forEach(tokenTypes, function (currTokType) {
        if (!hasShortKeyProperty(currTokType)) {
            tokenIdxToClass[tokenShortNameIdx] = currTokType;
            currTokType.tokenTypeIdx = tokenShortNameIdx++;
        }
        // CATEGORIES? : TokenType | TokenType[]
        if (hasCategoriesProperty(currTokType) &&
            !isArray(currTokType.CATEGORIES)
        // &&
        // !isUndefined(currTokType.CATEGORIES.PATTERN)
        ) {
            currTokType.CATEGORIES = [currTokType.CATEGORIES];
        }
        if (!hasCategoriesProperty(currTokType)) {
            currTokType.CATEGORIES = [];
        }
        if (!hasExtendingTokensTypesProperty(currTokType)) {
            currTokType.categoryMatches = [];
        }
        if (!hasExtendingTokensTypesMapProperty(currTokType)) {
            currTokType.categoryMatchesMap = {};
        }
    });
}
function assignCategoriesTokensProp(tokenTypes) {
    forEach(tokenTypes, function (currTokType) {
        // avoid duplications
        currTokType.categoryMatches = [];
        forEach(currTokType.categoryMatchesMap, function (val, key) {
            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);
        });
    });
}
function assignCategoriesMapProp(tokenTypes) {
    forEach(tokenTypes, function (currTokType) {
        singleAssignCategoriesToksMap([], currTokType);
    });
}
function singleAssignCategoriesToksMap(path, nextNode) {
    forEach(path, function (pathNode) {
        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;
    });
    forEach(nextNode.CATEGORIES, function (nextCategory) {
        var newPath = path.concat(nextNode);
        // avoids infinite loops due to cyclic categories.
        if (!contains(newPath, nextCategory)) {
            singleAssignCategoriesToksMap(newPath, nextCategory);
        }
    });
}
function hasShortKeyProperty(tokType) {
    return has(tokType, "tokenTypeIdx");
}
function hasCategoriesProperty(tokType) {
    return has(tokType, "CATEGORIES");
}
function hasExtendingTokensTypesProperty(tokType) {
    return has(tokType, "categoryMatches");
}
function hasExtendingTokensTypesMapProperty(tokType) {
    return has(tokType, "categoryMatchesMap");
}
function isTokenType(tokType) {
    return has(tokType, "tokenTypeIdx");
}

var defaultLexerErrorProvider = {
    buildUnableToPopLexerModeMessage: function (token) {
        return "Unable to pop Lexer Mode after encountering Token ->" + token.image + "<- The Mode Stack is empty";
    },
    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {
        return ("unexpected character: ->" + fullText.charAt(startOffset) + "<- at offset: " + startOffset + "," + (" skipped " + length + " characters."));
    }
};

var LexerDefinitionErrorType;
(function (LexerDefinitionErrorType) {
    LexerDefinitionErrorType[LexerDefinitionErrorType["MISSING_PATTERN"] = 0] = "MISSING_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["INVALID_PATTERN"] = 1] = "INVALID_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["EOI_ANCHOR_FOUND"] = 2] = "EOI_ANCHOR_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["UNSUPPORTED_FLAGS_FOUND"] = 3] = "UNSUPPORTED_FLAGS_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["DUPLICATE_PATTERNS_FOUND"] = 4] = "DUPLICATE_PATTERNS_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["INVALID_GROUP_TYPE_FOUND"] = 5] = "INVALID_GROUP_TYPE_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["PUSH_MODE_DOES_NOT_EXIST"] = 6] = "PUSH_MODE_DOES_NOT_EXIST";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE"] = 7] = "MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY"] = 8] = "MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY";
    LexerDefinitionErrorType[LexerDefinitionErrorType["MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST"] = 9] = "MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST";
    LexerDefinitionErrorType[LexerDefinitionErrorType["LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED"] = 10] = "LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED";
    LexerDefinitionErrorType[LexerDefinitionErrorType["SOI_ANCHOR_FOUND"] = 11] = "SOI_ANCHOR_FOUND";
    LexerDefinitionErrorType[LexerDefinitionErrorType["EMPTY_MATCH_PATTERN"] = 12] = "EMPTY_MATCH_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["NO_LINE_BREAKS_FLAGS"] = 13] = "NO_LINE_BREAKS_FLAGS";
    LexerDefinitionErrorType[LexerDefinitionErrorType["UNREACHABLE_PATTERN"] = 14] = "UNREACHABLE_PATTERN";
    LexerDefinitionErrorType[LexerDefinitionErrorType["IDENTIFY_TERMINATOR"] = 15] = "IDENTIFY_TERMINATOR";
    LexerDefinitionErrorType[LexerDefinitionErrorType["CUSTOM_LINE_BREAK"] = 16] = "CUSTOM_LINE_BREAK";
})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));
var DEFAULT_LEXER_CONFIG = {
    deferDefinitionErrorsHandling: false,
    positionTracking: "full",
    lineTerminatorsPattern: /\n|\r\n?/g,
    lineTerminatorCharacters: ["\n", "\r"],
    ensureOptimizations: false,
    safeMode: false,
    errorMessageProvider: defaultLexerErrorProvider,
    traceInitPerf: false,
    skipValidations: false
};
Object.freeze(DEFAULT_LEXER_CONFIG);
var Lexer$1 = /** @class */ (function () {
    function Lexer(lexerDefinition, config) {
        var _this = this;
        if (config === void 0) { config = DEFAULT_LEXER_CONFIG; }
        this.lexerDefinition = lexerDefinition;
        this.lexerDefinitionErrors = [];
        this.lexerDefinitionWarning = [];
        this.patternIdxToConfig = {};
        this.charCodeToPatternIdxToConfig = {};
        this.modes = [];
        this.emptyGroups = {};
        this.config = undefined;
        this.trackStartLines = true;
        this.trackEndLines = true;
        this.hasCustom = false;
        this.canModeBeOptimized = {};
        if (typeof config === "boolean") {
            throw Error("The second argument to the Lexer constructor is now an ILexerConfig Object.\n" +
                "a boolean 2nd argument is no longer supported");
        }
        // todo: defaults func?
        this.config = merge(DEFAULT_LEXER_CONFIG, config);
        var traceInitVal = this.config.traceInitPerf;
        if (traceInitVal === true) {
            this.traceInitMaxIdent = Infinity;
            this.traceInitPerf = true;
        }
        else if (typeof traceInitVal === "number") {
            this.traceInitMaxIdent = traceInitVal;
            this.traceInitPerf = true;
        }
        this.traceInitIndent = -1;
        this.TRACE_INIT("Lexer Constructor", function () {
            var actualDefinition;
            var hasOnlySingleMode = true;
            _this.TRACE_INIT("Lexer Config handling", function () {
                if (_this.config.lineTerminatorsPattern ===
                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {
                    // optimized built-in implementation for the defaults definition of lineTerminators
                    _this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;
                }
                else {
                    if (_this.config.lineTerminatorCharacters ===
                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {
                        throw Error("Error: Missing <lineTerminatorCharacters> property on the Lexer config.\n" +
                            "\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS");
                    }
                }
                if (config.safeMode && config.ensureOptimizations) {
                    throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');
                }
                _this.trackStartLines = /full|onlyStart/i.test(_this.config.positionTracking);
                _this.trackEndLines = /full/i.test(_this.config.positionTracking);
                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.
                if (isArray(lexerDefinition)) {
                    actualDefinition = { modes: {} };
                    actualDefinition.modes[DEFAULT_MODE] = cloneArr(lexerDefinition);
                    actualDefinition[DEFAULT_MODE] = DEFAULT_MODE;
                }
                else {
                    // no conversion needed, input should already be a IMultiModeLexerDefinition
                    hasOnlySingleMode = false;
                    actualDefinition = cloneObj(lexerDefinition);
                }
            });
            if (_this.config.skipValidations === false) {
                _this.TRACE_INIT("performRuntimeChecks", function () {
                    _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, _this.trackStartLines, _this.config.lineTerminatorCharacters));
                });
                _this.TRACE_INIT("performWarningRuntimeChecks", function () {
                    _this.lexerDefinitionWarning = _this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, _this.trackStartLines, _this.config.lineTerminatorCharacters));
                });
            }
            // for extra robustness to avoid throwing an none informative error message
            actualDefinition.modes = actualDefinition.modes
                ? actualDefinition.modes
                : {};
            // an error of undefined TokenTypes will be detected in "performRuntimeChecks" above.
            // this transformation is to increase robustness in the case of partially invalid lexer definition.
            forEach(actualDefinition.modes, function (currModeValue, currModeName) {
                actualDefinition.modes[currModeName] = reject(currModeValue, function (currTokType) { return isUndefined(currTokType); });
            });
            var allModeNames = keys(actualDefinition.modes);
            forEach(actualDefinition.modes, function (currModDef, currModName) {
                _this.TRACE_INIT("Mode: <" + currModName + "> processing", function () {
                    _this.modes.push(currModName);
                    if (_this.config.skipValidations === false) {
                        _this.TRACE_INIT("validatePatterns", function () {
                            _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));
                        });
                    }
                    // If definition errors were encountered, the analysis phase may fail unexpectedly/
                    // Considering a lexer with definition errors may never be used, there is no point
                    // to performing the analysis anyhow...
                    if (isEmpty(_this.lexerDefinitionErrors)) {
                        augmentTokenTypes(currModDef);
                        var currAnalyzeResult_1;
                        _this.TRACE_INIT("analyzeTokenTypes", function () {
                            currAnalyzeResult_1 = analyzeTokenTypes(currModDef, {
                                lineTerminatorCharacters: _this.config
                                    .lineTerminatorCharacters,
                                positionTracking: config.positionTracking,
                                ensureOptimizations: config.ensureOptimizations,
                                safeMode: config.safeMode,
                                tracer: _this.TRACE_INIT.bind(_this)
                            });
                        });
                        _this.patternIdxToConfig[currModName] =
                            currAnalyzeResult_1.patternIdxToConfig;
                        _this.charCodeToPatternIdxToConfig[currModName] =
                            currAnalyzeResult_1.charCodeToPatternIdxToConfig;
                        _this.emptyGroups = merge(_this.emptyGroups, currAnalyzeResult_1.emptyGroups);
                        _this.hasCustom = currAnalyzeResult_1.hasCustom || _this.hasCustom;
                        _this.canModeBeOptimized[currModName] =
                            currAnalyzeResult_1.canBeOptimized;
                    }
                });
            });
            _this.defaultMode = actualDefinition.defaultMode;
            if (!isEmpty(_this.lexerDefinitionErrors) &&
                !_this.config.deferDefinitionErrorsHandling) {
                var allErrMessages = map(_this.lexerDefinitionErrors, function (error) {
                    return error.message;
                });
                var allErrMessagesString = allErrMessages.join("-----------------------\n");
                throw new Error("Errors detected in definition of Lexer:\n" + allErrMessagesString);
            }
            // Only print warning if there are no errors, This will avoid pl
            forEach(_this.lexerDefinitionWarning, function (warningDescriptor) {
                PRINT_WARNING(warningDescriptor.message);
            });
            _this.TRACE_INIT("Choosing sub-methods implementations", function () {
                // Choose the relevant internal implementations for this specific parser.
                // These implementations should be in-lined by the JavaScript engine
                // to provide optimal performance in each scenario.
                if (SUPPORT_STICKY) {
                    _this.chopInput = IDENTITY;
                    _this.match = _this.matchWithTest;
                }
                else {
                    _this.updateLastIndex = NOOP;
                    _this.match = _this.matchWithExec;
                }
                if (hasOnlySingleMode) {
                    _this.handleModes = NOOP;
                }
                if (_this.trackStartLines === false) {
                    _this.computeNewColumn = IDENTITY;
                }
                if (_this.trackEndLines === false) {
                    _this.updateTokenEndLineColumnLocation = NOOP;
                }
                if (/full/i.test(_this.config.positionTracking)) {
                    _this.createTokenInstance = _this.createFullToken;
                }
                else if (/onlyStart/i.test(_this.config.positionTracking)) {
                    _this.createTokenInstance = _this.createStartOnlyToken;
                }
                else if (/onlyOffset/i.test(_this.config.positionTracking)) {
                    _this.createTokenInstance = _this.createOffsetOnlyToken;
                }
                else {
                    throw Error("Invalid <positionTracking> config option: \"" + _this.config.positionTracking + "\"");
                }
                if (_this.hasCustom) {
                    _this.addToken = _this.addTokenUsingPush;
                    _this.handlePayload = _this.handlePayloadWithCustom;
                }
                else {
                    _this.addToken = _this.addTokenUsingMemberAccess;
                    _this.handlePayload = _this.handlePayloadNoCustom;
                }
            });
            _this.TRACE_INIT("Failed Optimization Warnings", function () {
                var unOptimizedModes = reduce(_this.canModeBeOptimized, function (cannotBeOptimized, canBeOptimized, modeName) {
                    if (canBeOptimized === false) {
                        cannotBeOptimized.push(modeName);
                    }
                    return cannotBeOptimized;
                }, []);
                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {
                    throw Error("Lexer Modes: < " + unOptimizedModes.join(", ") + " > cannot be optimized.\n" +
                        '\t Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\n' +
                        "\t Or inspect the console log for details on how to resolve these issues.");
                }
            });
            _this.TRACE_INIT("clearRegExpParserCache", function () {
                clearRegExpParserCache();
            });
            _this.TRACE_INIT("toFastProperties", function () {
                toFastProperties(_this);
            });
        });
    }
    Lexer.prototype.tokenize = function (text, initialMode) {
        if (initialMode === void 0) { initialMode = this.defaultMode; }
        if (!isEmpty(this.lexerDefinitionErrors)) {
            var allErrMessages = map(this.lexerDefinitionErrors, function (error) {
                return error.message;
            });
            var allErrMessagesString = allErrMessages.join("-----------------------\n");
            throw new Error("Unable to Tokenize because Errors detected in definition of Lexer:\n" +
                allErrMessagesString);
        }
        var lexResult = this.tokenizeInternal(text, initialMode);
        return lexResult;
    };
    // There is quite a bit of duplication between this and "tokenizeInternalLazy"
    // This is intentional due to performance considerations.
    Lexer.prototype.tokenizeInternal = function (text, initialMode) {
        var _this = this;
        var i, j, matchAltImage, longerAltIdx, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, msg, match;
        var orgText = text;
        var orgLength = orgText.length;
        var offset = 0;
        var matchedTokensIndex = 0;
        // initializing the tokensArray to the "guessed" size.
        // guessing too little will still reduce the number of array re-sizes on pushes.
        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory
        // but would still have a faster runtime by avoiding (All but one) array resizing.
        var guessedNumberOfTokens = this.hasCustom
            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.
            : Math.floor(text.length / 10);
        var matchedTokens = new Array(guessedNumberOfTokens);
        var errors = [];
        var line = this.trackStartLines ? 1 : undefined;
        var column = this.trackStartLines ? 1 : undefined;
        var groups = cloneEmptyGroups(this.emptyGroups);
        var trackLines = this.trackStartLines;
        var lineTerminatorPattern = this.config.lineTerminatorsPattern;
        var currModePatternsLength = 0;
        var patternIdxToConfig = [];
        var currCharCodeToPatternIdxToConfig = [];
        var modeStack = [];
        var emptyArray = [];
        Object.freeze(emptyArray);
        var getPossiblePatterns = undefined;
        function getPossiblePatternsSlow() {
            return patternIdxToConfig;
        }
        function getPossiblePatternsOptimized(charCode) {
            var optimizedCharIdx = charCodeToOptimizedIndex(charCode);
            var possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];
            if (possiblePatterns === undefined) {
                return emptyArray;
            }
            else {
                return possiblePatterns;
            }
        }
        var pop_mode = function (popToken) {
            // TODO: perhaps avoid this error in the edge case there is no more input?
            if (modeStack.length === 1 &&
                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a "transition"
                // So no error should occur.
                popToken.tokenType.PUSH_MODE === undefined) {
                // if we try to pop the last mode there lexer will no longer have ANY mode.
                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.
                var msg_1 = _this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);
                errors.push({
                    offset: popToken.startOffset,
                    line: popToken.startLine !== undefined ? popToken.startLine : undefined,
                    column: popToken.startColumn !== undefined
                        ? popToken.startColumn
                        : undefined,
                    length: popToken.image.length,
                    message: msg_1
                });
            }
            else {
                modeStack.pop();
                var newMode = last(modeStack);
                patternIdxToConfig = _this.patternIdxToConfig[newMode];
                currCharCodeToPatternIdxToConfig = _this.charCodeToPatternIdxToConfig[newMode];
                currModePatternsLength = patternIdxToConfig.length;
                var modeCanBeOptimized = _this.canModeBeOptimized[newMode] && _this.config.safeMode === false;
                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {
                    getPossiblePatterns = getPossiblePatternsOptimized;
                }
                else {
                    getPossiblePatterns = getPossiblePatternsSlow;
                }
            }
        };
        function push_mode(newMode) {
            modeStack.push(newMode);
            currCharCodeToPatternIdxToConfig = this.charCodeToPatternIdxToConfig[newMode];
            patternIdxToConfig = this.patternIdxToConfig[newMode];
            currModePatternsLength = patternIdxToConfig.length;
            currModePatternsLength = patternIdxToConfig.length;
            var modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;
            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {
                getPossiblePatterns = getPossiblePatternsOptimized;
            }
            else {
                getPossiblePatterns = getPossiblePatternsSlow;
            }
        }
        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not
        // seem to matter performance wise.
        push_mode.call(this, initialMode);
        var currConfig;
        while (offset < orgLength) {
            matchedImage = null;
            var nextCharCode = orgText.charCodeAt(offset);
            var chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);
            var chosenPatternsLength = chosenPatternIdxToConfig.length;
            for (i = 0; i < chosenPatternsLength; i++) {
                currConfig = chosenPatternIdxToConfig[i];
                var currPattern = currConfig.pattern;
                payload = null;
                // manually in-lined because > 600 chars won't be in-lined in V8
                var singleCharCode = currConfig.short;
                if (singleCharCode !== false) {
                    if (nextCharCode === singleCharCode) {
                        // single character string
                        matchedImage = currPattern;
                    }
                }
                else if (currConfig.isCustom === true) {
                    match = currPattern.exec(orgText, offset, matchedTokens, groups);
                    if (match !== null) {
                        matchedImage = match[0];
                        if (match.payload !== undefined) {
                            payload = match.payload;
                        }
                    }
                    else {
                        matchedImage = null;
                    }
                }
                else {
                    this.updateLastIndex(currPattern, offset);
                    matchedImage = this.match(currPattern, text, offset);
                }
                if (matchedImage !== null) {
                    // even though this pattern matched we must try a another longer alternative.
                    // this can be used to prioritize keywords over identifiers
                    longerAltIdx = currConfig.longerAlt;
                    if (longerAltIdx !== undefined) {
                        // TODO: micro optimize, avoid extra prop access
                        // by saving/linking longerAlt on the original config?
                        var longerAltConfig = patternIdxToConfig[longerAltIdx];
                        var longerAltPattern = longerAltConfig.pattern;
                        altPayload = null;
                        // single Char can never be a longer alt so no need to test it.
                        // manually in-lined because > 600 chars won't be in-lined in V8
                        if (longerAltConfig.isCustom === true) {
                            match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);
                            if (match !== null) {
                                matchAltImage = match[0];
                                if (match.payload !== undefined) {
                                    altPayload = match.payload;
                                }
                            }
                            else {
                                matchAltImage = null;
                            }
                        }
                        else {
                            this.updateLastIndex(longerAltPattern, offset);
                            matchAltImage = this.match(longerAltPattern, text, offset);
                        }
                        if (matchAltImage && matchAltImage.length > matchedImage.length) {
                            matchedImage = matchAltImage;
                            payload = altPayload;
                            currConfig = longerAltConfig;
                        }
                    }
                    break;
                }
            }
            // successful match
            if (matchedImage !== null) {
                imageLength = matchedImage.length;
                group = currConfig.group;
                if (group !== undefined) {
                    tokType = currConfig.tokenTypeIdx;
                    // TODO: "offset + imageLength" and the new column may be computed twice in case of "full" location information inside
                    // createFullToken method
                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);
                    this.handlePayload(newToken, payload);
                    // TODO: optimize NOOP in case there are no special groups?
                    if (group === false) {
                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);
                    }
                    else {
                        groups[group].push(newToken);
                    }
                }
                text = this.chopInput(text, imageLength);
                offset = offset + imageLength;
                // TODO: with newlines the column may be assigned twice
                column = this.computeNewColumn(column, imageLength);
                if (trackLines === true && currConfig.canLineTerminator === true) {
                    var numOfLTsInMatch = 0;
                    var foundTerminator = void 0;
                    var lastLTEndOffset = void 0;
                    lineTerminatorPattern.lastIndex = 0;
                    do {
                        foundTerminator = lineTerminatorPattern.test(matchedImage);
                        if (foundTerminator === true) {
                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;
                            numOfLTsInMatch++;
                        }
                    } while (foundTerminator === true);
                    if (numOfLTsInMatch !== 0) {
                        line = line + numOfLTsInMatch;
                        column = imageLength - lastLTEndOffset;
                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);
                    }
                }
                // will be NOOP if no modes present
                this.handleModes(currConfig, pop_mode, push_mode, newToken);
            }
            else {
                // error recovery, drop characters until we identify a valid token's start point
                var errorStartOffset = offset;
                var errorLine = line;
                var errorColumn = column;
                var foundResyncPoint = false;
                while (!foundResyncPoint && offset < orgLength) {
                    // drop chars until we succeed in matching something
                    orgText.charCodeAt(offset);
                    // Identity Func (when sticky flag is enabled)
                    text = this.chopInput(text, 1);
                    offset++;
                    for (j = 0; j < currModePatternsLength; j++) {
                        var currConfig_1 = patternIdxToConfig[j];
                        var currPattern = currConfig_1.pattern;
                        // manually in-lined because > 600 chars won't be in-lined in V8
                        var singleCharCode = currConfig_1.short;
                        if (singleCharCode !== false) {
                            if (orgText.charCodeAt(offset) === singleCharCode) {
                                // single character string
                                foundResyncPoint = true;
                            }
                        }
                        else if (currConfig_1.isCustom === true) {
                            foundResyncPoint =
                                currPattern.exec(orgText, offset, matchedTokens, groups) !==
                                    null;
                        }
                        else {
                            this.updateLastIndex(currPattern, offset);
                            foundResyncPoint = currPattern.exec(text) !== null;
                        }
                        if (foundResyncPoint === true) {
                            break;
                        }
                    }
                }
                errLength = offset - errorStartOffset;
                // at this point we either re-synced or reached the end of the input text
                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);
                errors.push({
                    offset: errorStartOffset,
                    line: errorLine,
                    column: errorColumn,
                    length: errLength,
                    message: msg
                });
            }
        }
        // if we do have custom patterns which push directly into the
        // TODO: custom tokens should not push directly??
        if (!this.hasCustom) {
            // if we guessed a too large size for the tokens array this will shrink it to the right size.
            matchedTokens.length = matchedTokensIndex;
        }
        return {
            tokens: matchedTokens,
            groups: groups,
            errors: errors
        };
    };
    Lexer.prototype.handleModes = function (config, pop_mode, push_mode, newToken) {
        if (config.pop === true) {
            // need to save the PUSH_MODE property as if the mode is popped
            // patternIdxToPopMode is updated to reflect the new mode after popping the stack
            var pushMode = config.push;
            pop_mode(newToken);
            if (pushMode !== undefined) {
                push_mode.call(this, pushMode);
            }
        }
        else if (config.push !== undefined) {
            push_mode.call(this, config.push);
        }
    };
    Lexer.prototype.chopInput = function (text, length) {
        return text.substring(length);
    };
    Lexer.prototype.updateLastIndex = function (regExp, newLastIndex) {
        regExp.lastIndex = newLastIndex;
    };
    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler
    Lexer.prototype.updateTokenEndLineColumnLocation = function (newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {
        var lastCharIsLT, fixForEndingInLT;
        if (group !== undefined) {
            // a none skipped multi line Token, need to update endLine/endColumn
            lastCharIsLT = lastLTIdx === imageLength - 1;
            fixForEndingInLT = lastCharIsLT ? -1 : 0;
            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {
                // if a token ends in a LT that last LT only affects the line numbering of following Tokens
                newToken.endLine = line + fixForEndingInLT;
                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)
                // inclusive to exclusive range.
                newToken.endColumn = column - 1 + -fixForEndingInLT;
            }
            // else single LT in the last character of a token, no need to modify the endLine/EndColumn
        }
    };
    Lexer.prototype.computeNewColumn = function (oldColumn, imageLength) {
        return oldColumn + imageLength;
    };
    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.
    /* istanbul ignore next - place holder */
    Lexer.prototype.createTokenInstance = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    };
    Lexer.prototype.createOffsetOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType) {
        return {
            image: image,
            startOffset: startOffset,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    Lexer.prototype.createStartOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {
        return {
            image: image,
            startOffset: startOffset,
            startLine: startLine,
            startColumn: startColumn,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    Lexer.prototype.createFullToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {
        return {
            image: image,
            startOffset: startOffset,
            endOffset: startOffset + imageLength - 1,
            startLine: startLine,
            endLine: startLine,
            startColumn: startColumn,
            endColumn: startColumn + imageLength - 1,
            tokenTypeIdx: tokenTypeIdx,
            tokenType: tokenType
        };
    };
    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.
    /* istanbul ignore next - place holder */
    Lexer.prototype.addToken = function (tokenVector, index, tokenToAdd) {
        return 666;
    };
    Lexer.prototype.addTokenUsingPush = function (tokenVector, index, tokenToAdd) {
        tokenVector.push(tokenToAdd);
        return index;
    };
    Lexer.prototype.addTokenUsingMemberAccess = function (tokenVector, index, tokenToAdd) {
        tokenVector[index] = tokenToAdd;
        index++;
        return index;
    };
    // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.
    /* istanbul ignore next - place holder */
    Lexer.prototype.handlePayload = function (token, payload) { };
    Lexer.prototype.handlePayloadNoCustom = function (token, payload) { };
    Lexer.prototype.handlePayloadWithCustom = function (token, payload) {
        if (payload !== null) {
            token.payload = payload;
        }
    };
    /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */
    Lexer.prototype.match = function (pattern, text, offset) {
        return null;
    };
    Lexer.prototype.matchWithTest = function (pattern, text, offset) {
        var found = pattern.test(text);
        if (found === true) {
            return text.substring(offset, pattern.lastIndex);
        }
        return null;
    };
    Lexer.prototype.matchWithExec = function (pattern, text) {
        var regExpArray = pattern.exec(text);
        return regExpArray !== null ? regExpArray[0] : regExpArray;
    };
    // Duplicated from the parser's perf trace trait to allow future extraction
    // of the lexer to a separate package.
    Lexer.prototype.TRACE_INIT = function (phaseDesc, phaseImpl) {
        // No need to optimize this using NOOP pattern because
        // It is not called in a hot spot...
        if (this.traceInitPerf === true) {
            this.traceInitIndent++;
            var indent = new Array(this.traceInitIndent + 1).join("\t");
            if (this.traceInitIndent < this.traceInitMaxIdent) {
                console.log(indent + "--> <" + phaseDesc + ">");
            }
            var _a = timer(phaseImpl), time = _a.time, value = _a.value;
            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */
            var traceMethod = time > 10 ? console.warn : console.log;
            if (this.traceInitIndent < this.traceInitMaxIdent) {
                traceMethod(indent + "<-- <" + phaseDesc + "> time: " + time + "ms");
            }
            this.traceInitIndent--;
            return value;
        }
        else {
            return phaseImpl();
        }
    };
    Lexer.SKIPPED = "This marks a skipped Token pattern, this means each token identified by it will" +
        "be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.";
    Lexer.NA = /NOT_APPLICABLE/;
    return Lexer;
}());

function tokenLabel(tokType) {
    if (hasTokenLabel(tokType)) {
        return tokType.LABEL;
    }
    else {
        return tokType.name;
    }
}
function tokenName(tokType) {
    return tokType.name;
}
function hasTokenLabel(obj) {
    return isString(obj.LABEL) && obj.LABEL !== "";
}
var PARENT = "parent";
var CATEGORIES = "categories";
var LABEL = "label";
var GROUP = "group";
var PUSH_MODE = "push_mode";
var POP_MODE = "pop_mode";
var LONGER_ALT = "longer_alt";
var LINE_BREAKS = "line_breaks";
var START_CHARS_HINT = "start_chars_hint";
function createToken$1(config) {
    return createTokenInternal(config);
}
function createTokenInternal(config) {
    var pattern = config.pattern;
    var tokenType = {};
    tokenType.name = config.name;
    if (!isUndefined(pattern)) {
        tokenType.PATTERN = pattern;
    }
    if (has(config, PARENT)) {
        throw ("The parent property is no longer supported.\n" +
            "See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.");
    }
    if (has(config, CATEGORIES)) {
        // casting to ANY as this will be fixed inside `augmentTokenTypes``
        tokenType.CATEGORIES = config[CATEGORIES];
    }
    augmentTokenTypes([tokenType]);
    if (has(config, LABEL)) {
        tokenType.LABEL = config[LABEL];
    }
    if (has(config, GROUP)) {
        tokenType.GROUP = config[GROUP];
    }
    if (has(config, POP_MODE)) {
        tokenType.POP_MODE = config[POP_MODE];
    }
    if (has(config, PUSH_MODE)) {
        tokenType.PUSH_MODE = config[PUSH_MODE];
    }
    if (has(config, LONGER_ALT)) {
        tokenType.LONGER_ALT = config[LONGER_ALT];
    }
    if (has(config, LINE_BREAKS)) {
        tokenType.LINE_BREAKS = config[LINE_BREAKS];
    }
    if (has(config, START_CHARS_HINT)) {
        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];
    }
    return tokenType;
}
var EOF = createToken$1({ name: "EOF", pattern: Lexer$1.NA });
augmentTokenTypes([EOF]);
function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {
    return {
        image: image,
        startOffset: startOffset,
        endOffset: endOffset,
        startLine: startLine,
        endLine: endLine,
        startColumn: startColumn,
        endColumn: endColumn,
        tokenTypeIdx: tokType.tokenTypeIdx,
        tokenType: tokType
    };
}
function tokenMatcher$1(token, tokType) {
    return tokenStructuredMatcher(token, tokType);
}

var __extends$8 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var AbstractProduction = /** @class */ (function () {
    function AbstractProduction(_definition) {
        this._definition = _definition;
    }
    Object.defineProperty(AbstractProduction.prototype, "definition", {
        get: function () {
            return this._definition;
        },
        set: function (value) {
            this._definition = value;
        },
        enumerable: false,
        configurable: true
    });
    AbstractProduction.prototype.accept = function (visitor) {
        visitor.visit(this);
        forEach(this.definition, function (prod) {
            prod.accept(visitor);
        });
    };
    return AbstractProduction;
}());
var NonTerminal = /** @class */ (function (_super) {
    __extends$8(NonTerminal, _super);
    function NonTerminal(options) {
        var _this = _super.call(this, []) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    Object.defineProperty(NonTerminal.prototype, "definition", {
        get: function () {
            if (this.referencedRule !== undefined) {
                return this.referencedRule.definition;
            }
            return [];
        },
        set: function (definition) {
            // immutable
        },
        enumerable: false,
        configurable: true
    });
    NonTerminal.prototype.accept = function (visitor) {
        visitor.visit(this);
        // don't visit children of a reference, we will get cyclic infinite loops if we do so
    };
    return NonTerminal;
}(AbstractProduction));
var Rule = /** @class */ (function (_super) {
    __extends$8(Rule, _super);
    function Rule(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.orgText = "";
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Rule;
}(AbstractProduction));
var Alternative = /** @class */ (function (_super) {
    __extends$8(Alternative, _super);
    function Alternative(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.ignoreAmbiguities = false;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Alternative;
}(AbstractProduction));
var Option = /** @class */ (function (_super) {
    __extends$8(Option, _super);
    function Option(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Option;
}(AbstractProduction));
var RepetitionMandatory = /** @class */ (function (_super) {
    __extends$8(RepetitionMandatory, _super);
    function RepetitionMandatory(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionMandatory;
}(AbstractProduction));
var RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {
    __extends$8(RepetitionMandatoryWithSeparator, _super);
    function RepetitionMandatoryWithSeparator(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionMandatoryWithSeparator;
}(AbstractProduction));
var Repetition = /** @class */ (function (_super) {
    __extends$8(Repetition, _super);
    function Repetition(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return Repetition;
}(AbstractProduction));
var RepetitionWithSeparator = /** @class */ (function (_super) {
    __extends$8(RepetitionWithSeparator, _super);
    function RepetitionWithSeparator(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    return RepetitionWithSeparator;
}(AbstractProduction));
var Alternation = /** @class */ (function (_super) {
    __extends$8(Alternation, _super);
    function Alternation(options) {
        var _this = _super.call(this, options.definition) || this;
        _this.idx = 1;
        _this.ignoreAmbiguities = false;
        _this.hasPredicates = false;
        assign(_this, pick(options, function (v) { return v !== undefined; }));
        return _this;
    }
    Object.defineProperty(Alternation.prototype, "definition", {
        get: function () {
            return this._definition;
        },
        set: function (value) {
            this._definition = value;
        },
        enumerable: false,
        configurable: true
    });
    return Alternation;
}(AbstractProduction));
var Terminal = /** @class */ (function () {
    function Terminal(options) {
        this.idx = 1;
        assign(this, pick(options, function (v) { return v !== undefined; }));
    }
    Terminal.prototype.accept = function (visitor) {
        visitor.visit(this);
    };
    return Terminal;
}());
function serializeGrammar(topRules) {
    return map(topRules, serializeProduction);
}
function serializeProduction(node) {
    function convertDefinition(definition) {
        return map(definition, serializeProduction);
    }
    /* istanbul ignore else */
    if (node instanceof NonTerminal) {
        return {
            type: "NonTerminal",
            name: node.nonTerminalName,
            idx: node.idx
        };
    }
    else if (node instanceof Alternative) {
        return {
            type: "Alternative",
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Option) {
        return {
            type: "Option",
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionMandatory) {
        return {
            type: "RepetitionMandatory",
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionMandatoryWithSeparator) {
        return {
            type: "RepetitionMandatoryWithSeparator",
            idx: node.idx,
            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof RepetitionWithSeparator) {
        return {
            type: "RepetitionWithSeparator",
            idx: node.idx,
            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Repetition) {
        return {
            type: "Repetition",
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Alternation) {
        return {
            type: "Alternation",
            idx: node.idx,
            definition: convertDefinition(node.definition)
        };
    }
    else if (node instanceof Terminal) {
        var serializedTerminal = {
            type: "Terminal",
            name: node.terminalType.name,
            label: tokenLabel(node.terminalType),
            idx: node.idx
        };
        var pattern = node.terminalType.PATTERN;
        if (node.terminalType.PATTERN) {
            serializedTerminal.pattern = isRegExp(pattern)
                ? pattern.source
                : pattern;
        }
        return serializedTerminal;
    }
    else if (node instanceof Rule) {
        return {
            type: "Rule",
            name: node.name,
            orgText: node.orgText,
            definition: convertDefinition(node.definition)
        };
    }
    else {
        throw Error("non exhaustive match");
    }
}

/**
 *  A Grammar Walker that computes the "remaining" grammar "after" a productions in the grammar.
 */
var RestWalker = /** @class */ (function () {
    function RestWalker() {
    }
    RestWalker.prototype.walk = function (prod, prevRest) {
        var _this = this;
        if (prevRest === void 0) { prevRest = []; }
        forEach(prod.definition, function (subProd, index) {
            var currRest = drop(prod.definition, index + 1);
            /* istanbul ignore else */
            if (subProd instanceof NonTerminal) {
                _this.walkProdRef(subProd, currRest, prevRest);
            }
            else if (subProd instanceof Terminal) {
                _this.walkTerminal(subProd, currRest, prevRest);
            }
            else if (subProd instanceof Alternative) {
                _this.walkFlat(subProd, currRest, prevRest);
            }
            else if (subProd instanceof Option) {
                _this.walkOption(subProd, currRest, prevRest);
            }
            else if (subProd instanceof RepetitionMandatory) {
                _this.walkAtLeastOne(subProd, currRest, prevRest);
            }
            else if (subProd instanceof RepetitionMandatoryWithSeparator) {
                _this.walkAtLeastOneSep(subProd, currRest, prevRest);
            }
            else if (subProd instanceof RepetitionWithSeparator) {
                _this.walkManySep(subProd, currRest, prevRest);
            }
            else if (subProd instanceof Repetition) {
                _this.walkMany(subProd, currRest, prevRest);
            }
            else if (subProd instanceof Alternation) {
                _this.walkOr(subProd, currRest, prevRest);
            }
            else {
                throw Error("non exhaustive match");
            }
        });
    };
    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };
    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };
    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {
        // ABCDEF => after the D the rest is EF
        var fullOrRest = currRest.concat(prevRest);
        this.walk(flatProd, fullOrRest);
    };
    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {
        // ABC(DE)?F => after the (DE)? the rest is F
        var fullOrRest = currRest.concat(prevRest);
        this.walk(optionProd, fullOrRest);
    };
    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F
        var fullAtLeastOneRest = [
            new Option({ definition: atLeastOneProd.definition })
        ].concat(currRest, prevRest);
        this.walk(atLeastOneProd, fullAtLeastOneRest);
    };
    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {
        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F
        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);
        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);
    };
    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        // ABC(DE)*F => after the (DE)* the rest is (DE)?F
        var fullManyRest = [
            new Option({ definition: manyProd.definition })
        ].concat(currRest, prevRest);
        this.walk(manyProd, fullManyRest);
    };
    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F
        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);
        this.walk(manySepProd, fullManySepRest);
    };
    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {
        var _this = this;
        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G
        var fullOrRest = currRest.concat(prevRest);
        // walk all different alternatives
        forEach(orProd.definition, function (alt) {
            // wrapping each alternative in a single definition wrapper
            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows
            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1
            var prodWrapper = new Alternative({ definition: [alt] });
            _this.walk(prodWrapper, fullOrRest);
        });
    };
    return RestWalker;
}());
function restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {
    var repSepRest = [
        new Option({
            definition: [new Terminal({ terminalType: repSepProd.separator })].concat(repSepProd.definition)
        })
    ];
    var fullRepSepRest = repSepRest.concat(currRest, prevRest);
    return fullRepSepRest;
}

var GAstVisitor = /** @class */ (function () {
    function GAstVisitor() {
    }
    GAstVisitor.prototype.visit = function (node) {
        var nodeAny = node;
        switch (nodeAny.constructor) {
            case NonTerminal:
                return this.visitNonTerminal(nodeAny);
            case Alternative:
                return this.visitAlternative(nodeAny);
            case Option:
                return this.visitOption(nodeAny);
            case RepetitionMandatory:
                return this.visitRepetitionMandatory(nodeAny);
            case RepetitionMandatoryWithSeparator:
                return this.visitRepetitionMandatoryWithSeparator(nodeAny);
            case RepetitionWithSeparator:
                return this.visitRepetitionWithSeparator(nodeAny);
            case Repetition:
                return this.visitRepetition(nodeAny);
            case Alternation:
                return this.visitAlternation(nodeAny);
            case Terminal:
                return this.visitTerminal(nodeAny);
            case Rule:
                return this.visitRule(nodeAny);
            /* istanbul ignore next */
            default:
                throw Error("non exhaustive match");
        }
    };
    GAstVisitor.prototype.visitNonTerminal = function (node) { };
    GAstVisitor.prototype.visitAlternative = function (node) { };
    GAstVisitor.prototype.visitOption = function (node) { };
    GAstVisitor.prototype.visitRepetition = function (node) { };
    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };
    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };
    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };
    GAstVisitor.prototype.visitAlternation = function (node) { };
    GAstVisitor.prototype.visitTerminal = function (node) { };
    GAstVisitor.prototype.visitRule = function (node) { };
    return GAstVisitor;
}());

var __extends$7 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function isSequenceProd(prod) {
    return (prod instanceof Alternative ||
        prod instanceof Option ||
        prod instanceof Repetition ||
        prod instanceof RepetitionMandatory ||
        prod instanceof RepetitionMandatoryWithSeparator ||
        prod instanceof RepetitionWithSeparator ||
        prod instanceof Terminal ||
        prod instanceof Rule);
}
function isOptionalProd(prod, alreadyVisited) {
    if (alreadyVisited === void 0) { alreadyVisited = []; }
    var isDirectlyOptional = prod instanceof Option ||
        prod instanceof Repetition ||
        prod instanceof RepetitionWithSeparator;
    if (isDirectlyOptional) {
        return true;
    }
    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another
    // empty optional top rule
    // may be indirectly optional ((A?B?C?) | (D?E?F?))
    if (prod instanceof Alternation) {
        // for OR its enough for just one of the alternatives to be optional
        return some(prod.definition, function (subProd) {
            return isOptionalProd(subProd, alreadyVisited);
        });
    }
    else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {
        // avoiding stack overflow due to infinite recursion
        return false;
    }
    else if (prod instanceof AbstractProduction) {
        if (prod instanceof NonTerminal) {
            alreadyVisited.push(prod);
        }
        return every(prod.definition, function (subProd) {
            return isOptionalProd(subProd, alreadyVisited);
        });
    }
    else {
        return false;
    }
}
function isBranchingProd(prod) {
    return prod instanceof Alternation;
}
function getProductionDslName(prod) {
    /* istanbul ignore else */
    if (prod instanceof NonTerminal) {
        return "SUBRULE";
    }
    else if (prod instanceof Option) {
        return "OPTION";
    }
    else if (prod instanceof Alternation) {
        return "OR";
    }
    else if (prod instanceof RepetitionMandatory) {
        return "AT_LEAST_ONE";
    }
    else if (prod instanceof RepetitionMandatoryWithSeparator) {
        return "AT_LEAST_ONE_SEP";
    }
    else if (prod instanceof RepetitionWithSeparator) {
        return "MANY_SEP";
    }
    else if (prod instanceof Repetition) {
        return "MANY";
    }
    else if (prod instanceof Terminal) {
        return "CONSUME";
    }
    else {
        throw Error("non exhaustive match");
    }
}
var DslMethodsCollectorVisitor = /** @class */ (function (_super) {
    __extends$7(DslMethodsCollectorVisitor, _super);
    function DslMethodsCollectorVisitor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // A minus is never valid in an identifier name
        _this.separator = "-";
        _this.dslMethods = {
            option: [],
            alternation: [],
            repetition: [],
            repetitionWithSeparator: [],
            repetitionMandatory: [],
            repetitionMandatoryWithSeparator: []
        };
        return _this;
    }
    DslMethodsCollectorVisitor.prototype.reset = function () {
        this.dslMethods = {
            option: [],
            alternation: [],
            repetition: [],
            repetitionWithSeparator: [],
            repetitionMandatory: [],
            repetitionMandatoryWithSeparator: []
        };
    };
    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {
        var key = terminal.terminalType.name + this.separator + "Terminal";
        if (!has(this.dslMethods, key)) {
            this.dslMethods[key] = [];
        }
        this.dslMethods[key].push(terminal);
    };
    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {
        var key = subrule.nonTerminalName + this.separator + "Terminal";
        if (!has(this.dslMethods, key)) {
            this.dslMethods[key] = [];
        }
        this.dslMethods[key].push(subrule);
    };
    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {
        this.dslMethods.option.push(option);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.dslMethods.repetitionWithSeparator.push(manySep);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.dslMethods.repetitionMandatory.push(atLeastOne);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);
    };
    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {
        this.dslMethods.repetition.push(many);
    };
    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {
        this.dslMethods.alternation.push(or);
    };
    return DslMethodsCollectorVisitor;
}(GAstVisitor));
var collectorVisitor = new DslMethodsCollectorVisitor();
function collectMethods(rule) {
    collectorVisitor.reset();
    rule.accept(collectorVisitor);
    var dslMethods = collectorVisitor.dslMethods;
    // avoid uncleaned references
    collectorVisitor.reset();
    return dslMethods;
}

function first(prod) {
    /* istanbul ignore else */
    if (prod instanceof NonTerminal) {
        // this could in theory cause infinite loops if
        // (1) prod A refs prod B.
        // (2) prod B refs prod A
        // (3) AB can match the empty set
        // in other words a cycle where everything is optional so the first will keep
        // looking ahead for the next optional part and will never exit
        // currently there is no safeguard for this unique edge case because
        // (1) not sure a grammar in which this can happen is useful for anything (productive)
        return first(prod.referencedRule);
    }
    else if (prod instanceof Terminal) {
        return firstForTerminal(prod);
    }
    else if (isSequenceProd(prod)) {
        return firstForSequence(prod);
    }
    else if (isBranchingProd(prod)) {
        return firstForBranching(prod);
    }
    else {
        throw Error("non exhaustive match");
    }
}
function firstForSequence(prod) {
    var firstSet = [];
    var seq = prod.definition;
    var nextSubProdIdx = 0;
    var hasInnerProdsRemaining = seq.length > nextSubProdIdx;
    var currSubProd;
    // so we enter the loop at least once (if the definition is not empty
    var isLastInnerProdOptional = true;
    // scan a sequence until it's end or until we have found a NONE optional production in it
    while (hasInnerProdsRemaining && isLastInnerProdOptional) {
        currSubProd = seq[nextSubProdIdx];
        isLastInnerProdOptional = isOptionalProd(currSubProd);
        firstSet = firstSet.concat(first(currSubProd));
        nextSubProdIdx = nextSubProdIdx + 1;
        hasInnerProdsRemaining = seq.length > nextSubProdIdx;
    }
    return uniq(firstSet);
}
function firstForBranching(prod) {
    var allAlternativesFirsts = map(prod.definition, function (innerProd) {
        return first(innerProd);
    });
    return uniq(flatten(allAlternativesFirsts));
}
function firstForTerminal(terminal) {
    return [terminal.terminalType];
}

// TODO: can this be removed? where is it used?
var IN = "_~IN~_";

var __extends$6 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// This ResyncFollowsWalker computes all of the follows required for RESYNC
// (skipping reference production).
var ResyncFollowsWalker = /** @class */ (function (_super) {
    __extends$6(ResyncFollowsWalker, _super);
    function ResyncFollowsWalker(topProd) {
        var _this = _super.call(this) || this;
        _this.topProd = topProd;
        _this.follows = {};
        return _this;
    }
    ResyncFollowsWalker.prototype.startWalking = function () {
        this.walk(this.topProd);
        return this.follows;
    };
    ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {
        // do nothing! just like in the public sector after 13:00
    };
    ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {
        var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +
            this.topProd.name;
        var fullRest = currRest.concat(prevRest);
        var restProd = new Alternative({ definition: fullRest });
        var t_in_topProd_follows = first(restProd);
        this.follows[followName] = t_in_topProd_follows;
    };
    return ResyncFollowsWalker;
}(RestWalker));
function computeAllProdsFollows(topProductions) {
    var reSyncFollows = {};
    forEach(topProductions, function (topProd) {
        var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();
        assign(reSyncFollows, currRefsFollow);
    });
    return reSyncFollows;
}
function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {
    return inner.name + occurenceInParent + IN;
}

var defaultParserErrorProvider = {
    buildMismatchTokenMessage: function (_a) {
        var expected = _a.expected, actual = _a.actual; _a.previous; _a.ruleName;
        var hasLabel = hasTokenLabel(expected);
        var expectedMsg = hasLabel
            ? "--> " + tokenLabel(expected) + " <--"
            : "token of type --> " + expected.name + " <--";
        var msg = "Expecting " + expectedMsg + " but found --> '" + actual.image + "' <--";
        return msg;
    },
    buildNotAllInputParsedMessage: function (_a) {
        var firstRedundant = _a.firstRedundant; _a.ruleName;
        return "Redundant input, expecting EOF but found: " + firstRedundant.image;
    },
    buildNoViableAltMessage: function (_a) {
        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual; _a.previous; var customUserDescription = _a.customUserDescription; _a.ruleName;
        var errPrefix = "Expecting: ";
        // TODO: issue: No Viable Alternative Error may have incomplete details. #502
        var actualText = first$1(actual).image;
        var errSuffix = "\nbut found: '" + actualText + "'";
        if (customUserDescription) {
            return errPrefix + customUserDescription + errSuffix;
        }
        else {
            var allLookAheadPaths = reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);
            var nextValidTokenSequences = map(allLookAheadPaths, function (currPath) {
                return "[" + map(currPath, function (currTokenType) { return tokenLabel(currTokenType); }).join(", ") + "]";
            });
            var nextValidSequenceItems = map(nextValidTokenSequences, function (itemMsg, idx) { return "  " + (idx + 1) + ". " + itemMsg; });
            var calculatedDescription = "one of these possible Token sequences:\n" + nextValidSequenceItems.join("\n");
            return errPrefix + calculatedDescription + errSuffix;
        }
    },
    buildEarlyExitMessage: function (_a) {
        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription; _a.ruleName;
        var errPrefix = "Expecting: ";
        // TODO: issue: No Viable Alternative Error may have incomplete details. #502
        var actualText = first$1(actual).image;
        var errSuffix = "\nbut found: '" + actualText + "'";
        if (customUserDescription) {
            return errPrefix + customUserDescription + errSuffix;
        }
        else {
            var nextValidTokenSequences = map(expectedIterationPaths, function (currPath) {
                return "[" + map(currPath, function (currTokenType) { return tokenLabel(currTokenType); }).join(",") + "]";
            });
            var calculatedDescription = "expecting at least one iteration which starts with one of these possible Token sequences::\n  " +
                ("<" + nextValidTokenSequences.join(" ,") + ">");
            return errPrefix + calculatedDescription + errSuffix;
        }
    }
};
Object.freeze(defaultParserErrorProvider);
var defaultGrammarResolverErrorProvider = {
    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {
        var msg = "Invalid grammar, reference to a rule which is not defined: ->" +
            undefinedRule.nonTerminalName +
            "<-\n" +
            "inside top level rule: ->" +
            topLevelRule.name +
            "<-";
        return msg;
    }
};
var defaultGrammarValidatorErrorProvider = {
    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {
        function getExtraProductionArgument(prod) {
            if (prod instanceof Terminal) {
                return prod.terminalType.name;
            }
            else if (prod instanceof NonTerminal) {
                return prod.nonTerminalName;
            }
            else {
                return "";
            }
        }
        var topLevelName = topLevelRule.name;
        var duplicateProd = first$1(duplicateProds);
        var index = duplicateProd.idx;
        var dslName = getProductionDslName(duplicateProd);
        var extraArgument = getExtraProductionArgument(duplicateProd);
        var hasExplicitIndex = index > 0;
        var msg = "->" + dslName + (hasExplicitIndex ? index : "") + "<- " + (extraArgument ? "with argument: ->" + extraArgument + "<-" : "") + "\n                  appears more than once (" + duplicateProds.length + " times) in the top level rule: ->" + topLevelName + "<-.                  \n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  ";
        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...
        msg = msg.replace(/[ \t]+/g, " ");
        msg = msg.replace(/\s\s+/g, "\n");
        return msg;
    },
    buildNamespaceConflictError: function (rule) {
        var errMsg = "Namespace conflict found in grammar.\n" +
            ("The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <" + rule.name + ">.\n") +
            "To resolve this make sure each Terminal and Non-Terminal names are unique\n" +
            "This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\n" +
            "and Non-Terminal names start with a lower case letter.";
        return errMsg;
    },
    buildAlternationPrefixAmbiguityError: function (options) {
        var pathMsg = map(options.prefixPath, function (currTok) {
            return tokenLabel(currTok);
        }).join(", ");
        var occurrence = options.alternation.idx === 0 ? "" : options.alternation.idx;
        var errMsg = "Ambiguous alternatives: <" + options.ambiguityIndices.join(" ,") + "> due to common lookahead prefix\n" +
            ("in <OR" + occurrence + "> inside <" + options.topLevelRule.name + "> Rule,\n") +
            ("<" + pathMsg + "> may appears as a prefix path in all these alternatives.\n") +
            "See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\n" +
            "For Further details.";
        return errMsg;
    },
    buildAlternationAmbiguityError: function (options) {
        var pathMsg = map(options.prefixPath, function (currtok) {
            return tokenLabel(currtok);
        }).join(", ");
        var occurrence = options.alternation.idx === 0 ? "" : options.alternation.idx;
        var currMessage = "Ambiguous Alternatives Detected: <" + options.ambiguityIndices.join(" ,") + "> in <OR" + occurrence + ">" +
            (" inside <" + options.topLevelRule.name + "> Rule,\n") +
            ("<" + pathMsg + "> may appears as a prefix path in all these alternatives.\n");
        currMessage =
            currMessage +
                "See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\n" +
                "For Further details.";
        return currMessage;
    },
    buildEmptyRepetitionError: function (options) {
        var dslName = getProductionDslName(options.repetition);
        if (options.repetition.idx !== 0) {
            dslName += options.repetition.idx;
        }
        var errMsg = "The repetition <" + dslName + "> within Rule <" + options.topLevelRule.name + "> can never consume any tokens.\n" +
            "This could lead to an infinite loop.";
        return errMsg;
    },
    // TODO: remove - `errors_public` from nyc.config.js exclude
    //       once this method is fully removed from this file
    buildTokenNameError: function (options) {
        /* istanbul ignore next */
        return "deprecated";
    },
    buildEmptyAlternationError: function (options) {
        var errMsg = "Ambiguous empty alternative: <" + (options.emptyChoiceIdx + 1) + ">" +
            (" in <OR" + options.alternation.idx + "> inside <" + options.topLevelRule.name + "> Rule.\n") +
            "Only the last alternative may be an empty alternative.";
        return errMsg;
    },
    buildTooManyAlternativesError: function (options) {
        var errMsg = "An Alternation cannot have more than 256 alternatives:\n" +
            ("<OR" + options.alternation.idx + "> inside <" + options.topLevelRule.name + "> Rule.\n has " + (options.alternation.definition.length + 1) + " alternatives.");
        return errMsg;
    },
    buildLeftRecursionError: function (options) {
        var ruleName = options.topLevelRule.name;
        var pathNames = map(options.leftRecursionPath, function (currRule) { return currRule.name; });
        var leftRecursivePath = ruleName + " --> " + pathNames
            .concat([ruleName])
            .join(" --> ");
        var errMsg = "Left Recursion found in grammar.\n" +
            ("rule: <" + ruleName + "> can be invoked from itself (directly or indirectly)\n") +
            ("without consuming any Tokens. The grammar path that causes this is: \n " + leftRecursivePath + "\n") +
            " To fix this refactor your grammar to remove the left recursion.\n" +
            "see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.";
        return errMsg;
    },
    // TODO: remove - `errors_public` from nyc.config.js exclude
    //       once this method is fully removed from this file
    buildInvalidRuleNameError: function (options) {
        /* istanbul ignore next */
        return "deprecated";
    },
    buildDuplicateRuleNameError: function (options) {
        var ruleName;
        if (options.topLevelRule instanceof Rule) {
            ruleName = options.topLevelRule.name;
        }
        else {
            ruleName = options.topLevelRule;
        }
        var errMsg = "Duplicate definition, rule: ->" + ruleName + "<- is already defined in the grammar: ->" + options.grammarName + "<-";
        return errMsg;
    }
};

var __extends$5 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function resolveGrammar$1(topLevels, errMsgProvider) {
    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);
    refResolver.resolveRefs();
    return refResolver.errors;
}
var GastRefResolverVisitor = /** @class */ (function (_super) {
    __extends$5(GastRefResolverVisitor, _super);
    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {
        var _this = _super.call(this) || this;
        _this.nameToTopRule = nameToTopRule;
        _this.errMsgProvider = errMsgProvider;
        _this.errors = [];
        return _this;
    }
    GastRefResolverVisitor.prototype.resolveRefs = function () {
        var _this = this;
        forEach(values(this.nameToTopRule), function (prod) {
            _this.currTopLevel = prod;
            prod.accept(_this);
        });
    };
    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {
        var ref = this.nameToTopRule[node.nonTerminalName];
        if (!ref) {
            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);
            this.errors.push({
                message: msg,
                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,
                ruleName: this.currTopLevel.name,
                unresolvedRefName: node.nonTerminalName
            });
        }
        else {
            node.referencedRule = ref;
        }
    };
    return GastRefResolverVisitor;
}(GAstVisitor));

var __extends$4 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var AbstractNextPossibleTokensWalker = /** @class */ (function (_super) {
    __extends$4(AbstractNextPossibleTokensWalker, _super);
    function AbstractNextPossibleTokensWalker(topProd, path) {
        var _this = _super.call(this) || this;
        _this.topProd = topProd;
        _this.path = path;
        _this.possibleTokTypes = [];
        _this.nextProductionName = "";
        _this.nextProductionOccurrence = 0;
        _this.found = false;
        _this.isAtEndOfPath = false;
        return _this;
    }
    AbstractNextPossibleTokensWalker.prototype.startWalking = function () {
        this.found = false;
        if (this.path.ruleStack[0] !== this.topProd.name) {
            throw Error("The path does not start with the walker's top Rule!");
        }
        // immutable for the win
        this.ruleStack = cloneArr(this.path.ruleStack).reverse(); // intelij bug requires assertion
        this.occurrenceStack = cloneArr(this.path.occurrenceStack).reverse(); // intelij bug requires assertion
        // already verified that the first production is valid, we now seek the 2nd production
        this.ruleStack.pop();
        this.occurrenceStack.pop();
        this.updateExpectedNext();
        this.walk(this.topProd);
        return this.possibleTokTypes;
    };
    AbstractNextPossibleTokensWalker.prototype.walk = function (prod, prevRest) {
        if (prevRest === void 0) { prevRest = []; }
        // stop scanning once we found the path
        if (!this.found) {
            _super.prototype.walk.call(this, prod, prevRest);
        }
    };
    AbstractNextPossibleTokensWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {
        // found the next production, need to keep walking in it
        if (refProd.referencedRule.name === this.nextProductionName &&
            refProd.idx === this.nextProductionOccurrence) {
            var fullRest = currRest.concat(prevRest);
            this.updateExpectedNext();
            this.walk(refProd.referencedRule, fullRest);
        }
    };
    AbstractNextPossibleTokensWalker.prototype.updateExpectedNext = function () {
        // need to consume the Terminal
        if (isEmpty(this.ruleStack)) {
            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are
            // really seeking is the last Terminal...
            this.nextProductionName = "";
            this.nextProductionOccurrence = 0;
            this.isAtEndOfPath = true;
        }
        else {
            this.nextProductionName = this.ruleStack.pop();
            this.nextProductionOccurrence = this.occurrenceStack.pop();
        }
    };
    return AbstractNextPossibleTokensWalker;
}(RestWalker));
var NextAfterTokenWalker = /** @class */ (function (_super) {
    __extends$4(NextAfterTokenWalker, _super);
    function NextAfterTokenWalker(topProd, path) {
        var _this = _super.call(this, topProd, path) || this;
        _this.path = path;
        _this.nextTerminalName = "";
        _this.nextTerminalOccurrence = 0;
        _this.nextTerminalName = _this.path.lastTok.name;
        _this.nextTerminalOccurrence = _this.path.lastTokOccurrence;
        return _this;
    }
    NextAfterTokenWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {
        if (this.isAtEndOfPath &&
            terminal.terminalType.name === this.nextTerminalName &&
            terminal.idx === this.nextTerminalOccurrence &&
            !this.found) {
            var fullRest = currRest.concat(prevRest);
            var restProd = new Alternative({ definition: fullRest });
            this.possibleTokTypes = first(restProd);
            this.found = true;
        }
    };
    return NextAfterTokenWalker;
}(AbstractNextPossibleTokensWalker));
/**
 * This walker only "walks" a single "TOP" level in the Grammar Ast, this means
 * it never "follows" production refs
 */
var AbstractNextTerminalAfterProductionWalker = /** @class */ (function (_super) {
    __extends$4(AbstractNextTerminalAfterProductionWalker, _super);
    function AbstractNextTerminalAfterProductionWalker(topRule, occurrence) {
        var _this = _super.call(this) || this;
        _this.topRule = topRule;
        _this.occurrence = occurrence;
        _this.result = {
            token: undefined,
            occurrence: undefined,
            isEndOfRule: undefined
        };
        return _this;
    }
    AbstractNextTerminalAfterProductionWalker.prototype.startWalking = function () {
        this.walk(this.topRule);
        return this.result;
    };
    return AbstractNextTerminalAfterProductionWalker;
}(RestWalker));
var NextTerminalAfterManyWalker = /** @class */ (function (_super) {
    __extends$4(NextTerminalAfterManyWalker, _super);
    function NextTerminalAfterManyWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NextTerminalAfterManyWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        if (manyProd.idx === this.occurrence) {
            var firstAfterMany = first$1(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterMany === undefined;
            if (firstAfterMany instanceof Terminal) {
                this.result.token = firstAfterMany.terminalType;
                this.result.occurrence = firstAfterMany.idx;
            }
        }
        else {
            _super.prototype.walkMany.call(this, manyProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterManyWalker;
}(AbstractNextTerminalAfterProductionWalker));
var NextTerminalAfterManySepWalker = /** @class */ (function (_super) {
    __extends$4(NextTerminalAfterManySepWalker, _super);
    function NextTerminalAfterManySepWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NextTerminalAfterManySepWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        if (manySepProd.idx === this.occurrence) {
            var firstAfterManySep = first$1(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterManySep === undefined;
            if (firstAfterManySep instanceof Terminal) {
                this.result.token = firstAfterManySep.terminalType;
                this.result.occurrence = firstAfterManySep.idx;
            }
        }
        else {
            _super.prototype.walkManySep.call(this, manySepProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterManySepWalker;
}(AbstractNextTerminalAfterProductionWalker));
var NextTerminalAfterAtLeastOneWalker = /** @class */ (function (_super) {
    __extends$4(NextTerminalAfterAtLeastOneWalker, _super);
    function NextTerminalAfterAtLeastOneWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NextTerminalAfterAtLeastOneWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        if (atLeastOneProd.idx === this.occurrence) {
            var firstAfterAtLeastOne = first$1(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;
            if (firstAfterAtLeastOne instanceof Terminal) {
                this.result.token = firstAfterAtLeastOne.terminalType;
                this.result.occurrence = firstAfterAtLeastOne.idx;
            }
        }
        else {
            _super.prototype.walkAtLeastOne.call(this, atLeastOneProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterAtLeastOneWalker;
}(AbstractNextTerminalAfterProductionWalker));
// TODO: reduce code duplication in the AfterWalkers
var NextTerminalAfterAtLeastOneSepWalker = /** @class */ (function (_super) {
    __extends$4(NextTerminalAfterAtLeastOneSepWalker, _super);
    function NextTerminalAfterAtLeastOneSepWalker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NextTerminalAfterAtLeastOneSepWalker.prototype.walkAtLeastOneSep = function (atleastOneSepProd, currRest, prevRest) {
        if (atleastOneSepProd.idx === this.occurrence) {
            var firstAfterfirstAfterAtLeastOneSep = first$1(currRest.concat(prevRest));
            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;
            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {
                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;
                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;
            }
        }
        else {
            _super.prototype.walkAtLeastOneSep.call(this, atleastOneSepProd, currRest, prevRest);
        }
    };
    return NextTerminalAfterAtLeastOneSepWalker;
}(AbstractNextTerminalAfterProductionWalker));
function possiblePathsFrom(targetDef, maxLength, currPath) {
    if (currPath === void 0) { currPath = []; }
    // avoid side effects
    currPath = cloneArr(currPath);
    var result = [];
    var i = 0;
    // TODO: avoid inner funcs
    function remainingPathWith(nextDef) {
        return nextDef.concat(drop(targetDef, i + 1));
    }
    // TODO: avoid inner funcs
    function getAlternativesForProd(definition) {
        var alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);
        return result.concat(alternatives);
    }
    /**
     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the
     * following (rest) of the targetDef.
     *
     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the
     * the optional production.
     */
    while (currPath.length < maxLength && i < targetDef.length) {
        var prod = targetDef[i];
        /* istanbul ignore else */
        if (prod instanceof Alternative) {
            return getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof NonTerminal) {
            return getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof Option) {
            result = getAlternativesForProd(prod.definition);
        }
        else if (prod instanceof RepetitionMandatory) {
            var newDef = prod.definition.concat([
                new Repetition({
                    definition: prod.definition
                })
            ]);
            return getAlternativesForProd(newDef);
        }
        else if (prod instanceof RepetitionMandatoryWithSeparator) {
            var newDef = [
                new Alternative({ definition: prod.definition }),
                new Repetition({
                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition)
                })
            ];
            return getAlternativesForProd(newDef);
        }
        else if (prod instanceof RepetitionWithSeparator) {
            var newDef = prod.definition.concat([
                new Repetition({
                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition)
                })
            ]);
            result = getAlternativesForProd(newDef);
        }
        else if (prod instanceof Repetition) {
            var newDef = prod.definition.concat([
                new Repetition({
                    definition: prod.definition
                })
            ]);
            result = getAlternativesForProd(newDef);
        }
        else if (prod instanceof Alternation) {
            forEach(prod.definition, function (currAlt) {
                // TODO: this is a limited check for empty alternatives
                //   It would prevent a common case of infinite loops during parser initialization.
                //   However **in-directly** empty alternatives may still cause issues.
                if (isEmpty(currAlt.definition) === false) {
                    result = getAlternativesForProd(currAlt.definition);
                }
            });
            return result;
        }
        else if (prod instanceof Terminal) {
            currPath.push(prod.terminalType);
        }
        else {
            throw Error("non exhaustive match");
        }
        i++;
    }
    result.push({
        partialPath: currPath,
        suffixDef: drop(targetDef, i)
    });
    return result;
}
function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {
    var EXIT_NON_TERMINAL = "EXIT_NONE_TERMINAL";
    // to avoid creating a new Array each time.
    var EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];
    var EXIT_ALTERNATIVE = "EXIT_ALTERNATIVE";
    var foundCompletePath = false;
    var tokenVectorLength = tokenVector.length;
    var minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;
    var result = [];
    var possiblePaths = [];
    possiblePaths.push({
        idx: -1,
        def: initialDef,
        ruleStack: [],
        occurrenceStack: []
    });
    while (!isEmpty(possiblePaths)) {
        var currPath = possiblePaths.pop();
        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)
        if (currPath === EXIT_ALTERNATIVE) {
            if (foundCompletePath &&
                last(possiblePaths).idx <= minimalAlternativesIndex) {
                // remove irrelevant alternative
                possiblePaths.pop();
            }
            continue;
        }
        var currDef = currPath.def;
        var currIdx = currPath.idx;
        var currRuleStack = currPath.ruleStack;
        var currOccurrenceStack = currPath.occurrenceStack;
        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT
        if (isEmpty(currDef)) {
            continue;
        }
        var prod = currDef[0];
        /* istanbul ignore else */
        if (prod === EXIT_NON_TERMINAL) {
            var nextPath = {
                idx: currIdx,
                def: drop(currDef),
                ruleStack: dropRight(currRuleStack),
                occurrenceStack: dropRight(currOccurrenceStack)
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof Terminal) {
            /* istanbul ignore else */
            if (currIdx < tokenVectorLength - 1) {
                var nextIdx = currIdx + 1;
                var actualToken = tokenVector[nextIdx];
                if (tokMatcher(actualToken, prod.terminalType)) {
                    var nextPath = {
                        idx: nextIdx,
                        def: drop(currDef),
                        ruleStack: currRuleStack,
                        occurrenceStack: currOccurrenceStack
                    };
                    possiblePaths.push(nextPath);
                }
                // end of the line
            }
            else if (currIdx === tokenVectorLength - 1) {
                // IGNORE ABOVE ELSE
                result.push({
                    nextTokenType: prod.terminalType,
                    nextTokenOccurrence: prod.idx,
                    ruleStack: currRuleStack,
                    occurrenceStack: currOccurrenceStack
                });
                foundCompletePath = true;
            }
            else {
                throw Error("non exhaustive match");
            }
        }
        else if (prod instanceof NonTerminal) {
            var newRuleStack = cloneArr(currRuleStack);
            newRuleStack.push(prod.nonTerminalName);
            var newOccurrenceStack = cloneArr(currOccurrenceStack);
            newOccurrenceStack.push(prod.idx);
            var nextPath = {
                idx: currIdx,
                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),
                ruleStack: newRuleStack,
                occurrenceStack: newOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof Option) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            var nextPathWith = {
                idx: currIdx,
                def: prod.definition.concat(drop(currDef)),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof RepetitionMandatory) {
            // TODO:(THE NEW operators here take a while...) (convert once?)
            var secondIteration = new Repetition({
                definition: prod.definition,
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([secondIteration], drop(currDef));
            var nextPath = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof RepetitionMandatoryWithSeparator) {
            // TODO:(THE NEW operators here take a while...) (convert once?)
            var separatorGast = new Terminal({
                terminalType: prod.separator
            });
            var secondIteration = new Repetition({
                definition: [separatorGast].concat(prod.definition),
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([secondIteration], drop(currDef));
            var nextPath = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPath);
        }
        else if (prod instanceof RepetitionWithSeparator) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            var separatorGast = new Terminal({
                terminalType: prod.separator
            });
            var nthRepetition = new Repetition({
                definition: [separatorGast].concat(prod.definition),
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([nthRepetition], drop(currDef));
            var nextPathWith = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof Repetition) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            var nextPathWithout = {
                idx: currIdx,
                def: drop(currDef),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWithout);
            // required marker to avoid backtracking paths whose higher priority alternatives already matched
            possiblePaths.push(EXIT_ALTERNATIVE);
            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?
            var nthRepetition = new Repetition({
                definition: prod.definition,
                idx: prod.idx
            });
            var nextDef = prod.definition.concat([nthRepetition], drop(currDef));
            var nextPathWith = {
                idx: currIdx,
                def: nextDef,
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            };
            possiblePaths.push(nextPathWith);
        }
        else if (prod instanceof Alternation) {
            // the order of alternatives is meaningful, FILO (Last path will be traversed first).
            for (var i = prod.definition.length - 1; i >= 0; i--) {
                var currAlt = prod.definition[i];
                var currAltPath = {
                    idx: currIdx,
                    def: currAlt.definition.concat(drop(currDef)),
                    ruleStack: currRuleStack,
                    occurrenceStack: currOccurrenceStack
                };
                possiblePaths.push(currAltPath);
                possiblePaths.push(EXIT_ALTERNATIVE);
            }
        }
        else if (prod instanceof Alternative) {
            possiblePaths.push({
                idx: currIdx,
                def: prod.definition.concat(drop(currDef)),
                ruleStack: currRuleStack,
                occurrenceStack: currOccurrenceStack
            });
        }
        else if (prod instanceof Rule) {
            // last because we should only encounter at most a single one of these per invocation.
            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));
        }
        else {
            throw Error("non exhaustive match");
        }
    }
    return result;
}
function expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {
    var newRuleStack = cloneArr(currRuleStack);
    newRuleStack.push(topRule.name);
    var newCurrOccurrenceStack = cloneArr(currOccurrenceStack);
    // top rule is always assumed to have been called with occurrence index 1
    newCurrOccurrenceStack.push(1);
    return {
        idx: currIdx,
        def: topRule.definition,
        ruleStack: newRuleStack,
        occurrenceStack: newCurrOccurrenceStack
    };
}

var __extends$3 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var PROD_TYPE;
(function (PROD_TYPE) {
    PROD_TYPE[PROD_TYPE["OPTION"] = 0] = "OPTION";
    PROD_TYPE[PROD_TYPE["REPETITION"] = 1] = "REPETITION";
    PROD_TYPE[PROD_TYPE["REPETITION_MANDATORY"] = 2] = "REPETITION_MANDATORY";
    PROD_TYPE[PROD_TYPE["REPETITION_MANDATORY_WITH_SEPARATOR"] = 3] = "REPETITION_MANDATORY_WITH_SEPARATOR";
    PROD_TYPE[PROD_TYPE["REPETITION_WITH_SEPARATOR"] = 4] = "REPETITION_WITH_SEPARATOR";
    PROD_TYPE[PROD_TYPE["ALTERNATION"] = 5] = "ALTERNATION";
})(PROD_TYPE || (PROD_TYPE = {}));
function getProdType(prod) {
    /* istanbul ignore else */
    if (prod instanceof Option) {
        return PROD_TYPE.OPTION;
    }
    else if (prod instanceof Repetition) {
        return PROD_TYPE.REPETITION;
    }
    else if (prod instanceof RepetitionMandatory) {
        return PROD_TYPE.REPETITION_MANDATORY;
    }
    else if (prod instanceof RepetitionMandatoryWithSeparator) {
        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;
    }
    else if (prod instanceof RepetitionWithSeparator) {
        return PROD_TYPE.REPETITION_WITH_SEPARATOR;
    }
    else if (prod instanceof Alternation) {
        return PROD_TYPE.ALTERNATION;
    }
    else {
        throw Error("non exhaustive match");
    }
}
function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {
    var lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);
    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)
        ? tokenStructuredMatcherNoCategories
        : tokenStructuredMatcher;
    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);
}
/**
 *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare
 *  the lookahead "inside" the production and the lookahead immediately "after" it in the same top level rule (context free).
 *
 *  Example: given a production:
 *  ABC(DE)?DF
 *
 *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two
 *  alternatives.
 *
 *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.
 */
function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {
    var lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);
    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)
        ? tokenStructuredMatcherNoCategories
        : tokenStructuredMatcher;
    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);
}
function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {
    var numOfAlts = alts.length;
    var areAllOneTokenLookahead = every(alts, function (currAlt) {
        return every(currAlt, function (currPath) {
            return currPath.length === 1;
        });
    });
    // This version takes into account the predicates as well.
    if (hasPredicates) {
        /**
         * @returns {number} - The chosen alternative index
         */
        return function (orAlts) {
            // unfortunately the predicates must be extracted every single time
            // as they cannot be cached due to references to parameters(vars) which are no longer valid.
            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)
            var predicates = map(orAlts, function (currAlt) { return currAlt.GATE; });
            for (var t = 0; t < numOfAlts; t++) {
                var currAlt = alts[t];
                var currNumOfPaths = currAlt.length;
                var currPredicate = predicates[t];
                if (currPredicate !== undefined && currPredicate.call(this) === false) {
                    // if the predicate does not match there is no point in checking the paths
                    continue;
                }
                nextPath: for (var j = 0; j < currNumOfPaths; j++) {
                    var currPath = currAlt[j];
                    var currPathLength = currPath.length;
                    for (var i = 0; i < currPathLength; i++) {
                        var nextToken = this.LA(i + 1);
                        if (tokenMatcher(nextToken, currPath[i]) === false) {
                            // mismatch in current path
                            // try the next pth
                            continue nextPath;
                        }
                    }
                    // found a full path that matches.
                    // this will also work for an empty ALT as the loop will be skipped
                    return t;
                }
                // none of the paths for the current alternative matched
                // try the next alternative
            }
            // none of the alternatives could be matched
            return undefined;
        };
    }
    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {
        // optimized (common) case of all the lookaheads paths requiring only
        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.
        var singleTokenAlts = map(alts, function (currAlt) {
            return flatten(currAlt);
        });
        var choiceToAlt_1 = reduce(singleTokenAlts, function (result, currAlt, idx) {
            forEach(currAlt, function (currTokType) {
                if (!has(result, currTokType.tokenTypeIdx)) {
                    result[currTokType.tokenTypeIdx] = idx;
                }
                forEach(currTokType.categoryMatches, function (currExtendingType) {
                    if (!has(result, currExtendingType)) {
                        result[currExtendingType] = idx;
                    }
                });
            });
            return result;
        }, []);
        /**
         * @returns {number} - The chosen alternative index
         */
        return function () {
            var nextToken = this.LA(1);
            return choiceToAlt_1[nextToken.tokenTypeIdx];
        };
    }
    else {
        // optimized lookahead without needing to check the predicates at all.
        // this causes code duplication which is intentional to improve performance.
        /**
         * @returns {number} - The chosen alternative index
         */
        return function () {
            for (var t = 0; t < numOfAlts; t++) {
                var currAlt = alts[t];
                var currNumOfPaths = currAlt.length;
                nextPath: for (var j = 0; j < currNumOfPaths; j++) {
                    var currPath = currAlt[j];
                    var currPathLength = currPath.length;
                    for (var i = 0; i < currPathLength; i++) {
                        var nextToken = this.LA(i + 1);
                        if (tokenMatcher(nextToken, currPath[i]) === false) {
                            // mismatch in current path
                            // try the next pth
                            continue nextPath;
                        }
                    }
                    // found a full path that matches.
                    // this will also work for an empty ALT as the loop will be skipped
                    return t;
                }
                // none of the paths for the current alternative matched
                // try the next alternative
            }
            // none of the alternatives could be matched
            return undefined;
        };
    }
}
function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {
    var areAllOneTokenLookahead = every(alt, function (currPath) {
        return currPath.length === 1;
    });
    var numOfPaths = alt.length;
    // optimized (common) case of all the lookaheads paths requiring only
    // a single token lookahead.
    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {
        var singleTokensTypes = flatten(alt);
        if (singleTokensTypes.length === 1 &&
            isEmpty(singleTokensTypes[0].categoryMatches)) {
            var expectedTokenType = singleTokensTypes[0];
            var expectedTokenUniqueKey_1 = expectedTokenType.tokenTypeIdx;
            return function () {
                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey_1;
            };
        }
        else {
            var choiceToAlt_2 = reduce(singleTokensTypes, function (result, currTokType, idx) {
                result[currTokType.tokenTypeIdx] = true;
                forEach(currTokType.categoryMatches, function (currExtendingType) {
                    result[currExtendingType] = true;
                });
                return result;
            }, []);
            return function () {
                var nextToken = this.LA(1);
                return choiceToAlt_2[nextToken.tokenTypeIdx] === true;
            };
        }
    }
    else {
        return function () {
            nextPath: for (var j = 0; j < numOfPaths; j++) {
                var currPath = alt[j];
                var currPathLength = currPath.length;
                for (var i = 0; i < currPathLength; i++) {
                    var nextToken = this.LA(i + 1);
                    if (tokenMatcher(nextToken, currPath[i]) === false) {
                        // mismatch in current path
                        // try the next pth
                        continue nextPath;
                    }
                }
                // found a full path that matches.
                return true;
            }
            // none of the paths matched
            return false;
        };
    }
}
var RestDefinitionFinderWalker = /** @class */ (function (_super) {
    __extends$3(RestDefinitionFinderWalker, _super);
    function RestDefinitionFinderWalker(topProd, targetOccurrence, targetProdType) {
        var _this = _super.call(this) || this;
        _this.topProd = topProd;
        _this.targetOccurrence = targetOccurrence;
        _this.targetProdType = targetProdType;
        return _this;
    }
    RestDefinitionFinderWalker.prototype.startWalking = function () {
        this.walk(this.topProd);
        return this.restDef;
    };
    RestDefinitionFinderWalker.prototype.checkIsTarget = function (node, expectedProdType, currRest, prevRest) {
        if (node.idx === this.targetOccurrence &&
            this.targetProdType === expectedProdType) {
            this.restDef = currRest.concat(prevRest);
            return true;
        }
        // performance optimization, do not iterate over the entire Grammar ast after we have found the target
        return false;
    };
    RestDefinitionFinderWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {
        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, optionProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {
        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, atLeastOneProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {
        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, atLeastOneSepProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {
        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, manyProd, currRest, prevRest);
        }
    };
    RestDefinitionFinderWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {
        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {
            _super.prototype.walkOption.call(this, manySepProd, currRest, prevRest);
        }
    };
    return RestDefinitionFinderWalker;
}(RestWalker));
/**
 * Returns the definition of a target production in a top level level rule.
 */
var InsideDefinitionFinderVisitor = /** @class */ (function (_super) {
    __extends$3(InsideDefinitionFinderVisitor, _super);
    function InsideDefinitionFinderVisitor(targetOccurrence, targetProdType, targetRef) {
        var _this = _super.call(this) || this;
        _this.targetOccurrence = targetOccurrence;
        _this.targetProdType = targetProdType;
        _this.targetRef = targetRef;
        _this.result = [];
        return _this;
    }
    InsideDefinitionFinderVisitor.prototype.checkIsTarget = function (node, expectedProdName) {
        if (node.idx === this.targetOccurrence &&
            this.targetProdType === expectedProdName &&
            (this.targetRef === undefined || node === this.targetRef)) {
            this.result = node.definition;
        }
    };
    InsideDefinitionFinderVisitor.prototype.visitOption = function (node) {
        this.checkIsTarget(node, PROD_TYPE.OPTION);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetition = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatory = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);
    };
    InsideDefinitionFinderVisitor.prototype.visitRepetitionWithSeparator = function (node) {
        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);
    };
    InsideDefinitionFinderVisitor.prototype.visitAlternation = function (node) {
        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);
    };
    return InsideDefinitionFinderVisitor;
}(GAstVisitor));
function initializeArrayOfArrays(size) {
    var result = new Array(size);
    for (var i = 0; i < size; i++) {
        result[i] = [];
    }
    return result;
}
/**
 * A sort of hash function between a Path in the grammar and a string.
 * Note that this returns multiple "hashes" to support the scenario of token categories.
 * -  A single path with categories may match multiple **actual** paths.
 */
function pathToHashKeys(path) {
    var keys = [""];
    for (var i = 0; i < path.length; i++) {
        var tokType = path[i];
        var longerKeys = [];
        for (var j = 0; j < keys.length; j++) {
            var currShorterKey = keys[j];
            longerKeys.push(currShorterKey + "_" + tokType.tokenTypeIdx);
            for (var t = 0; t < tokType.categoryMatches.length; t++) {
                var categoriesKeySuffix = "_" + tokType.categoryMatches[t];
                longerKeys.push(currShorterKey + categoriesKeySuffix);
            }
        }
        keys = longerKeys;
    }
    return keys;
}
/**
 * Imperative style due to being called from a hot spot
 */
function isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {
    for (var currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {
        // We only want to test vs the other alternatives
        if (currAltIdx === idx) {
            continue;
        }
        var otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];
        for (var searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {
            var searchKey = searchPathKeys[searchIdx];
            if (otherAltKnownPathsKeys[searchKey] === true) {
                return false;
            }
        }
    }
    // None of the SearchPathKeys were found in any of the other alternatives
    return true;
}
function lookAheadSequenceFromAlternatives(altsDefs, k) {
    var partialAlts = map(altsDefs, function (currAlt) { return possiblePathsFrom([currAlt], 1); });
    var finalResult = initializeArrayOfArrays(partialAlts.length);
    var altsHashes = map(partialAlts, function (currAltPaths) {
        var dict = {};
        forEach(currAltPaths, function (item) {
            var keys = pathToHashKeys(item.partialPath);
            forEach(keys, function (currKey) {
                dict[currKey] = true;
            });
        });
        return dict;
    });
    var newData = partialAlts;
    // maxLookahead loop
    for (var pathLength = 1; pathLength <= k; pathLength++) {
        var currDataset = newData;
        newData = initializeArrayOfArrays(currDataset.length);
        var _loop_1 = function (altIdx) {
            var currAltPathsAndSuffixes = currDataset[altIdx];
            // paths in current alternative loop
            for (var currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {
                var currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;
                var suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;
                var prefixKeys = pathToHashKeys(currPathPrefix);
                var isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);
                // End of the line for this path.
                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {
                    var currAltResult = finalResult[altIdx];
                    // TODO: Can we implement a containsPath using Maps/Dictionaries?
                    if (containsPath(currAltResult, currPathPrefix) === false) {
                        currAltResult.push(currPathPrefix);
                        // Update all new  keys for the current path.
                        for (var j = 0; j < prefixKeys.length; j++) {
                            var currKey = prefixKeys[j];
                            altsHashes[altIdx][currKey] = true;
                        }
                    }
                }
                // Expand longer paths
                else {
                    var newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);
                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);
                    // Update keys for new known paths
                    forEach(newPartialPathsAndSuffixes, function (item) {
                        var prefixKeys = pathToHashKeys(item.partialPath);
                        forEach(prefixKeys, function (key) {
                            altsHashes[altIdx][key] = true;
                        });
                    });
                }
            }
        };
        // alternatives loop
        for (var altIdx = 0; altIdx < currDataset.length; altIdx++) {
            _loop_1(altIdx);
        }
    }
    return finalResult;
}
function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {
    var visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);
    ruleGrammar.accept(visitor);
    return lookAheadSequenceFromAlternatives(visitor.result, k);
}
function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {
    var insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);
    ruleGrammar.accept(insideDefVisitor);
    var insideDef = insideDefVisitor.result;
    var afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);
    var afterDef = afterDefWalker.startWalking();
    var insideFlat = new Alternative({ definition: insideDef });
    var afterFlat = new Alternative({ definition: afterDef });
    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);
}
function containsPath(alternative, searchPath) {
    compareOtherPath: for (var i = 0; i < alternative.length; i++) {
        var otherPath = alternative[i];
        if (otherPath.length !== searchPath.length) {
            continue;
        }
        for (var j = 0; j < otherPath.length; j++) {
            var searchTok = searchPath[j];
            var otherTok = otherPath[j];
            var matchingTokens = searchTok === otherTok ||
                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;
            if (matchingTokens === false) {
                continue compareOtherPath;
            }
        }
        return true;
    }
    return false;
}
function isStrictPrefixOfPath(prefix, other) {
    return (prefix.length < other.length &&
        every(prefix, function (tokType, idx) {
            var otherTokType = other[idx];
            return (tokType === otherTokType ||
                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);
        }));
}
function areTokenCategoriesNotUsed(lookAheadPaths) {
    return every(lookAheadPaths, function (singleAltPaths) {
        return every(singleAltPaths, function (singlePath) {
            return every(singlePath, function (token) { return isEmpty(token.categoryMatches); });
        });
    });
}

var __extends$2 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function validateGrammar$1(topLevels, globalMaxLookahead, tokenTypes, errMsgProvider, grammarName) {
    var duplicateErrors = map(topLevels, function (currTopLevel) {
        return validateDuplicateProductions(currTopLevel, errMsgProvider);
    });
    var leftRecursionErrors = map(topLevels, function (currTopRule) {
        return validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider);
    });
    var emptyAltErrors = [];
    var ambiguousAltsErrors = [];
    var emptyRepetitionErrors = [];
    // left recursion could cause infinite loops in the following validations.
    // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.
    if (every(leftRecursionErrors, isEmpty)) {
        emptyAltErrors = map(topLevels, function (currTopRule) {
            return validateEmptyOrAlternative(currTopRule, errMsgProvider);
        });
        ambiguousAltsErrors = map(topLevels, function (currTopRule) {
            return validateAmbiguousAlternationAlternatives(currTopRule, globalMaxLookahead, errMsgProvider);
        });
        emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(topLevels, globalMaxLookahead, errMsgProvider);
    }
    var termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);
    var tooManyAltsErrors = map(topLevels, function (curRule) {
        return validateTooManyAlts(curRule, errMsgProvider);
    });
    var duplicateRulesError = map(topLevels, function (curRule) {
        return validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider);
    });
    return (flatten(duplicateErrors.concat(emptyRepetitionErrors, leftRecursionErrors, emptyAltErrors, ambiguousAltsErrors, termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError)));
}
function validateDuplicateProductions(topLevelRule, errMsgProvider) {
    var collectorVisitor = new OccurrenceValidationCollector();
    topLevelRule.accept(collectorVisitor);
    var allRuleProductions = collectorVisitor.allProductions;
    var productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);
    var duplicates = pick(productionGroups, function (currGroup) {
        return currGroup.length > 1;
    });
    var errors = map(values(duplicates), function (currDuplicates) {
        var firstProd = first$1(currDuplicates);
        var msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);
        var dslName = getProductionDslName(firstProd);
        var defError = {
            message: msg,
            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,
            ruleName: topLevelRule.name,
            dslName: dslName,
            occurrence: firstProd.idx
        };
        var param = getExtraProductionArgument(firstProd);
        if (param) {
            defError.parameter = param;
        }
        return defError;
    });
    return errors;
}
function identifyProductionForDuplicates(prod) {
    return getProductionDslName(prod) + "_#_" + prod.idx + "_#_" + getExtraProductionArgument(prod);
}
function getExtraProductionArgument(prod) {
    if (prod instanceof Terminal) {
        return prod.terminalType.name;
    }
    else if (prod instanceof NonTerminal) {
        return prod.nonTerminalName;
    }
    else {
        return "";
    }
}
var OccurrenceValidationCollector = /** @class */ (function (_super) {
    __extends$2(OccurrenceValidationCollector, _super);
    function OccurrenceValidationCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.allProductions = [];
        return _this;
    }
    OccurrenceValidationCollector.prototype.visitNonTerminal = function (subrule) {
        this.allProductions.push(subrule);
    };
    OccurrenceValidationCollector.prototype.visitOption = function (option) {
        this.allProductions.push(option);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.allProductions.push(manySep);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.allProductions.push(atLeastOne);
    };
    OccurrenceValidationCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.allProductions.push(atLeastOneSep);
    };
    OccurrenceValidationCollector.prototype.visitRepetition = function (many) {
        this.allProductions.push(many);
    };
    OccurrenceValidationCollector.prototype.visitAlternation = function (or) {
        this.allProductions.push(or);
    };
    OccurrenceValidationCollector.prototype.visitTerminal = function (terminal) {
        this.allProductions.push(terminal);
    };
    return OccurrenceValidationCollector;
}(GAstVisitor));
function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {
    var errors = [];
    var occurrences = reduce(allRules, function (result, curRule) {
        if (curRule.name === rule.name) {
            return result + 1;
        }
        return result;
    }, 0);
    if (occurrences > 1) {
        var errMsg = errMsgProvider.buildDuplicateRuleNameError({
            topLevelRule: rule,
            grammarName: className
        });
        errors.push({
            message: errMsg,
            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,
            ruleName: rule.name
        });
    }
    return errors;
}
// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?
// This is not part of the IGrammarErrorProvider because the validation cannot be performed on
// The grammar structure, only at runtime.
function validateRuleIsOverridden(ruleName, definedRulesNames, className) {
    var errors = [];
    var errMsg;
    if (!contains(definedRulesNames, ruleName)) {
        errMsg =
            "Invalid rule override, rule: ->" + ruleName + "<- cannot be overridden in the grammar: ->" + className + "<-" +
                "as it is not defined in any of the super grammars ";
        errors.push({
            message: errMsg,
            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,
            ruleName: ruleName
        });
    }
    return errors;
}
function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path) {
    if (path === void 0) { path = []; }
    var errors = [];
    var nextNonTerminals = getFirstNoneTerminal(currRule.definition);
    if (isEmpty(nextNonTerminals)) {
        return [];
    }
    else {
        var ruleName = topRule.name;
        var foundLeftRecursion = contains(nextNonTerminals, topRule);
        if (foundLeftRecursion) {
            errors.push({
                message: errMsgProvider.buildLeftRecursionError({
                    topLevelRule: topRule,
                    leftRecursionPath: path
                }),
                type: ParserDefinitionErrorType.LEFT_RECURSION,
                ruleName: ruleName
            });
        }
        // we are only looking for cyclic paths leading back to the specific topRule
        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...
        var validNextSteps = difference(nextNonTerminals, path.concat([topRule]));
        var errorsFromNextSteps = map(validNextSteps, function (currRefRule) {
            var newPath = cloneArr(path);
            newPath.push(currRefRule);
            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);
        });
        return errors.concat(flatten(errorsFromNextSteps));
    }
}
function getFirstNoneTerminal(definition) {
    var result = [];
    if (isEmpty(definition)) {
        return result;
    }
    var firstProd = first$1(definition);
    /* istanbul ignore else */
    if (firstProd instanceof NonTerminal) {
        result.push(firstProd.referencedRule);
    }
    else if (firstProd instanceof Alternative ||
        firstProd instanceof Option ||
        firstProd instanceof RepetitionMandatory ||
        firstProd instanceof RepetitionMandatoryWithSeparator ||
        firstProd instanceof RepetitionWithSeparator ||
        firstProd instanceof Repetition) {
        result = result.concat(getFirstNoneTerminal(firstProd.definition));
    }
    else if (firstProd instanceof Alternation) {
        // each sub definition in alternation is a FLAT
        result = flatten(map(firstProd.definition, function (currSubDef) {
            return getFirstNoneTerminal(currSubDef.definition);
        }));
    }
    else if (firstProd instanceof Terminal) ;
    else {
        throw Error("non exhaustive match");
    }
    var isFirstOptional = isOptionalProd(firstProd);
    var hasMore = definition.length > 1;
    if (isFirstOptional && hasMore) {
        var rest = drop(definition);
        return result.concat(getFirstNoneTerminal(rest));
    }
    else {
        return result;
    }
}
var OrCollector = /** @class */ (function (_super) {
    __extends$2(OrCollector, _super);
    function OrCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.alternations = [];
        return _this;
    }
    OrCollector.prototype.visitAlternation = function (node) {
        this.alternations.push(node);
    };
    return OrCollector;
}(GAstVisitor));
function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    var errors = reduce(ors, function (errors, currOr) {
        var exceptLast = dropRight(currOr.definition);
        var currErrors = map(exceptLast, function (currAlternative, currAltIdx) {
            var possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], null, 1);
            if (isEmpty(possibleFirstInAlt)) {
                return {
                    message: errMsgProvider.buildEmptyAlternationError({
                        topLevelRule: topLevelRule,
                        alternation: currOr,
                        emptyChoiceIdx: currAltIdx
                    }),
                    type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,
                    ruleName: topLevelRule.name,
                    occurrence: currOr.idx,
                    alternative: currAltIdx + 1
                };
            }
            else {
                return null;
            }
        });
        return errors.concat(compact(currErrors));
    }, []);
    return errors;
}
function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    // New Handling of ignoring ambiguities
    // - https://github.com/SAP/chevrotain/issues/869
    ors = reject(ors, function (currOr) { return currOr.ignoreAmbiguities === true; });
    var errors = reduce(ors, function (result, currOr) {
        var currOccurrence = currOr.idx;
        var actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;
        var alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);
        var altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);
        var altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);
        return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors);
    }, []);
    return errors;
}
var RepetionCollector = /** @class */ (function (_super) {
    __extends$2(RepetionCollector, _super);
    function RepetionCollector() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.allProductions = [];
        return _this;
    }
    RepetionCollector.prototype.visitRepetitionWithSeparator = function (manySep) {
        this.allProductions.push(manySep);
    };
    RepetionCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {
        this.allProductions.push(atLeastOne);
    };
    RepetionCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {
        this.allProductions.push(atLeastOneSep);
    };
    RepetionCollector.prototype.visitRepetition = function (many) {
        this.allProductions.push(many);
    };
    return RepetionCollector;
}(GAstVisitor));
function validateTooManyAlts(topLevelRule, errMsgProvider) {
    var orCollector = new OrCollector();
    topLevelRule.accept(orCollector);
    var ors = orCollector.alternations;
    var errors = reduce(ors, function (errors, currOr) {
        if (currOr.definition.length > 255) {
            errors.push({
                message: errMsgProvider.buildTooManyAlternativesError({
                    topLevelRule: topLevelRule,
                    alternation: currOr
                }),
                type: ParserDefinitionErrorType.TOO_MANY_ALTS,
                ruleName: topLevelRule.name,
                occurrence: currOr.idx
            });
        }
        return errors;
    }, []);
    return errors;
}
function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {
    var errors = [];
    forEach(topLevelRules, function (currTopRule) {
        var collectorVisitor = new RepetionCollector();
        currTopRule.accept(collectorVisitor);
        var allRuleProductions = collectorVisitor.allProductions;
        forEach(allRuleProductions, function (currProd) {
            var prodType = getProdType(currProd);
            var actualMaxLookahead = currProd.maxLookahead || maxLookahead;
            var currOccurrence = currProd.idx;
            var paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);
            var pathsInsideProduction = paths[0];
            if (isEmpty(flatten(pathsInsideProduction))) {
                var errMsg = errMsgProvider.buildEmptyRepetitionError({
                    topLevelRule: currTopRule,
                    repetition: currProd
                });
                errors.push({
                    message: errMsg,
                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,
                    ruleName: currTopRule.name
                });
            }
        });
    });
    return errors;
}
function checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {
    var foundAmbiguousPaths = [];
    var identicalAmbiguities = reduce(alternatives, function (result, currAlt, currAltIdx) {
        // ignore (skip) ambiguities with this alternative
        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {
            return result;
        }
        forEach(currAlt, function (currPath) {
            var altsCurrPathAppearsIn = [currAltIdx];
            forEach(alternatives, function (currOtherAlt, currOtherAltIdx) {
                if (currAltIdx !== currOtherAltIdx &&
                    containsPath(currOtherAlt, currPath) &&
                    // ignore (skip) ambiguities with this "other" alternative
                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {
                    altsCurrPathAppearsIn.push(currOtherAltIdx);
                }
            });
            if (altsCurrPathAppearsIn.length > 1 &&
                !containsPath(foundAmbiguousPaths, currPath)) {
                foundAmbiguousPaths.push(currPath);
                result.push({
                    alts: altsCurrPathAppearsIn,
                    path: currPath
                });
            }
        });
        return result;
    }, []);
    var currErrors = map(identicalAmbiguities, function (currAmbDescriptor) {
        var ambgIndices = map(currAmbDescriptor.alts, function (currAltIdx) { return currAltIdx + 1; });
        var currMessage = errMsgProvider.buildAlternationAmbiguityError({
            topLevelRule: rule,
            alternation: alternation,
            ambiguityIndices: ambgIndices,
            prefixPath: currAmbDescriptor.path
        });
        return {
            message: currMessage,
            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,
            ruleName: rule.name,
            occurrence: alternation.idx,
            alternatives: [currAmbDescriptor.alts]
        };
    });
    return currErrors;
}
function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {
    var errors = [];
    // flatten
    var pathsAndIndices = reduce(alternatives, function (result, currAlt, idx) {
        var currPathsAndIdx = map(currAlt, function (currPath) {
            return { idx: idx, path: currPath };
        });
        return result.concat(currPathsAndIdx);
    }, []);
    forEach(pathsAndIndices, function (currPathAndIdx) {
        var alternativeGast = alternation.definition[currPathAndIdx.idx];
        // ignore (skip) ambiguities with this alternative
        if (alternativeGast.ignoreAmbiguities === true) {
            return;
        }
        var targetIdx = currPathAndIdx.idx;
        var targetPath = currPathAndIdx.path;
        var prefixAmbiguitiesPathsAndIndices = findAll(pathsAndIndices, function (searchPathAndIdx) {
            // prefix ambiguity can only be created from lower idx (higher priority) path
            return (
            // ignore (skip) ambiguities with this "other" alternative
            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==
                true &&
                searchPathAndIdx.idx < targetIdx &&
                // checking for strict prefix because identical lookaheads
                // will be be detected using a different validation.
                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));
        });
        var currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, function (currAmbPathAndIdx) {
            var ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];
            var occurrence = alternation.idx === 0 ? "" : alternation.idx;
            var message = errMsgProvider.buildAlternationPrefixAmbiguityError({
                topLevelRule: rule,
                alternation: alternation,
                ambiguityIndices: ambgIndices,
                prefixPath: currAmbPathAndIdx.path
            });
            return {
                message: message,
                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,
                ruleName: rule.name,
                occurrence: occurrence,
                alternatives: ambgIndices
            };
        });
        errors = errors.concat(currPathPrefixErrors);
    });
    return errors;
}
function checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {
    var errors = [];
    var tokenNames = map(tokenTypes, function (currToken) { return currToken.name; });
    forEach(topLevels, function (currRule) {
        var currRuleName = currRule.name;
        if (contains(tokenNames, currRuleName)) {
            var errMsg = errMsgProvider.buildNamespaceConflictError(currRule);
            errors.push({
                message: errMsg,
                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,
                ruleName: currRuleName
            });
        }
    });
    return errors;
}

function resolveGrammar(options) {
    options = defaults(options, {
        errMsgProvider: defaultGrammarResolverErrorProvider
    });
    var topRulesTable = {};
    forEach(options.rules, function (rule) {
        topRulesTable[rule.name] = rule;
    });
    return resolveGrammar$1(topRulesTable, options.errMsgProvider);
}
function validateGrammar(options) {
    options = defaults(options, {
        errMsgProvider: defaultGrammarValidatorErrorProvider
    });
    return validateGrammar$1(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);
}
function assignOccurrenceIndices(options) {
    forEach(options.rules, function (currRule) {
        var methodsCollector = new DslMethodsCollectorVisitor();
        currRule.accept(methodsCollector);
        forEach(methodsCollector.dslMethods, function (methods) {
            forEach(methods, function (currMethod, arrIdx) {
                currMethod.idx = arrIdx + 1;
            });
        });
    });
}

var __extends$1 = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var MISMATCHED_TOKEN_EXCEPTION = "MismatchedTokenException";
var NO_VIABLE_ALT_EXCEPTION = "NoViableAltException";
var EARLY_EXIT_EXCEPTION = "EarlyExitException";
var NOT_ALL_INPUT_PARSED_EXCEPTION = "NotAllInputParsedException";
var RECOGNITION_EXCEPTION_NAMES = [
    MISMATCHED_TOKEN_EXCEPTION,
    NO_VIABLE_ALT_EXCEPTION,
    EARLY_EXIT_EXCEPTION,
    NOT_ALL_INPUT_PARSED_EXCEPTION
];
Object.freeze(RECOGNITION_EXCEPTION_NAMES);
// hacks to bypass no support for custom Errors in javascript/typescript
function isRecognitionException(error) {
    // can't do instanceof on hacked custom js exceptions
    return contains(RECOGNITION_EXCEPTION_NAMES, error.name);
}
var RecognitionException = /** @class */ (function (_super) {
    __extends$1(RecognitionException, _super);
    function RecognitionException(message, token) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        _this.token = token;
        _this.resyncedTokens = [];
        // fix prototype chain when typescript target is ES5
        Object.setPrototypeOf(_this, _newTarget.prototype);
        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, _this.constructor);
        }
        return _this;
    }
    return RecognitionException;
}(Error));
var MismatchedTokenException = /** @class */ (function (_super) {
    __extends$1(MismatchedTokenException, _super);
    function MismatchedTokenException(message, token, previousToken) {
        var _this = _super.call(this, message, token) || this;
        _this.previousToken = previousToken;
        _this.name = MISMATCHED_TOKEN_EXCEPTION;
        return _this;
    }
    return MismatchedTokenException;
}(RecognitionException));
var NoViableAltException = /** @class */ (function (_super) {
    __extends$1(NoViableAltException, _super);
    function NoViableAltException(message, token, previousToken) {
        var _this = _super.call(this, message, token) || this;
        _this.previousToken = previousToken;
        _this.name = NO_VIABLE_ALT_EXCEPTION;
        return _this;
    }
    return NoViableAltException;
}(RecognitionException));
var NotAllInputParsedException = /** @class */ (function (_super) {
    __extends$1(NotAllInputParsedException, _super);
    function NotAllInputParsedException(message, token) {
        var _this = _super.call(this, message, token) || this;
        _this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;
        return _this;
    }
    return NotAllInputParsedException;
}(RecognitionException));
var EarlyExitException = /** @class */ (function (_super) {
    __extends$1(EarlyExitException, _super);
    function EarlyExitException(message, token, previousToken) {
        var _this = _super.call(this, message, token) || this;
        _this.previousToken = previousToken;
        _this.name = EARLY_EXIT_EXCEPTION;
        return _this;
    }
    return EarlyExitException;
}(RecognitionException));

var EOF_FOLLOW_KEY = {};
var IN_RULE_RECOVERY_EXCEPTION = "InRuleRecoveryException";
function InRuleRecoveryException(message) {
    this.name = IN_RULE_RECOVERY_EXCEPTION;
    this.message = message;
}
InRuleRecoveryException.prototype = Error.prototype;
/**
 * This trait is responsible for the error recovery and fault tolerant logic
 */
var Recoverable = /** @class */ (function () {
    function Recoverable() {
    }
    Recoverable.prototype.initRecoverable = function (config) {
        this.firstAfterRepMap = {};
        this.resyncFollows = {};
        this.recoveryEnabled = has(config, "recoveryEnabled")
            ? config.recoveryEnabled
            : DEFAULT_PARSER_CONFIG.recoveryEnabled;
        // performance optimization, NOOP will be inlined which
        // effectively means that this optional feature does not exist
        // when not used.
        if (this.recoveryEnabled) {
            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;
        }
    };
    Recoverable.prototype.getTokenToInsert = function (tokType) {
        var tokToInsert = createTokenInstance(tokType, "", NaN, NaN, NaN, NaN, NaN, NaN);
        tokToInsert.isInsertedInRecovery = true;
        return tokToInsert;
    };
    Recoverable.prototype.canTokenTypeBeInsertedInRecovery = function (tokType) {
        return true;
    };
    Recoverable.prototype.tryInRepetitionRecovery = function (grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {
        var _this = this;
        // TODO: can the resyncTokenType be cached?
        var reSyncTokType = this.findReSyncTokenType();
        var savedLexerState = this.exportLexerState();
        var resyncedTokens = [];
        var passedResyncPoint = false;
        var nextTokenWithoutResync = this.LA(1);
        var currToken = this.LA(1);
        var generateErrorMessage = function () {
            var previousToken = _this.LA(0);
            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce
            // the error that would have been thrown
            var msg = _this.errorMessageProvider.buildMismatchTokenMessage({
                expected: expectedTokType,
                actual: nextTokenWithoutResync,
                previous: previousToken,
                ruleName: _this.getCurrRuleFullName()
            });
            var error = new MismatchedTokenException(msg, nextTokenWithoutResync, _this.LA(0));
            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.
            error.resyncedTokens = dropRight(resyncedTokens);
            _this.SAVE_ERROR(error);
        };
        while (!passedResyncPoint) {
            // re-synced to a point where we can safely exit the repetition/
            if (this.tokenMatcher(currToken, expectedTokType)) {
                generateErrorMessage();
                return; // must return here to avoid reverting the inputIdx
            }
            else if (lookAheadFunc.call(this)) {
                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule
                generateErrorMessage();
                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule
                grammarRule.apply(this, grammarRuleArgs);
                return; // must return here to avoid reverting the inputIdx
            }
            else if (this.tokenMatcher(currToken, reSyncTokType)) {
                passedResyncPoint = true;
            }
            else {
                currToken = this.SKIP_TOKEN();
                this.addToResyncTokens(currToken, resyncedTokens);
            }
        }
        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.
        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by
        // "between rules" resync recovery later in the flow.
        this.importLexerState(savedLexerState);
    };
    Recoverable.prototype.shouldInRepetitionRecoveryBeTried = function (expectTokAfterLastMatch, nextTokIdx, notStuck) {
        // Edge case of arriving from a MANY repetition which is stuck
        // Attempting recovery in this case could cause an infinite loop
        if (notStuck === false) {
            return false;
        }
        // arguments to try and perform resync into the next iteration of the many are missing
        if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {
            return false;
        }
        // no need to recover, next token is what we expect...
        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {
            return false;
        }
        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path
        // and prefer some backtracking path that includes recovered errors.
        if (this.isBackTracking()) {
            return false;
        }
        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm
        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)
        //noinspection RedundantIfStatementJS
        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {
            return false;
        }
        return true;
    };
    // Error Recovery functionality
    Recoverable.prototype.getFollowsForInRuleRecovery = function (tokType, tokIdxInRule) {
        var grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);
        var follows = this.getNextPossibleTokenTypes(grammarPath);
        return follows;
    };
    Recoverable.prototype.tryInRuleRecovery = function (expectedTokType, follows) {
        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {
            var tokToInsert = this.getTokenToInsert(expectedTokType);
            return tokToInsert;
        }
        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {
            var nextTok = this.SKIP_TOKEN();
            this.consumeToken();
            return nextTok;
        }
        throw new InRuleRecoveryException("sad sad panda");
    };
    Recoverable.prototype.canPerformInRuleRecovery = function (expectedToken, follows) {
        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||
            this.canRecoverWithSingleTokenDeletion(expectedToken));
    };
    Recoverable.prototype.canRecoverWithSingleTokenInsertion = function (expectedTokType, follows) {
        var _this = this;
        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {
            return false;
        }
        // must know the possible following tokens to perform single token insertion
        if (isEmpty(follows)) {
            return false;
        }
        var mismatchedTok = this.LA(1);
        var isMisMatchedTokInFollows = find(follows, function (possibleFollowsTokType) {
            return _this.tokenMatcher(mismatchedTok, possibleFollowsTokType);
        }) !== undefined;
        return isMisMatchedTokInFollows;
    };
    Recoverable.prototype.canRecoverWithSingleTokenDeletion = function (expectedTokType) {
        var isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);
        return isNextTokenWhatIsExpected;
    };
    Recoverable.prototype.isInCurrentRuleReSyncSet = function (tokenTypeIdx) {
        var followKey = this.getCurrFollowKey();
        var currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);
        return contains(currentRuleReSyncSet, tokenTypeIdx);
    };
    Recoverable.prototype.findReSyncTokenType = function () {
        var allPossibleReSyncTokTypes = this.flattenFollowSet();
        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input
        var nextToken = this.LA(1);
        var k = 2;
        while (true) {
            var nextTokenType = nextToken.tokenType;
            if (contains(allPossibleReSyncTokTypes, nextTokenType)) {
                return nextTokenType;
            }
            nextToken = this.LA(k);
            k++;
        }
    };
    Recoverable.prototype.getCurrFollowKey = function () {
        // the length is at least one as we always add the ruleName to the stack before invoking the rule.
        if (this.RULE_STACK.length === 1) {
            return EOF_FOLLOW_KEY;
        }
        var currRuleShortName = this.getLastExplicitRuleShortName();
        var currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();
        var prevRuleShortName = this.getPreviousExplicitRuleShortName();
        return {
            ruleName: this.shortRuleNameToFullName(currRuleShortName),
            idxInCallingRule: currRuleIdx,
            inRule: this.shortRuleNameToFullName(prevRuleShortName)
        };
    };
    Recoverable.prototype.buildFullFollowKeyStack = function () {
        var _this = this;
        var explicitRuleStack = this.RULE_STACK;
        var explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;
        return map(explicitRuleStack, function (ruleName, idx) {
            if (idx === 0) {
                return EOF_FOLLOW_KEY;
            }
            return {
                ruleName: _this.shortRuleNameToFullName(ruleName),
                idxInCallingRule: explicitOccurrenceStack[idx],
                inRule: _this.shortRuleNameToFullName(explicitRuleStack[idx - 1])
            };
        });
    };
    Recoverable.prototype.flattenFollowSet = function () {
        var _this = this;
        var followStack = map(this.buildFullFollowKeyStack(), function (currKey) {
            return _this.getFollowSetFromFollowKey(currKey);
        });
        return flatten(followStack);
    };
    Recoverable.prototype.getFollowSetFromFollowKey = function (followKey) {
        if (followKey === EOF_FOLLOW_KEY) {
            return [EOF];
        }
        var followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;
        return this.resyncFollows[followName];
    };
    // It does not make any sense to include a virtual EOF token in the list of resynced tokens
    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)
    Recoverable.prototype.addToResyncTokens = function (token, resyncTokens) {
        if (!this.tokenMatcher(token, EOF)) {
            resyncTokens.push(token);
        }
        return resyncTokens;
    };
    Recoverable.prototype.reSyncTo = function (tokType) {
        var resyncedTokens = [];
        var nextTok = this.LA(1);
        while (this.tokenMatcher(nextTok, tokType) === false) {
            nextTok = this.SKIP_TOKEN();
            this.addToResyncTokens(nextTok, resyncedTokens);
        }
        // the last token is not part of the error.
        return dropRight(resyncedTokens);
    };
    Recoverable.prototype.attemptInRepetitionRecovery = function (prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {
        // by default this is a NO-OP
        // The actual implementation is with the function(not method) below
    };
    Recoverable.prototype.getCurrentGrammarPath = function (tokType, tokIdxInRule) {
        var pathRuleStack = this.getHumanReadableRuleStack();
        var pathOccurrenceStack = cloneArr(this.RULE_OCCURRENCE_STACK);
        var grammarPath = {
            ruleStack: pathRuleStack,
            occurrenceStack: pathOccurrenceStack,
            lastTok: tokType,
            lastTokOccurrence: tokIdxInRule
        };
        return grammarPath;
    };
    Recoverable.prototype.getHumanReadableRuleStack = function () {
        var _this = this;
        return map(this.RULE_STACK, function (currShortName) {
            return _this.shortRuleNameToFullName(currShortName);
        });
    };
    return Recoverable;
}());
function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {
    var key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);
    var firstAfterRepInfo = this.firstAfterRepMap[key];
    if (firstAfterRepInfo === undefined) {
        var currRuleName = this.getCurrRuleFullName();
        var ruleGrammar = this.getGAstProductions()[currRuleName];
        var walker = new nextToksWalker(ruleGrammar, prodOccurrence);
        firstAfterRepInfo = walker.startWalking();
        this.firstAfterRepMap[key] = firstAfterRepInfo;
    }
    var expectTokAfterLastMatch = firstAfterRepInfo.token;
    var nextTokIdx = firstAfterRepInfo.occurrence;
    var isEndOfRule = firstAfterRepInfo.isEndOfRule;
    // special edge case of a TOP most repetition after which the input should END.
    // this will force an attempt for inRule recovery in that scenario.
    if (this.RULE_STACK.length === 1 &&
        isEndOfRule &&
        expectTokAfterLastMatch === undefined) {
        expectTokAfterLastMatch = EOF;
        nextTokIdx = 1;
    }
    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {
        // TODO: performance optimization: instead of passing the original args here, we modify
        // the args param (or create a new one) and make sure the lookahead func is explicitly provided
        // to avoid searching the cache for it once more.
        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);
    }
}

// Lookahead keys are 32Bit integers in the form
// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX
// XXXX -> Occurrence Index bitmap.
// YYYY -> DSL Method Type bitmap.
// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.
// TTTTTTTTT -> alternation alternative index bitmap
var BITS_FOR_METHOD_TYPE = 4;
var BITS_FOR_OCCURRENCE_IDX = 8;
// short string used as part of mapping keys.
// being short improves the performance when composing KEYS for maps out of these
// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)
/* tslint:disable */
var OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;
var OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;
var MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;
var AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;
var MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;
var AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;
/* tslint:enable */
// this actually returns a number, but it is always used as a string (object prop key)
function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {
    /* tslint:disable */
    return occurrence | dslMethodIdx | ruleIdx;
    /* tslint:enable */
}

/**
 * Trait responsible for the lookahead related utilities and optimizations.
 */
var LooksAhead = /** @class */ (function () {
    function LooksAhead() {
    }
    LooksAhead.prototype.initLooksAhead = function (config) {
        this.dynamicTokensEnabled = has(config, "dynamicTokensEnabled")
            ? config.dynamicTokensEnabled
            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;
        this.maxLookahead = has(config, "maxLookahead")
            ? config.maxLookahead
            : DEFAULT_PARSER_CONFIG.maxLookahead;
        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */
        this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];
        // Performance optimization on newer engines that support ES6 Map
        // For larger Maps this is slightly faster than using a plain object (array in our case).
        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */
        if (isES2015MapSupported()) {
            this.getLaFuncFromCache = this.getLaFuncFromMap;
            this.setLaFuncCache = this.setLaFuncCacheUsingMap;
        }
        else {
            this.getLaFuncFromCache = this.getLaFuncFromObj;
            this.setLaFuncCache = this.setLaFuncUsingObj;
        }
    };
    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {
        var _this = this;
        forEach(rules, function (currRule) {
            _this.TRACE_INIT(currRule.name + " Rule Lookahead", function () {
                var _a = collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;
                forEach(alternation, function (currProd) {
                    var prodIdx = currProd.idx === 0 ? "" : currProd.idx;
                    _this.TRACE_INIT("" + getProductionDslName(currProd) + prodIdx, function () {
                        var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);
                        var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);
                        _this.setLaFuncCache(key, laFunc);
                    });
                });
                forEach(repetition, function (currProd) {
                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));
                });
                forEach(option, function (currProd) {
                    _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));
                });
                forEach(repetitionMandatory, function (currProd) {
                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));
                });
                forEach(repetitionMandatoryWithSeparator, function (currProd) {
                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));
                });
                forEach(repetitionWithSeparator, function (currProd) {
                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));
                });
            });
        });
    };
    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {
        var _this = this;
        this.TRACE_INIT("" + dslMethodName + (prodOccurrence === 0 ? "" : prodOccurrence), function () {
            var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);
            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);
            _this.setLaFuncCache(key, laFunc);
        });
    };
    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {
        return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);
    };
    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {
        return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);
    };
    // this actually returns a number, but it is always used as a string (object prop key)
    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {
        var currRuleShortName = this.getLastExplicitRuleShortName();
        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);
    };
    /* istanbul ignore next */
    LooksAhead.prototype.getLaFuncFromCache = function (key) {
        return undefined;
    };
    LooksAhead.prototype.getLaFuncFromMap = function (key) {
        return this.lookAheadFuncsCache.get(key);
    };
    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */
    LooksAhead.prototype.getLaFuncFromObj = function (key) {
        return this.lookAheadFuncsCache[key];
    };
    /* istanbul ignore next */
    LooksAhead.prototype.setLaFuncCache = function (key, value) { };
    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {
        this.lookAheadFuncsCache.set(key, value);
    };
    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */
    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {
        this.lookAheadFuncsCache[key] = value;
    };
    return LooksAhead;
}());

/**
 * This nodeLocation tracking is not efficient and should only be used
 * when error recovery is enabled or the Token Vector contains virtual Tokens
 * (e.g, Python Indent/Outdent)
 * As it executes the calculation for every single terminal/nonTerminal
 * and does not rely on the fact the token vector is **sorted**
 */
function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {
    // First (valid) update for this cst node
    if (isNaN(currNodeLocation.startOffset) === true) {
        // assumption1: Token location information is either NaN or a valid number
        // assumption2: Token location information is fully valid if it exist
        // (both start/end offsets exist and are numbers).
        currNodeLocation.startOffset = newLocationInfo.startOffset;
        currNodeLocation.endOffset = newLocationInfo.endOffset;
    }
    // Once the startOffset has been updated with a valid number it should never receive
    // any farther updates as the Token vector is sorted.
    // We still have to check this this condition for every new possible location info
    // because with error recovery enabled we may encounter invalid tokens (NaN location props)
    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {
        currNodeLocation.endOffset = newLocationInfo.endOffset;
    }
}
/**
 * This nodeLocation tracking is not efficient and should only be used
 * when error recovery is enabled or the Token Vector contains virtual Tokens
 * (e.g, Python Indent/Outdent)
 * As it executes the calculation for every single terminal/nonTerminal
 * and does not rely on the fact the token vector is **sorted**
 */
function setNodeLocationFull(currNodeLocation, newLocationInfo) {
    // First (valid) update for this cst node
    if (isNaN(currNodeLocation.startOffset) === true) {
        // assumption1: Token location information is either NaN or a valid number
        // assumption2: Token location information is fully valid if it exist
        // (all start/end props exist and are numbers).
        currNodeLocation.startOffset = newLocationInfo.startOffset;
        currNodeLocation.startColumn = newLocationInfo.startColumn;
        currNodeLocation.startLine = newLocationInfo.startLine;
        currNodeLocation.endOffset = newLocationInfo.endOffset;
        currNodeLocation.endColumn = newLocationInfo.endColumn;
        currNodeLocation.endLine = newLocationInfo.endLine;
    }
    // Once the start props has been updated with a valid number it should never receive
    // any farther updates as the Token vector is sorted.
    // We still have to check this this condition for every new possible location info
    // because with error recovery enabled we may encounter invalid tokens (NaN location props)
    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {
        currNodeLocation.endOffset = newLocationInfo.endOffset;
        currNodeLocation.endColumn = newLocationInfo.endColumn;
        currNodeLocation.endLine = newLocationInfo.endLine;
    }
}
function addTerminalToCst(node, token, tokenTypeName) {
    if (node.children[tokenTypeName] === undefined) {
        node.children[tokenTypeName] = [token];
    }
    else {
        node.children[tokenTypeName].push(token);
    }
}
function addNoneTerminalToCst(node, ruleName, ruleResult) {
    if (node.children[ruleName] === undefined) {
        node.children[ruleName] = [ruleResult];
    }
    else {
        node.children[ruleName].push(ruleResult);
    }
}

function classNameFromInstance(instance) {
    return functionName(instance.constructor);
}
var NAME = "name";
/**
 * Utility to obtain Function names.
 * Note that there should not be an assumptions on the result of this function.
 * E.g: When running from minified source code the result may be auto generated.
 */
function functionName(func) {
    // Engines that support Function.prototype.name OR the nth (n>1) time after
    // the name has been computed in the following else block.
    var existingNameProp = func.name;
    /* istanbul ignore else - too many hacks for IE/old versions of node.js here*/
    if (existingNameProp) {
        return existingNameProp;
    }
    else {
        return "anonymous";
    }
}
/**
 * @returns {boolean} - has the property been successfully defined
 */
function defineNameProp(obj, nameValue) {
    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);
    /* istanbul ignore else -> will only run in old versions of node.js */
    if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {
        Object.defineProperty(obj, NAME, {
            enumerable: false,
            configurable: true,
            writable: false,
            value: nameValue
        });
        return true;
    }
    /* istanbul ignore next -> will only run in old versions of node.js */
    return false;
}

function defaultVisit(ctx, param) {
    var childrenNames = keys(ctx);
    var childrenNamesLength = childrenNames.length;
    for (var i = 0; i < childrenNamesLength; i++) {
        var currChildName = childrenNames[i];
        var currChildArray = ctx[currChildName];
        var currChildArrayLength = currChildArray.length;
        for (var j = 0; j < currChildArrayLength; j++) {
            var currChild = currChildArray[j];
            // distinction between Tokens Children and CstNode children
            if (currChild.tokenTypeIdx === undefined) {
                this[currChild.name](currChild.children, param);
            }
        }
    }
    // defaultVisit does not support generic out param
    return undefined;
}
function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {
    var derivedConstructor = function () { };
    // can be overwritten according to:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/
    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname
    defineNameProp(derivedConstructor, grammarName + "BaseSemantics");
    var semanticProto = {
        visit: function (cstNode, param) {
            // enables writing more concise visitor methods when CstNode has only a single child
            if (isArray(cstNode)) {
                // A CST Node's children dictionary can never have empty arrays as values
                // If a key is defined there will be at least one element in the corresponding value array.
                cstNode = cstNode[0];
            }
            // enables passing optional CstNodes concisely.
            if (isUndefined(cstNode)) {
                return undefined;
            }
            return this[cstNode.name](cstNode.children, param);
        },
        validateVisitor: function () {
            var semanticDefinitionErrors = validateVisitor(this, ruleNames);
            if (!isEmpty(semanticDefinitionErrors)) {
                var errorMessages = map(semanticDefinitionErrors, function (currDefError) { return currDefError.msg; });
                throw Error("Errors Detected in CST Visitor <" + functionName(this.constructor) + ">:\n\t" + ("" + errorMessages.join("\n\n").replace(/\n/g, "\n\t")));
            }
        }
    };
    derivedConstructor.prototype = semanticProto;
    derivedConstructor.prototype.constructor = derivedConstructor;
    derivedConstructor._RULE_NAMES = ruleNames;
    return derivedConstructor;
}
function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {
    var derivedConstructor = function () { };
    // can be overwritten according to:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/
    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname
    defineNameProp(derivedConstructor, grammarName + "BaseSemanticsWithDefaults");
    var withDefaultsProto = Object.create(baseConstructor.prototype);
    forEach(ruleNames, function (ruleName) {
        withDefaultsProto[ruleName] = defaultVisit;
    });
    derivedConstructor.prototype = withDefaultsProto;
    derivedConstructor.prototype.constructor = derivedConstructor;
    return derivedConstructor;
}
var CstVisitorDefinitionError;
(function (CstVisitorDefinitionError) {
    CstVisitorDefinitionError[CstVisitorDefinitionError["REDUNDANT_METHOD"] = 0] = "REDUNDANT_METHOD";
    CstVisitorDefinitionError[CstVisitorDefinitionError["MISSING_METHOD"] = 1] = "MISSING_METHOD";
})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));
function validateVisitor(visitorInstance, ruleNames) {
    var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);
    var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);
    return missingErrors.concat(redundantErrors);
}
function validateMissingCstMethods(visitorInstance, ruleNames) {
    var errors = map(ruleNames, function (currRuleName) {
        if (!isFunction(visitorInstance[currRuleName])) {
            return {
                msg: "Missing visitor method: <" + currRuleName + "> on " + functionName(visitorInstance.constructor) + " CST Visitor.",
                type: CstVisitorDefinitionError.MISSING_METHOD,
                methodName: currRuleName
            };
        }
    });
    return compact(errors);
}
var VALID_PROP_NAMES = ["constructor", "visit", "validateVisitor"];
function validateRedundantMethods(visitorInstance, ruleNames) {
    var errors = [];
    for (var prop in visitorInstance) {
        if (isFunction(visitorInstance[prop]) &&
            !contains(VALID_PROP_NAMES, prop) &&
            !contains(ruleNames, prop)) {
            errors.push({
                msg: "Redundant visitor method: <" + prop + "> on " + functionName(visitorInstance.constructor) + " CST Visitor\n" +
                    "There is no Grammar Rule corresponding to this method's name.\n",
                type: CstVisitorDefinitionError.REDUNDANT_METHOD,
                methodName: prop
            });
        }
    }
    return errors;
}

/**
 * This trait is responsible for the CST building logic.
 */
var TreeBuilder = /** @class */ (function () {
    function TreeBuilder() {
    }
    TreeBuilder.prototype.initTreeBuilder = function (config) {
        this.CST_STACK = [];
        // outputCst is no longer exposed/defined in the pubic API
        this.outputCst = config.outputCst;
        this.nodeLocationTracking = has(config, "nodeLocationTracking")
            ? config.nodeLocationTracking
            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;
        if (!this.outputCst) {
            this.cstInvocationStateUpdate = NOOP;
            this.cstFinallyStateUpdate = NOOP;
            this.cstPostTerminal = NOOP;
            this.cstPostNonTerminal = NOOP;
            this.cstPostRule = NOOP;
        }
        else {
            if (/full/i.test(this.nodeLocationTracking)) {
                if (this.recoveryEnabled) {
                    this.setNodeLocationFromToken = setNodeLocationFull;
                    this.setNodeLocationFromNode = setNodeLocationFull;
                    this.cstPostRule = NOOP;
                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;
                }
                else {
                    this.setNodeLocationFromToken = NOOP;
                    this.setNodeLocationFromNode = NOOP;
                    this.cstPostRule = this.cstPostRuleFull;
                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;
                }
            }
            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {
                if (this.recoveryEnabled) {
                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;
                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;
                    this.cstPostRule = NOOP;
                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery;
                }
                else {
                    this.setNodeLocationFromToken = NOOP;
                    this.setNodeLocationFromNode = NOOP;
                    this.cstPostRule = this.cstPostRuleOnlyOffset;
                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular;
                }
            }
            else if (/none/i.test(this.nodeLocationTracking)) {
                this.setNodeLocationFromToken = NOOP;
                this.setNodeLocationFromNode = NOOP;
                this.cstPostRule = NOOP;
                this.setInitialNodeLocation = NOOP;
            }
            else {
                throw Error("Invalid <nodeLocationTracking> config option: \"" + config.nodeLocationTracking + "\"");
            }
        }
    };
    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRecovery = function (cstNode) {
        cstNode.location = {
            startOffset: NaN,
            endOffset: NaN
        };
    };
    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRegular = function (cstNode) {
        cstNode.location = {
            // without error recovery the starting Location of a new CstNode is guaranteed
            // To be the next Token's startOffset (for valid inputs).
            // For invalid inputs there won't be any CSTOutput so this potential
            // inaccuracy does not matter
            startOffset: this.LA(1).startOffset,
            endOffset: NaN
        };
    };
    TreeBuilder.prototype.setInitialNodeLocationFullRecovery = function (cstNode) {
        cstNode.location = {
            startOffset: NaN,
            startLine: NaN,
            startColumn: NaN,
            endOffset: NaN,
            endLine: NaN,
            endColumn: NaN
        };
    };
    /**
       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work
  
       * @param cstNode
       */
    TreeBuilder.prototype.setInitialNodeLocationFullRegular = function (cstNode) {
        var nextToken = this.LA(1);
        cstNode.location = {
            startOffset: nextToken.startOffset,
            startLine: nextToken.startLine,
            startColumn: nextToken.startColumn,
            endOffset: NaN,
            endLine: NaN,
            endColumn: NaN
        };
    };
    TreeBuilder.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {
        var cstNode = {
            name: fullRuleName,
            children: {}
        };
        this.setInitialNodeLocation(cstNode);
        this.CST_STACK.push(cstNode);
    };
    TreeBuilder.prototype.cstFinallyStateUpdate = function () {
        this.CST_STACK.pop();
    };
    TreeBuilder.prototype.cstPostRuleFull = function (ruleCstNode) {
        var prevToken = this.LA(0);
        var loc = ruleCstNode.location;
        // If this condition is true it means we consumed at least one Token
        // In this CstNode.
        if (loc.startOffset <= prevToken.startOffset === true) {
            loc.endOffset = prevToken.endOffset;
            loc.endLine = prevToken.endLine;
            loc.endColumn = prevToken.endColumn;
        }
        // "empty" CstNode edge case
        else {
            loc.startOffset = NaN;
            loc.startLine = NaN;
            loc.startColumn = NaN;
        }
    };
    TreeBuilder.prototype.cstPostRuleOnlyOffset = function (ruleCstNode) {
        var prevToken = this.LA(0);
        var loc = ruleCstNode.location;
        // If this condition is true it means we consumed at least one Token
        // In this CstNode.
        if (loc.startOffset <= prevToken.startOffset === true) {
            loc.endOffset = prevToken.endOffset;
        }
        // "empty" CstNode edge case
        else {
            loc.startOffset = NaN;
        }
    };
    TreeBuilder.prototype.cstPostTerminal = function (key, consumedToken) {
        var rootCst = this.CST_STACK[this.CST_STACK.length - 1];
        addTerminalToCst(rootCst, consumedToken, key);
        // This is only used when **both** error recovery and CST Output are enabled.
        this.setNodeLocationFromToken(rootCst.location, consumedToken);
    };
    TreeBuilder.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {
        var preCstNode = this.CST_STACK[this.CST_STACK.length - 1];
        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);
        // This is only used when **both** error recovery and CST Output are enabled.
        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);
    };
    TreeBuilder.prototype.getBaseCstVisitorConstructor = function () {
        if (isUndefined(this.baseCstVisitorConstructor)) {
            var newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));
            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;
            return newBaseCstVisitorConstructor;
        }
        return this.baseCstVisitorConstructor;
    };
    TreeBuilder.prototype.getBaseCstVisitorConstructorWithDefaults = function () {
        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {
            var newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());
            this.baseCstVisitorWithDefaultsConstructor = newConstructor;
            return newConstructor;
        }
        return this.baseCstVisitorWithDefaultsConstructor;
    };
    TreeBuilder.prototype.getLastExplicitRuleShortName = function () {
        var ruleStack = this.RULE_STACK;
        return ruleStack[ruleStack.length - 1];
    };
    TreeBuilder.prototype.getPreviousExplicitRuleShortName = function () {
        var ruleStack = this.RULE_STACK;
        return ruleStack[ruleStack.length - 2];
    };
    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndex = function () {
        var occurrenceStack = this.RULE_OCCURRENCE_STACK;
        return occurrenceStack[occurrenceStack.length - 1];
    };
    return TreeBuilder;
}());

/**
 * Trait responsible abstracting over the interaction with Lexer output (Token vector).
 *
 * This could be generalized to support other kinds of lexers, e.g.
 * - Just in Time Lexing / Lexer-Less parsing.
 * - Streaming Lexer.
 */
var LexerAdapter = /** @class */ (function () {
    function LexerAdapter() {
    }
    LexerAdapter.prototype.initLexerAdapter = function () {
        this.tokVector = [];
        this.tokVectorLength = 0;
        this.currIdx = -1;
    };
    Object.defineProperty(LexerAdapter.prototype, "input", {
        get: function () {
            return this.tokVector;
        },
        set: function (newInput) {
            // @ts-ignore - `this parameter` not supported in setters/getters
            //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters
            if (this.selfAnalysisDone !== true) {
                throw Error("Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.");
            }
            // @ts-ignore - `this parameter` not supported in setters/getters
            //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters
            this.reset();
            this.tokVector = newInput;
            this.tokVectorLength = newInput.length;
        },
        enumerable: false,
        configurable: true
    });
    // skips a token and returns the next token
    LexerAdapter.prototype.SKIP_TOKEN = function () {
        if (this.currIdx <= this.tokVector.length - 2) {
            this.consumeToken();
            return this.LA(1);
        }
        else {
            return END_OF_FILE;
        }
    };
    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers
    // or lexers dependent on parser context.
    LexerAdapter.prototype.LA = function (howMuch) {
        var soughtIdx = this.currIdx + howMuch;
        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {
            return END_OF_FILE;
        }
        else {
            return this.tokVector[soughtIdx];
        }
    };
    LexerAdapter.prototype.consumeToken = function () {
        this.currIdx++;
    };
    LexerAdapter.prototype.exportLexerState = function () {
        return this.currIdx;
    };
    LexerAdapter.prototype.importLexerState = function (newState) {
        this.currIdx = newState;
    };
    LexerAdapter.prototype.resetLexerState = function () {
        this.currIdx = -1;
    };
    LexerAdapter.prototype.moveToTerminatedState = function () {
        this.currIdx = this.tokVector.length - 1;
    };
    LexerAdapter.prototype.getLexerPosition = function () {
        return this.exportLexerState();
    };
    return LexerAdapter;
}());

/**
 * This trait is responsible for implementing the public API
 * for defining Chevrotain parsers, i.e:
 * - CONSUME
 * - RULE
 * - OPTION
 * - ...
 */
var RecognizerApi = /** @class */ (function () {
    function RecognizerApi() {
    }
    RecognizerApi.prototype.ACTION = function (impl) {
        return impl.call(this);
    };
    RecognizerApi.prototype.consume = function (idx, tokType, options) {
        return this.consumeInternal(tokType, idx, options);
    };
    RecognizerApi.prototype.subrule = function (idx, ruleToCall, options) {
        return this.subruleInternal(ruleToCall, idx, options);
    };
    RecognizerApi.prototype.option = function (idx, actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, idx);
    };
    RecognizerApi.prototype.or = function (idx, altsOrOpts) {
        return this.orInternal(altsOrOpts, idx);
    };
    RecognizerApi.prototype.many = function (idx, actionORMethodDef) {
        return this.manyInternal(idx, actionORMethodDef);
    };
    RecognizerApi.prototype.atLeastOne = function (idx, actionORMethodDef) {
        return this.atLeastOneInternal(idx, actionORMethodDef);
    };
    RecognizerApi.prototype.CONSUME = function (tokType, options) {
        return this.consumeInternal(tokType, 0, options);
    };
    RecognizerApi.prototype.CONSUME1 = function (tokType, options) {
        return this.consumeInternal(tokType, 1, options);
    };
    RecognizerApi.prototype.CONSUME2 = function (tokType, options) {
        return this.consumeInternal(tokType, 2, options);
    };
    RecognizerApi.prototype.CONSUME3 = function (tokType, options) {
        return this.consumeInternal(tokType, 3, options);
    };
    RecognizerApi.prototype.CONSUME4 = function (tokType, options) {
        return this.consumeInternal(tokType, 4, options);
    };
    RecognizerApi.prototype.CONSUME5 = function (tokType, options) {
        return this.consumeInternal(tokType, 5, options);
    };
    RecognizerApi.prototype.CONSUME6 = function (tokType, options) {
        return this.consumeInternal(tokType, 6, options);
    };
    RecognizerApi.prototype.CONSUME7 = function (tokType, options) {
        return this.consumeInternal(tokType, 7, options);
    };
    RecognizerApi.prototype.CONSUME8 = function (tokType, options) {
        return this.consumeInternal(tokType, 8, options);
    };
    RecognizerApi.prototype.CONSUME9 = function (tokType, options) {
        return this.consumeInternal(tokType, 9, options);
    };
    RecognizerApi.prototype.SUBRULE = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 0, options);
    };
    RecognizerApi.prototype.SUBRULE1 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 1, options);
    };
    RecognizerApi.prototype.SUBRULE2 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 2, options);
    };
    RecognizerApi.prototype.SUBRULE3 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 3, options);
    };
    RecognizerApi.prototype.SUBRULE4 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 4, options);
    };
    RecognizerApi.prototype.SUBRULE5 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 5, options);
    };
    RecognizerApi.prototype.SUBRULE6 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 6, options);
    };
    RecognizerApi.prototype.SUBRULE7 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 7, options);
    };
    RecognizerApi.prototype.SUBRULE8 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 8, options);
    };
    RecognizerApi.prototype.SUBRULE9 = function (ruleToCall, options) {
        return this.subruleInternal(ruleToCall, 9, options);
    };
    RecognizerApi.prototype.OPTION = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 0);
    };
    RecognizerApi.prototype.OPTION1 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 1);
    };
    RecognizerApi.prototype.OPTION2 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 2);
    };
    RecognizerApi.prototype.OPTION3 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 3);
    };
    RecognizerApi.prototype.OPTION4 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 4);
    };
    RecognizerApi.prototype.OPTION5 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 5);
    };
    RecognizerApi.prototype.OPTION6 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 6);
    };
    RecognizerApi.prototype.OPTION7 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 7);
    };
    RecognizerApi.prototype.OPTION8 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 8);
    };
    RecognizerApi.prototype.OPTION9 = function (actionORMethodDef) {
        return this.optionInternal(actionORMethodDef, 9);
    };
    RecognizerApi.prototype.OR = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 0);
    };
    RecognizerApi.prototype.OR1 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 1);
    };
    RecognizerApi.prototype.OR2 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 2);
    };
    RecognizerApi.prototype.OR3 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 3);
    };
    RecognizerApi.prototype.OR4 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 4);
    };
    RecognizerApi.prototype.OR5 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 5);
    };
    RecognizerApi.prototype.OR6 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 6);
    };
    RecognizerApi.prototype.OR7 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 7);
    };
    RecognizerApi.prototype.OR8 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 8);
    };
    RecognizerApi.prototype.OR9 = function (altsOrOpts) {
        return this.orInternal(altsOrOpts, 9);
    };
    RecognizerApi.prototype.MANY = function (actionORMethodDef) {
        this.manyInternal(0, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY1 = function (actionORMethodDef) {
        this.manyInternal(1, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY2 = function (actionORMethodDef) {
        this.manyInternal(2, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY3 = function (actionORMethodDef) {
        this.manyInternal(3, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY4 = function (actionORMethodDef) {
        this.manyInternal(4, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY5 = function (actionORMethodDef) {
        this.manyInternal(5, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY6 = function (actionORMethodDef) {
        this.manyInternal(6, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY7 = function (actionORMethodDef) {
        this.manyInternal(7, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY8 = function (actionORMethodDef) {
        this.manyInternal(8, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY9 = function (actionORMethodDef) {
        this.manyInternal(9, actionORMethodDef);
    };
    RecognizerApi.prototype.MANY_SEP = function (options) {
        this.manySepFirstInternal(0, options);
    };
    RecognizerApi.prototype.MANY_SEP1 = function (options) {
        this.manySepFirstInternal(1, options);
    };
    RecognizerApi.prototype.MANY_SEP2 = function (options) {
        this.manySepFirstInternal(2, options);
    };
    RecognizerApi.prototype.MANY_SEP3 = function (options) {
        this.manySepFirstInternal(3, options);
    };
    RecognizerApi.prototype.MANY_SEP4 = function (options) {
        this.manySepFirstInternal(4, options);
    };
    RecognizerApi.prototype.MANY_SEP5 = function (options) {
        this.manySepFirstInternal(5, options);
    };
    RecognizerApi.prototype.MANY_SEP6 = function (options) {
        this.manySepFirstInternal(6, options);
    };
    RecognizerApi.prototype.MANY_SEP7 = function (options) {
        this.manySepFirstInternal(7, options);
    };
    RecognizerApi.prototype.MANY_SEP8 = function (options) {
        this.manySepFirstInternal(8, options);
    };
    RecognizerApi.prototype.MANY_SEP9 = function (options) {
        this.manySepFirstInternal(9, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE = function (actionORMethodDef) {
        this.atLeastOneInternal(0, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE1 = function (actionORMethodDef) {
        return this.atLeastOneInternal(1, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE2 = function (actionORMethodDef) {
        this.atLeastOneInternal(2, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE3 = function (actionORMethodDef) {
        this.atLeastOneInternal(3, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE4 = function (actionORMethodDef) {
        this.atLeastOneInternal(4, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE5 = function (actionORMethodDef) {
        this.atLeastOneInternal(5, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE6 = function (actionORMethodDef) {
        this.atLeastOneInternal(6, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE7 = function (actionORMethodDef) {
        this.atLeastOneInternal(7, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE8 = function (actionORMethodDef) {
        this.atLeastOneInternal(8, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE9 = function (actionORMethodDef) {
        this.atLeastOneInternal(9, actionORMethodDef);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP = function (options) {
        this.atLeastOneSepFirstInternal(0, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP1 = function (options) {
        this.atLeastOneSepFirstInternal(1, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP2 = function (options) {
        this.atLeastOneSepFirstInternal(2, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP3 = function (options) {
        this.atLeastOneSepFirstInternal(3, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP4 = function (options) {
        this.atLeastOneSepFirstInternal(4, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP5 = function (options) {
        this.atLeastOneSepFirstInternal(5, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP6 = function (options) {
        this.atLeastOneSepFirstInternal(6, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP7 = function (options) {
        this.atLeastOneSepFirstInternal(7, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP8 = function (options) {
        this.atLeastOneSepFirstInternal(8, options);
    };
    RecognizerApi.prototype.AT_LEAST_ONE_SEP9 = function (options) {
        this.atLeastOneSepFirstInternal(9, options);
    };
    RecognizerApi.prototype.RULE = function (name, implementation, config) {
        if (config === void 0) { config = DEFAULT_RULE_CONFIG; }
        if (contains(this.definedRulesNames, name)) {
            var errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({
                topLevelRule: name,
                grammarName: this.className
            });
            var error = {
                message: errMsg,
                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,
                ruleName: name
            };
            this.definitionErrors.push(error);
        }
        this.definedRulesNames.push(name);
        var ruleImplementation = this.defineRule(name, implementation, config);
        this[name] = ruleImplementation;
        return ruleImplementation;
    };
    RecognizerApi.prototype.OVERRIDE_RULE = function (name, impl, config) {
        if (config === void 0) { config = DEFAULT_RULE_CONFIG; }
        var ruleErrors = [];
        ruleErrors = ruleErrors.concat(validateRuleIsOverridden(name, this.definedRulesNames, this.className));
        this.definitionErrors.push.apply(this.definitionErrors, ruleErrors); // mutability for the win
        var ruleImplementation = this.defineRule(name, impl, config);
        this[name] = ruleImplementation;
        return ruleImplementation;
    };
    RecognizerApi.prototype.BACKTRACK = function (grammarRule, args) {
        return function () {
            // save org state
            this.isBackTrackingStack.push(1);
            var orgState = this.saveRecogState();
            try {
                grammarRule.apply(this, args);
                // if no exception was thrown we have succeed parsing the rule.
                return true;
            }
            catch (e) {
                if (isRecognitionException(e)) {
                    return false;
                }
                else {
                    throw e;
                }
            }
            finally {
                this.reloadRecogState(orgState);
                this.isBackTrackingStack.pop();
            }
        };
    };
    // GAST export APIs
    RecognizerApi.prototype.getGAstProductions = function () {
        return this.gastProductionsCache;
    };
    RecognizerApi.prototype.getSerializedGastProductions = function () {
        return serializeGrammar(values(this.gastProductionsCache));
    };
    return RecognizerApi;
}());

/**
 * This trait is responsible for the runtime parsing engine
 * Used by the official API (recognizer_api.ts)
 */
var RecognizerEngine = /** @class */ (function () {
    function RecognizerEngine() {
    }
    RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {
        this.className = classNameFromInstance(this);
        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)
        this.shortRuleNameToFull = {};
        this.fullRuleNameToShort = {};
        this.ruleShortNameIdx = 256;
        this.tokenMatcher = tokenStructuredMatcherNoCategories;
        this.definedRulesNames = [];
        this.tokensMap = {};
        this.isBackTrackingStack = [];
        this.RULE_STACK = [];
        this.RULE_OCCURRENCE_STACK = [];
        this.gastProductionsCache = {};
        if (has(config, "serializedGrammar")) {
            throw Error("The Parser's configuration can no longer contain a <serializedGrammar> property.\n" +
                "\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_6-0-0\n" +
                "\tFor Further details.");
        }
        if (isArray(tokenVocabulary)) {
            // This only checks for Token vocabularies provided as arrays.
            // That is good enough because the main objective is to detect users of pre-V4.0 APIs
            // rather than all edge cases of empty Token vocabularies.
            if (isEmpty(tokenVocabulary)) {
                throw Error("A Token Vocabulary cannot be empty.\n" +
                    "\tNote that the first argument for the parser constructor\n" +
                    "\tis no longer a Token vector (since v4.0).");
            }
            if (typeof tokenVocabulary[0].startOffset === "number") {
                throw Error("The Parser constructor no longer accepts a token vector as the first argument.\n" +
                    "\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_4-0-0\n" +
                    "\tFor Further details.");
            }
        }
        if (isArray(tokenVocabulary)) {
            this.tokensMap = reduce(tokenVocabulary, function (acc, tokType) {
                acc[tokType.name] = tokType;
                return acc;
            }, {});
        }
        else if (has(tokenVocabulary, "modes") &&
            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {
            var allTokenTypes = flatten(values(tokenVocabulary.modes));
            var uniqueTokens = uniq(allTokenTypes);
            this.tokensMap = reduce(uniqueTokens, function (acc, tokType) {
                acc[tokType.name] = tokType;
                return acc;
            }, {});
        }
        else if (isObject(tokenVocabulary)) {
            this.tokensMap = cloneObj(tokenVocabulary);
        }
        else {
            throw new Error("<tokensDictionary> argument must be An Array of Token constructors," +
                " A dictionary of Token constructors or an IMultiModeLexerDefinition");
        }
        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been
        // parsed with a clear error message ("expecting EOF but found ...")
        /* tslint:disable */
        this.tokensMap["EOF"] = EOF;
        // TODO: This check may not be accurate for multi mode lexers
        var noTokenCategoriesUsed = every(values(tokenVocabulary), function (tokenConstructor) { return isEmpty(tokenConstructor.categoryMatches); });
        this.tokenMatcher = noTokenCategoriesUsed
            ? tokenStructuredMatcherNoCategories
            : tokenStructuredMatcher;
        // Because ES2015+ syntax should be supported for creating Token classes
        // We cannot assume that the Token classes were created using the "extendToken" utilities
        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization
        augmentTokenTypes(values(this.tokensMap));
    };
    RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {
        if (this.selfAnalysisDone) {
            throw Error("Grammar rule <" + ruleName + "> may not be defined after the 'performSelfAnalysis' method has been called'\n" +
                "Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.");
        }
        var resyncEnabled = has(config, "resyncEnabled")
            ? config.resyncEnabled
            : DEFAULT_RULE_CONFIG.resyncEnabled;
        var recoveryValueFunc = has(config, "recoveryValueFunc")
            ? config.recoveryValueFunc
            : DEFAULT_RULE_CONFIG.recoveryValueFunc;
        // performance optimization: Use small integers as keys for the longer human readable "full" rule names.
        // this greatly improves Map access time (as much as 8% for some performance benchmarks).
        /* tslint:disable */
        var shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);
        /* tslint:enable */
        this.ruleShortNameIdx++;
        this.shortRuleNameToFull[shortName] = ruleName;
        this.fullRuleNameToShort[ruleName] = shortName;
        function invokeRuleWithTry(args) {
            try {
                if (this.outputCst === true) {
                    impl.apply(this, args);
                    var cst = this.CST_STACK[this.CST_STACK.length - 1];
                    this.cstPostRule(cst);
                    return cst;
                }
                else {
                    return impl.apply(this, args);
                }
            }
            catch (e) {
                return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);
            }
            finally {
                this.ruleFinallyStateUpdate();
            }
        }
        var wrappedGrammarRule;
        wrappedGrammarRule = function (idxInCallingRule, args) {
            if (idxInCallingRule === void 0) { idxInCallingRule = 0; }
            this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);
            return invokeRuleWithTry.call(this, args);
        };
        var ruleNamePropName = "ruleName";
        wrappedGrammarRule[ruleNamePropName] = ruleName;
        wrappedGrammarRule["originalGrammarAction"] = impl;
        return wrappedGrammarRule;
    };
    RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {
        var isFirstInvokedRule = this.RULE_STACK.length === 1;
        // note the reSync is always enabled for the first rule invocation, because we must always be able to
        // reSync with EOF and just output some INVALID ParseTree
        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking
        // path is really the most valid one
        var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;
        if (isRecognitionException(e)) {
            var recogError = e;
            if (reSyncEnabled) {
                var reSyncTokType = this.findReSyncTokenType();
                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {
                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);
                    if (this.outputCst) {
                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];
                        partialCstResult.recoveredNode = true;
                        return partialCstResult;
                    }
                    else {
                        return recoveryValueFunc();
                    }
                }
                else {
                    if (this.outputCst) {
                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];
                        partialCstResult.recoveredNode = true;
                        recogError.partialCstResult = partialCstResult;
                    }
                    // to be handled Further up the call stack
                    throw recogError;
                }
            }
            else if (isFirstInvokedRule) {
                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case
                this.moveToTerminatedState();
                // the parser should never throw one of its own errors outside its flow.
                // even if error recovery is disabled
                return recoveryValueFunc();
            }
            else {
                // to be recovered Further up the call stack
                throw recogError;
            }
        }
        else {
            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)
            throw e;
        }
    };
    // Implementation of parsing DSL
    RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {
        var key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);
        return this.optionInternalLogic(actionORMethodDef, occurrence, key);
    };
    RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {
        var _this = this;
        var lookAheadFunc = this.getLaFuncFromCache(key);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_1 = lookAheadFunc;
                lookAheadFunc = function () {
                    return predicate.call(_this) && orgLookaheadFunction_1.call(_this);
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        if (lookAheadFunc.call(this) === true) {
            return action.call(this);
        }
        return undefined;
    };
    RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {
        var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);
        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);
    };
    RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {
        var _this = this;
        var lookAheadFunc = this.getLaFuncFromCache(key);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_2 = lookAheadFunc;
                lookAheadFunc = function () {
                    return predicate.call(_this) && orgLookaheadFunction_2.call(_this);
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        if (lookAheadFunc.call(this) === true) {
            var notStuck = this.doSingleRepetition(action);
            while (lookAheadFunc.call(this) === true &&
                notStuck === true) {
                notStuck = this.doSingleRepetition(action);
            }
        }
        else {
            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);
        }
        // note that while it may seem that this can cause an error because by using a recursive call to
        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call
        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);
    };
    RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {
        var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);
        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);
    };
    RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {
        var _this = this;
        var action = options.DEF;
        var separator = options.SEP;
        var firstIterationLookaheadFunc = this.getLaFuncFromCache(key);
        // 1st iteration
        if (firstIterationLookaheadFunc.call(this) === true) {
            action.call(this);
            //  TODO: Optimization can move this function construction into "attemptInRepetitionRecovery"
            //  because it is only needed in error recovery scenarios.
            var separatorLookAheadFunc = function () {
                return _this.tokenMatcher(_this.LA(1), separator);
            };
            // 2nd..nth iterations
            while (this.tokenMatcher(this.LA(1), separator) === true) {
                // note that this CONSUME will never enter recovery because
                // the separatorLookAheadFunc checks that the separator really does exist.
                this.CONSUME(separator);
                action.call(this);
            }
            // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
                prodOccurrence,
                separator,
                separatorLookAheadFunc,
                action,
                NextTerminalAfterAtLeastOneSepWalker
            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);
        }
        else {
            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);
        }
    };
    RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {
        var laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);
        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);
    };
    RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {
        var _this = this;
        var lookaheadFunction = this.getLaFuncFromCache(key);
        var action;
        var predicate;
        if (actionORMethodDef.DEF !== undefined) {
            action = actionORMethodDef.DEF;
            predicate = actionORMethodDef.GATE;
            // predicate present
            if (predicate !== undefined) {
                var orgLookaheadFunction_3 = lookaheadFunction;
                lookaheadFunction = function () {
                    return predicate.call(_this) && orgLookaheadFunction_3.call(_this);
                };
            }
        }
        else {
            action = actionORMethodDef;
        }
        var notStuck = true;
        while (lookaheadFunction.call(this) === true && notStuck === true) {
            notStuck = this.doSingleRepetition(action);
        }
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, 
        // The notStuck parameter is only relevant when "attemptInRepetitionRecovery"
        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]
        // An infinite loop cannot occur as:
        // - Either the lookahead is guaranteed to consume something (Single Token Separator)
        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).
        notStuck);
    };
    RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {
        var laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);
        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);
    };
    RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {
        var _this = this;
        var action = options.DEF;
        var separator = options.SEP;
        var firstIterationLaFunc = this.getLaFuncFromCache(key);
        // 1st iteration
        if (firstIterationLaFunc.call(this) === true) {
            action.call(this);
            var separatorLookAheadFunc = function () {
                return _this.tokenMatcher(_this.LA(1), separator);
            };
            // 2nd..nth iterations
            while (this.tokenMatcher(this.LA(1), separator) === true) {
                // note that this CONSUME will never enter recovery because
                // the separatorLookAheadFunc checks that the separator really does exist.
                this.CONSUME(separator);
                // No need for checking infinite loop here due to consuming the separator.
                action.call(this);
            }
            // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
                prodOccurrence,
                separator,
                separatorLookAheadFunc,
                action,
                NextTerminalAfterManySepWalker
            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);
        }
    };
    RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {
        while (separatorLookAheadFunc()) {
            // note that this CONSUME will never enter recovery because
            // the separatorLookAheadFunc checks that the separator really does exist.
            this.CONSUME(separator);
            action.call(this);
        }
        // we can only arrive to this function after an error
        // has occurred (hence the name 'second') so the following
        // IF will always be entered, its possible to remove it...
        // however it is kept to avoid confusion and be consistent.
        // Performance optimization: "attemptInRepetitionRecovery" will be defined as NOOP unless recovery is enabled
        /* istanbul ignore else */
        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [
            prodOccurrence,
            separator,
            separatorLookAheadFunc,
            action,
            nextTerminalAfterWalker
        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);
    };
    RecognizerEngine.prototype.doSingleRepetition = function (action) {
        var beforeIteration = this.getLexerPosition();
        action.call(this);
        var afterIteration = this.getLexerPosition();
        // This boolean will indicate if this repetition progressed
        // or if we are "stuck" (potential infinite loop in the repetition).
        return afterIteration > beforeIteration;
    };
    RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {
        var laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);
        var alts = isArray(altsOrOpts)
            ? altsOrOpts
            : altsOrOpts.DEF;
        var laFunc = this.getLaFuncFromCache(laKey);
        var altIdxToTake = laFunc.call(this, alts);
        if (altIdxToTake !== undefined) {
            var chosenAlternative = alts[altIdxToTake];
            return chosenAlternative.ALT.call(this);
        }
        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);
    };
    RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {
        this.RULE_STACK.pop();
        this.RULE_OCCURRENCE_STACK.pop();
        // NOOP when cst is disabled
        this.cstFinallyStateUpdate();
        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {
            var firstRedundantTok = this.LA(1);
            var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({
                firstRedundant: firstRedundantTok,
                ruleName: this.getCurrRuleFullName()
            });
            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));
        }
    };
    RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {
        var ruleResult;
        try {
            var args = options !== undefined ? options.ARGS : undefined;
            ruleResult = ruleToCall.call(this, idx, args);
            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined
                ? options.LABEL
                : ruleToCall.ruleName);
            return ruleResult;
        }
        catch (e) {
            this.subruleInternalError(e, options, ruleToCall.ruleName);
        }
    };
    RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {
        if (isRecognitionException(e) && e.partialCstResult !== undefined) {
            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined
                ? options.LABEL
                : ruleName);
            delete e.partialCstResult;
        }
        throw e;
    };
    RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {
        var consumedToken;
        try {
            var nextToken = this.LA(1);
            if (this.tokenMatcher(nextToken, tokType) === true) {
                this.consumeToken();
                consumedToken = nextToken;
            }
            else {
                this.consumeInternalError(tokType, nextToken, options);
            }
        }
        catch (eFromConsumption) {
            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);
        }
        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined
            ? options.LABEL
            : tokType.name, consumedToken);
        return consumedToken;
    };
    RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {
        var msg;
        var previousToken = this.LA(0);
        if (options !== undefined && options.ERR_MSG) {
            msg = options.ERR_MSG;
        }
        else {
            msg = this.errorMessageProvider.buildMismatchTokenMessage({
                expected: tokType,
                actual: nextToken,
                previous: previousToken,
                ruleName: this.getCurrRuleFullName()
            });
        }
        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));
    };
    RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {
        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it
        // but the original syntax could have been parsed successfully without any backtracking + recovery
        if (this.recoveryEnabled &&
            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?
            eFromConsumption.name === "MismatchedTokenException" &&
            !this.isBackTracking()) {
            var follows = this.getFollowsForInRuleRecovery(tokType, idx);
            try {
                return this.tryInRuleRecovery(tokType, follows);
            }
            catch (eFromInRuleRecovery) {
                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {
                    // failed in RuleRecovery.
                    // throw the original error in order to trigger reSync error recovery
                    throw eFromConsumption;
                }
                else {
                    throw eFromInRuleRecovery;
                }
            }
        }
        else {
            throw eFromConsumption;
        }
    };
    RecognizerEngine.prototype.saveRecogState = function () {
        // errors is a getter which will clone the errors array
        var savedErrors = this.errors;
        var savedRuleStack = cloneArr(this.RULE_STACK);
        return {
            errors: savedErrors,
            lexerState: this.exportLexerState(),
            RULE_STACK: savedRuleStack,
            CST_STACK: this.CST_STACK
        };
    };
    RecognizerEngine.prototype.reloadRecogState = function (newState) {
        this.errors = newState.errors;
        this.importLexerState(newState.lexerState);
        this.RULE_STACK = newState.RULE_STACK;
    };
    RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {
        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);
        this.RULE_STACK.push(shortName);
        // NOOP when cst is disabled
        this.cstInvocationStateUpdate(fullName, shortName);
    };
    RecognizerEngine.prototype.isBackTracking = function () {
        return this.isBackTrackingStack.length !== 0;
    };
    RecognizerEngine.prototype.getCurrRuleFullName = function () {
        var shortName = this.getLastExplicitRuleShortName();
        return this.shortRuleNameToFull[shortName];
    };
    RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {
        return this.shortRuleNameToFull[shortName];
    };
    RecognizerEngine.prototype.isAtEndOfInput = function () {
        return this.tokenMatcher(this.LA(1), EOF);
    };
    RecognizerEngine.prototype.reset = function () {
        this.resetLexerState();
        this.isBackTrackingStack = [];
        this.errors = [];
        this.RULE_STACK = [];
        // TODO: extract a specific reset for TreeBuilder trait
        this.CST_STACK = [];
        this.RULE_OCCURRENCE_STACK = [];
    };
    return RecognizerEngine;
}());

/**
 * Trait responsible for runtime parsing errors.
 */
var ErrorHandler = /** @class */ (function () {
    function ErrorHandler() {
    }
    ErrorHandler.prototype.initErrorHandler = function (config) {
        this._errors = [];
        this.errorMessageProvider = has(config, "errorMessageProvider")
            ? config.errorMessageProvider
            : DEFAULT_PARSER_CONFIG.errorMessageProvider;
    };
    ErrorHandler.prototype.SAVE_ERROR = function (error) {
        if (isRecognitionException(error)) {
            error.context = {
                ruleStack: this.getHumanReadableRuleStack(),
                ruleOccurrenceStack: cloneArr(this.RULE_OCCURRENCE_STACK)
            };
            this._errors.push(error);
            return error;
        }
        else {
            throw Error("Trying to save an Error which is not a RecognitionException");
        }
    };
    Object.defineProperty(ErrorHandler.prototype, "errors", {
        get: function () {
            return cloneArr(this._errors);
        },
        set: function (newErrors) {
            this._errors = newErrors;
        },
        enumerable: false,
        configurable: true
    });
    // TODO: consider caching the error message computed information
    ErrorHandler.prototype.raiseEarlyExitException = function (occurrence, prodType, userDefinedErrMsg) {
        var ruleName = this.getCurrRuleFullName();
        var ruleGrammar = this.getGAstProductions()[ruleName];
        var lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);
        var insideProdPaths = lookAheadPathsPerAlternative[0];
        var actualTokens = [];
        for (var i = 1; i <= this.maxLookahead; i++) {
            actualTokens.push(this.LA(i));
        }
        var msg = this.errorMessageProvider.buildEarlyExitMessage({
            expectedIterationPaths: insideProdPaths,
            actual: actualTokens,
            previous: this.LA(0),
            customUserDescription: userDefinedErrMsg,
            ruleName: ruleName
        });
        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));
    };
    // TODO: consider caching the error message computed information
    ErrorHandler.prototype.raiseNoAltException = function (occurrence, errMsgTypes) {
        var ruleName = this.getCurrRuleFullName();
        var ruleGrammar = this.getGAstProductions()[ruleName];
        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?
        var lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);
        var actualTokens = [];
        for (var i = 1; i <= this.maxLookahead; i++) {
            actualTokens.push(this.LA(i));
        }
        var previousToken = this.LA(0);
        var errMsg = this.errorMessageProvider.buildNoViableAltMessage({
            expectedPathsPerAlt: lookAheadPathsPerAlternative,
            actual: actualTokens,
            previous: previousToken,
            customUserDescription: errMsgTypes,
            ruleName: this.getCurrRuleFullName()
        });
        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));
    };
    return ErrorHandler;
}());

var ContentAssist = /** @class */ (function () {
    function ContentAssist() {
    }
    ContentAssist.prototype.initContentAssist = function () { };
    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {
        var startRuleGast = this.gastProductionsCache[startRuleName];
        if (isUndefined(startRuleGast)) {
            throw Error("Rule ->" + startRuleName + "<- does not exist in this grammar.");
        }
        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);
    };
    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...
    // TODO: should this be more explicitly part of the public API?
    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {
        var topRuleName = first$1(grammarPath.ruleStack);
        var gastProductions = this.getGAstProductions();
        var topProduction = gastProductions[topRuleName];
        var nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();
        return nextPossibleTokenTypes;
    };
    return ContentAssist;
}());

var RECORDING_NULL_OBJECT = {
    description: "This Object indicates the Parser is during Recording Phase"
};
Object.freeze(RECORDING_NULL_OBJECT);
var HANDLE_SEPARATOR = true;
var MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;
var RFT = createToken$1({ name: "RECORDING_PHASE_TOKEN", pattern: Lexer$1.NA });
augmentTokenTypes([RFT]);
var RECORDING_PHASE_TOKEN = createTokenInstance(RFT, "This IToken indicates the Parser is in Recording Phase\n\t" +
    "" +
    "See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details", 
// Using "-1" instead of NaN (as in EOF) because an actual number is less likely to
// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.
-1, -1, -1, -1, -1, -1);
Object.freeze(RECORDING_PHASE_TOKEN);
var RECORDING_PHASE_CSTNODE = {
    name: "This CSTNode indicates the Parser is in Recording Phase\n\t" +
        "See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details",
    children: {}
};
/**
 * This trait handles the creation of the GAST structure for Chevrotain Grammars
 */
var GastRecorder = /** @class */ (function () {
    function GastRecorder() {
    }
    GastRecorder.prototype.initGastRecorder = function (config) {
        this.recordingProdStack = [];
        this.RECORDING_PHASE = false;
    };
    GastRecorder.prototype.enableRecording = function () {
        var _this = this;
        this.RECORDING_PHASE = true;
        this.TRACE_INIT("Enable Recording", function () {
            var _loop_1 = function (i) {
                var idx = i > 0 ? i : "";
                _this["CONSUME" + idx] = function (arg1, arg2) {
                    return this.consumeInternalRecord(arg1, i, arg2);
                };
                _this["SUBRULE" + idx] = function (arg1, arg2) {
                    return this.subruleInternalRecord(arg1, i, arg2);
                };
                _this["OPTION" + idx] = function (arg1) {
                    return this.optionInternalRecord(arg1, i);
                };
                _this["OR" + idx] = function (arg1) {
                    return this.orInternalRecord(arg1, i);
                };
                _this["MANY" + idx] = function (arg1) {
                    this.manyInternalRecord(i, arg1);
                };
                _this["MANY_SEP" + idx] = function (arg1) {
                    this.manySepFirstInternalRecord(i, arg1);
                };
                _this["AT_LEAST_ONE" + idx] = function (arg1) {
                    this.atLeastOneInternalRecord(i, arg1);
                };
                _this["AT_LEAST_ONE_SEP" + idx] = function (arg1) {
                    this.atLeastOneSepFirstInternalRecord(i, arg1);
                };
            };
            /**
             * Warning Dark Voodoo Magic upcoming!
             * We are "replacing" the public parsing DSL methods API
             * With **new** alternative implementations on the Parser **instance**
             *
             * So far this is the only way I've found to avoid performance regressions during parsing time.
             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the "internal"
             *   implementations directly instead.
             */
            for (var i = 0; i < 10; i++) {
                _loop_1(i);
            }
            // DSL methods with the idx(suffix) as an argument
            _this["consume"] = function (idx, arg1, arg2) {
                return this.consumeInternalRecord(arg1, idx, arg2);
            };
            _this["subrule"] = function (idx, arg1, arg2) {
                return this.subruleInternalRecord(arg1, idx, arg2);
            };
            _this["option"] = function (idx, arg1) {
                return this.optionInternalRecord(arg1, idx);
            };
            _this["or"] = function (idx, arg1) {
                return this.orInternalRecord(arg1, idx);
            };
            _this["many"] = function (idx, arg1) {
                this.manyInternalRecord(idx, arg1);
            };
            _this["atLeastOne"] = function (idx, arg1) {
                this.atLeastOneInternalRecord(idx, arg1);
            };
            _this.ACTION = _this.ACTION_RECORD;
            _this.BACKTRACK = _this.BACKTRACK_RECORD;
            _this.LA = _this.LA_RECORD;
        });
    };
    GastRecorder.prototype.disableRecording = function () {
        var _this = this;
        this.RECORDING_PHASE = false;
        // By deleting these **instance** properties, any future invocation
        // will be deferred to the original methods on the **prototype** object
        // This seems to get rid of any incorrect optimizations that V8 may
        // do during the recording phase.
        this.TRACE_INIT("Deleting Recording methods", function () {
            for (var i = 0; i < 10; i++) {
                var idx = i > 0 ? i : "";
                delete _this["CONSUME" + idx];
                delete _this["SUBRULE" + idx];
                delete _this["OPTION" + idx];
                delete _this["OR" + idx];
                delete _this["MANY" + idx];
                delete _this["MANY_SEP" + idx];
                delete _this["AT_LEAST_ONE" + idx];
                delete _this["AT_LEAST_ONE_SEP" + idx];
            }
            delete _this["consume"];
            delete _this["subrule"];
            delete _this["option"];
            delete _this["or"];
            delete _this["many"];
            delete _this["atLeastOne"];
            delete _this.ACTION;
            delete _this.BACKTRACK;
            delete _this.LA;
        });
    };
    // TODO: is there any way to use this method to check no
    //   Parser methods are called inside an ACTION?
    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?
    GastRecorder.prototype.ACTION_RECORD = function (impl) {
        // NO-OP during recording
        return;
    };
    // Executing backtracking logic will break our recording logic assumptions
    GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {
        return function () { return true; };
    };
    // LA is part of the official API and may be used for custom lookahead logic
    // by end users who may forget to wrap it in ACTION or inside a GATE
    GastRecorder.prototype.LA_RECORD = function (howMuch) {
        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend
        // On LA return EOF at the end of the input so an infinite loop may occur.
        return END_OF_FILE;
    };
    GastRecorder.prototype.topLevelRuleRecord = function (name, def) {
        try {
            var newTopLevelRule = new Rule({ definition: [], name: name });
            newTopLevelRule.name = name;
            this.recordingProdStack.push(newTopLevelRule);
            def.call(this);
            this.recordingProdStack.pop();
            return newTopLevelRule;
        }
        catch (originalError) {
            if (originalError.KNOWN_RECORDER_ERROR !== true) {
                try {
                    originalError.message =
                        originalError.message +
                            '\n\t This error was thrown during the "grammar recording phase" For more info see:\n\t' +
                            "https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording";
                }
                catch (mutabilityError) {
                    // We may not be able to modify the original error object
                    throw originalError;
                }
            }
            throw originalError;
        }
    };
    // Implementation of parsing DSL
    GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {
        return recordProd.call(this, Option, actionORMethodDef, occurrence);
    };
    GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {
        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);
    };
    GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {
        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);
    };
    GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {
        recordProd.call(this, Repetition, actionORMethodDef, occurrence);
    };
    GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {
        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);
    };
    GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {
        return recordOrProd.call(this, altsOrOpts, occurrence);
    };
    GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {
        assertMethodIdxIsValid(occurrence);
        if (!ruleToCall || has(ruleToCall, "ruleName") === false) {
            var error = new Error("<SUBRULE" + getIdxSuffix(occurrence) + "> argument is invalid" +
                (" expecting a Parser method reference but got: <" + JSON.stringify(ruleToCall) + ">") +
                ("\n inside top level rule: <" + this.recordingProdStack[0].name + ">"));
            error.KNOWN_RECORDER_ERROR = true;
            throw error;
        }
        var prevProd = peek(this.recordingProdStack);
        var ruleName = ruleToCall["ruleName"];
        var newNoneTerminal = new NonTerminal({
            idx: occurrence,
            nonTerminalName: ruleName,
            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created
            referencedRule: undefined
        });
        prevProd.definition.push(newNoneTerminal);
        return this.outputCst ? RECORDING_PHASE_CSTNODE : RECORDING_NULL_OBJECT;
    };
    GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {
        assertMethodIdxIsValid(occurrence);
        if (!hasShortKeyProperty(tokType)) {
            var error = new Error("<CONSUME" + getIdxSuffix(occurrence) + "> argument is invalid" +
                (" expecting a TokenType reference but got: <" + JSON.stringify(tokType) + ">") +
                ("\n inside top level rule: <" + this.recordingProdStack[0].name + ">"));
            error.KNOWN_RECORDER_ERROR = true;
            throw error;
        }
        var prevProd = peek(this.recordingProdStack);
        var newNoneTerminal = new Terminal({
            idx: occurrence,
            terminalType: tokType
        });
        prevProd.definition.push(newNoneTerminal);
        return RECORDING_PHASE_TOKEN;
    };
    return GastRecorder;
}());
function recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {
    if (handleSep === void 0) { handleSep = false; }
    assertMethodIdxIsValid(occurrence);
    var prevProd = peek(this.recordingProdStack);
    var grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;
    var newProd = new prodConstructor({ definition: [], idx: occurrence });
    if (handleSep) {
        newProd.separator = mainProdArg.SEP;
    }
    if (has(mainProdArg, "MAX_LOOKAHEAD")) {
        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;
    }
    this.recordingProdStack.push(newProd);
    grammarAction.call(this);
    prevProd.definition.push(newProd);
    this.recordingProdStack.pop();
    return RECORDING_NULL_OBJECT;
}
function recordOrProd(mainProdArg, occurrence) {
    var _this = this;
    assertMethodIdxIsValid(occurrence);
    var prevProd = peek(this.recordingProdStack);
    // Only an array of alternatives
    var hasOptions = isArray(mainProdArg) === false;
    var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;
    var newOrProd = new Alternation({
        definition: [],
        idx: occurrence,
        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true
    });
    if (has(mainProdArg, "MAX_LOOKAHEAD")) {
        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;
    }
    var hasPredicates = some(alts, function (currAlt) { return isFunction(currAlt.GATE); });
    newOrProd.hasPredicates = hasPredicates;
    prevProd.definition.push(newOrProd);
    forEach(alts, function (currAlt) {
        var currAltFlat = new Alternative({ definition: [] });
        newOrProd.definition.push(currAltFlat);
        if (has(currAlt, "IGNORE_AMBIGUITIES")) {
            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES;
        }
        // **implicit** ignoreAmbiguities due to usage of gate
        else if (has(currAlt, "GATE")) {
            currAltFlat.ignoreAmbiguities = true;
        }
        _this.recordingProdStack.push(currAltFlat);
        currAlt.ALT.call(_this);
        _this.recordingProdStack.pop();
    });
    return RECORDING_NULL_OBJECT;
}
function getIdxSuffix(idx) {
    return idx === 0 ? "" : "" + idx;
}
function assertMethodIdxIsValid(idx) {
    if (idx < 0 || idx > MAX_METHOD_IDX) {
        var error = new Error(
        // The stack trace will contain all the needed details
        "Invalid DSL Method idx value: <" + idx + ">\n\t" +
            ("Idx value must be a none negative value smaller than " + (MAX_METHOD_IDX + 1)));
        error.KNOWN_RECORDER_ERROR = true;
        throw error;
    }
}

/**
 * Trait responsible for runtime parsing errors.
 */
var PerformanceTracer = /** @class */ (function () {
    function PerformanceTracer() {
    }
    PerformanceTracer.prototype.initPerformanceTracer = function (config) {
        if (has(config, "traceInitPerf")) {
            var userTraceInitPerf = config.traceInitPerf;
            var traceIsNumber = typeof userTraceInitPerf === "number";
            this.traceInitMaxIdent = traceIsNumber
                ? userTraceInitPerf
                : Infinity;
            this.traceInitPerf = traceIsNumber
                ? userTraceInitPerf > 0
                : userTraceInitPerf;
        }
        else {
            this.traceInitMaxIdent = 0;
            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;
        }
        this.traceInitIndent = -1;
    };
    PerformanceTracer.prototype.TRACE_INIT = function (phaseDesc, phaseImpl) {
        // No need to optimize this using NOOP pattern because
        // It is not called in a hot spot...
        if (this.traceInitPerf === true) {
            this.traceInitIndent++;
            var indent = new Array(this.traceInitIndent + 1).join("\t");
            if (this.traceInitIndent < this.traceInitMaxIdent) {
                console.log(indent + "--> <" + phaseDesc + ">");
            }
            var _a = timer(phaseImpl), time = _a.time, value = _a.value;
            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */
            var traceMethod = time > 10 ? console.warn : console.log;
            if (this.traceInitIndent < this.traceInitMaxIdent) {
                traceMethod(indent + "<-- <" + phaseDesc + "> time: " + time + "ms");
            }
            this.traceInitIndent--;
            return value;
        }
        else {
            return phaseImpl();
        }
    };
    return PerformanceTracer;
}());

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var END_OF_FILE = createTokenInstance(EOF, "", NaN, NaN, NaN, NaN, NaN, NaN);
Object.freeze(END_OF_FILE);
var DEFAULT_PARSER_CONFIG = Object.freeze({
    recoveryEnabled: false,
    maxLookahead: 3,
    dynamicTokensEnabled: false,
    outputCst: true,
    errorMessageProvider: defaultParserErrorProvider,
    nodeLocationTracking: "none",
    traceInitPerf: false,
    skipValidations: false
});
var DEFAULT_RULE_CONFIG = Object.freeze({
    recoveryValueFunc: function () { return undefined; },
    resyncEnabled: true
});
var ParserDefinitionErrorType;
(function (ParserDefinitionErrorType) {
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_RULE_NAME"] = 0] = "INVALID_RULE_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["DUPLICATE_RULE_NAME"] = 1] = "DUPLICATE_RULE_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_RULE_OVERRIDE"] = 2] = "INVALID_RULE_OVERRIDE";
    ParserDefinitionErrorType[ParserDefinitionErrorType["DUPLICATE_PRODUCTIONS"] = 3] = "DUPLICATE_PRODUCTIONS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["UNRESOLVED_SUBRULE_REF"] = 4] = "UNRESOLVED_SUBRULE_REF";
    ParserDefinitionErrorType[ParserDefinitionErrorType["LEFT_RECURSION"] = 5] = "LEFT_RECURSION";
    ParserDefinitionErrorType[ParserDefinitionErrorType["NONE_LAST_EMPTY_ALT"] = 6] = "NONE_LAST_EMPTY_ALT";
    ParserDefinitionErrorType[ParserDefinitionErrorType["AMBIGUOUS_ALTS"] = 7] = "AMBIGUOUS_ALTS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["CONFLICT_TOKENS_RULES_NAMESPACE"] = 8] = "CONFLICT_TOKENS_RULES_NAMESPACE";
    ParserDefinitionErrorType[ParserDefinitionErrorType["INVALID_TOKEN_NAME"] = 9] = "INVALID_TOKEN_NAME";
    ParserDefinitionErrorType[ParserDefinitionErrorType["NO_NON_EMPTY_LOOKAHEAD"] = 10] = "NO_NON_EMPTY_LOOKAHEAD";
    ParserDefinitionErrorType[ParserDefinitionErrorType["AMBIGUOUS_PREFIX_ALTS"] = 11] = "AMBIGUOUS_PREFIX_ALTS";
    ParserDefinitionErrorType[ParserDefinitionErrorType["TOO_MANY_ALTS"] = 12] = "TOO_MANY_ALTS";
})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));
function EMPTY_ALT(value) {
    if (value === void 0) { value = undefined; }
    return function () {
        return value;
    };
}
var Parser$2 = /** @class */ (function () {
    function Parser(tokenVocabulary, config) {
        this.definitionErrors = [];
        this.selfAnalysisDone = false;
        var that = this;
        that.initErrorHandler(config);
        that.initLexerAdapter();
        that.initLooksAhead(config);
        that.initRecognizerEngine(tokenVocabulary, config);
        that.initRecoverable(config);
        that.initTreeBuilder(config);
        that.initContentAssist();
        that.initGastRecorder(config);
        that.initPerformanceTracer(config);
        if (has(config, "ignoredIssues")) {
            throw new Error("The <ignoredIssues> IParserConfig property has been deprecated.\n\t" +
                "Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\n\t" +
                "See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\n\t" +
                "For further details.");
        }
        this.skipValidations = has(config, "skipValidations")
            ? config.skipValidations
            : DEFAULT_PARSER_CONFIG.skipValidations;
    }
    /**
     *  @deprecated use the **instance** method with the same name instead
     */
    Parser.performSelfAnalysis = function (parserInstance) {
        throw Error("The **static** `performSelfAnalysis` method has been deprecated." +
            "\t\nUse the **instance** method with the same name instead.");
    };
    Parser.prototype.performSelfAnalysis = function () {
        var _this = this;
        this.TRACE_INIT("performSelfAnalysis", function () {
            var defErrorsMsgs;
            _this.selfAnalysisDone = true;
            var className = _this.className;
            _this.TRACE_INIT("toFastProps", function () {
                // Without this voodoo magic the parser would be x3-x4 slower
                // It seems it is better to invoke `toFastProperties` **before**
                // Any manipulations of the `this` object done during the recording phase.
                toFastProperties(_this);
            });
            _this.TRACE_INIT("Grammar Recording", function () {
                try {
                    _this.enableRecording();
                    // Building the GAST
                    forEach(_this.definedRulesNames, function (currRuleName) {
                        var wrappedRule = _this[currRuleName];
                        var originalGrammarAction = wrappedRule["originalGrammarAction"];
                        var recordedRuleGast = undefined;
                        _this.TRACE_INIT(currRuleName + " Rule", function () {
                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);
                        });
                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;
                    });
                }
                finally {
                    _this.disableRecording();
                }
            });
            var resolverErrors = [];
            _this.TRACE_INIT("Grammar Resolving", function () {
                resolverErrors = resolveGrammar({
                    rules: values(_this.gastProductionsCache)
                });
                _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?
            });
            _this.TRACE_INIT("Grammar Validations", function () {
                // only perform additional grammar validations IFF no resolving errors have occurred.
                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.
                if (isEmpty(resolverErrors) && _this.skipValidations === false) {
                    var validationErrors = validateGrammar({
                        rules: values(_this.gastProductionsCache),
                        maxLookahead: _this.maxLookahead,
                        tokenTypes: values(_this.tokensMap),
                        errMsgProvider: defaultGrammarValidatorErrorProvider,
                        grammarName: className
                    });
                    _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?
                }
            });
            // this analysis may fail if the grammar is not perfectly valid
            if (isEmpty(_this.definitionErrors)) {
                // The results of these computations are not needed unless error recovery is enabled.
                if (_this.recoveryEnabled) {
                    _this.TRACE_INIT("computeAllProdsFollows", function () {
                        var allFollows = computeAllProdsFollows(values(_this.gastProductionsCache));
                        _this.resyncFollows = allFollows;
                    });
                }
                _this.TRACE_INIT("ComputeLookaheadFunctions", function () {
                    _this.preComputeLookaheadFunctions(values(_this.gastProductionsCache));
                });
            }
            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&
                !isEmpty(_this.definitionErrors)) {
                defErrorsMsgs = map(_this.definitionErrors, function (defError) { return defError.message; });
                throw new Error("Parser Definition Errors detected:\n " + defErrorsMsgs.join("\n-------------------------------\n"));
            }
        });
    };
    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.
    // (normally during the parser's constructor).
    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,
    // for example: duplicate rule names, referencing an unresolved subrule, ect...
    // This flag should not be enabled during normal usage, it is used in special situations, for example when
    // needing to display the parser definition errors in some GUI(online playground).
    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;
    return Parser;
}());
applyMixins(Parser$2, [
    Recoverable,
    LooksAhead,
    TreeBuilder,
    LexerAdapter,
    RecognizerEngine,
    RecognizerApi,
    ErrorHandler,
    ContentAssist,
    GastRecorder,
    PerformanceTracer
]);
var CstParser$1 = /** @class */ (function (_super) {
    __extends(CstParser, _super);
    function CstParser(tokenVocabulary, config) {
        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }
        var _this = this;
        var configClone = cloneObj(config);
        configClone.outputCst = true;
        _this = _super.call(this, tokenVocabulary, configClone) || this;
        return _this;
    }
    return CstParser;
}(Parser$2));
var EmbeddedActionsParser = /** @class */ (function (_super) {
    __extends(EmbeddedActionsParser, _super);
    function EmbeddedActionsParser(tokenVocabulary, config) {
        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }
        var _this = this;
        var configClone = cloneObj(config);
        configClone.outputCst = false;
        _this = _super.call(this, tokenVocabulary, configClone) || this;
        return _this;
    }
    return EmbeddedActionsParser;
}(Parser$2));

function createSyntaxDiagramsCode(grammar, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? "https://unpkg.com/chevrotain@" + VERSION + "/diagrams/" : _c, _d = _b.css, css = _d === void 0 ? "https://unpkg.com/chevrotain@" + VERSION + "/diagrams/diagrams.css" : _d;
    var header = "\n<!-- This is a generated file -->\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n  body {\n    background-color: hsl(30, 20%, 95%)\n  }\n</style>\n\n";
    var cssHtml = "\n<link rel='stylesheet' href='" + css + "'>\n";
    var scripts = "\n<script src='" + resourceBase + "vendor/railroad-diagrams.js'></script>\n<script src='" + resourceBase + "src/diagrams_builder.js'></script>\n<script src='" + resourceBase + "src/diagrams_behavior.js'></script>\n<script src='" + resourceBase + "src/main.js'></script>\n";
    var diagramsDiv = "\n<div id=\"diagrams\" align=\"center\"></div>    \n";
    var serializedGrammar = "\n<script>\n    window.serializedGrammar = " + JSON.stringify(grammar, null, "  ") + ";\n</script>\n";
    var initLogic = "\n<script>\n    var diagramsDiv = document.getElementById(\"diagrams\");\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\n</script>\n";
    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);
}

/**
 * Missing features
 * 1. Rule arguments
 * 2. Gates
 * 3. embedded actions
 */
var NL = "\n";
function genUmdModule(options) {
    return "\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['chevrotain'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('chevrotain'));\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(root.b);\n    }\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\n\n" + genClass(options) + "\n    \nreturn {\n    " + options.name + ": " + options.name + " \n}\n}));\n";
}
function genWrapperFunction(options) {
    return "    \n" + genClass(options) + "\nreturn new " + options.name + "(tokenVocabulary, config)    \n";
}
function genClass(options) {
    // TODO: how to pass the token vocabulary? Constructor? other?
    var result = "\nfunction " + options.name + "(tokenVocabulary, config) {\n    // invoke super constructor\n    // No support for embedded actions currently, so we can 'hardcode'\n    // The use of CstParser.\n    chevrotain.CstParser.call(this, tokenVocabulary, config)\n\n    const $ = this\n\n    " + genAllRules(options.rules) + "\n\n    // very important to call this after all the rules have been defined.\n    // otherwise the parser may not work correctly as it will lack information\n    // derived during the self analysis phase.\n    this.performSelfAnalysis(this)\n}\n\n// inheritance as implemented in javascript in the previous decade... :(\n" + options.name + ".prototype = Object.create(chevrotain.CstParser.prototype)\n" + options.name + ".prototype.constructor = " + options.name + "    \n    ";
    return result;
}
function genAllRules(rules) {
    var rulesText = map(rules, function (currRule) {
        return genRule(currRule, 1);
    });
    return rulesText.join("\n");
}
function genRule(prod, n) {
    var result = indent$2(n, "$.RULE(\"" + prod.name + "\", function() {") + NL;
    result += genDefinition(prod.definition, n + 1);
    result += indent$2(n + 1, "})") + NL;
    return result;
}
function genTerminal(prod, n) {
    var name = prod.terminalType.name;
    // TODO: potential performance optimization, avoid tokenMap Dictionary access
    return indent$2(n, "$.CONSUME" + prod.idx + "(this.tokensMap." + name + ")" + NL);
}
function genNonTerminal(prod, n) {
    return indent$2(n, "$.SUBRULE" + prod.idx + "($." + prod.nonTerminalName + ")" + NL);
}
function genAlternation(prod, n) {
    var result = indent$2(n, "$.OR" + prod.idx + "([") + NL;
    var alts = map(prod.definition, function (altDef) { return genSingleAlt(altDef, n + 1); });
    result += alts.join("," + NL);
    result += NL + indent$2(n, "])" + NL);
    return result;
}
function genSingleAlt(prod, n) {
    var result = indent$2(n, "{") + NL;
    result += indent$2(n + 1, "ALT: function() {") + NL;
    result += genDefinition(prod.definition, n + 1);
    result += indent$2(n + 1, "}") + NL;
    result += indent$2(n, "}");
    return result;
}
function genProd(prod, n) {
    /* istanbul ignore else */
    if (prod instanceof NonTerminal) {
        return genNonTerminal(prod, n);
    }
    else if (prod instanceof Option) {
        return genDSLRule("OPTION", prod, n);
    }
    else if (prod instanceof RepetitionMandatory) {
        return genDSLRule("AT_LEAST_ONE", prod, n);
    }
    else if (prod instanceof RepetitionMandatoryWithSeparator) {
        return genDSLRule("AT_LEAST_ONE_SEP", prod, n);
    }
    else if (prod instanceof RepetitionWithSeparator) {
        return genDSLRule("MANY_SEP", prod, n);
    }
    else if (prod instanceof Repetition) {
        return genDSLRule("MANY", prod, n);
    }
    else if (prod instanceof Alternation) {
        return genAlternation(prod, n);
    }
    else if (prod instanceof Terminal) {
        return genTerminal(prod, n);
    }
    else if (prod instanceof Alternative) {
        return genDefinition(prod.definition, n);
    }
    else {
        throw Error("non exhaustive match");
    }
}
function genDSLRule(dslName, prod, n) {
    var result = indent$2(n, "$." + (dslName + prod.idx) + "(");
    if (prod.separator) {
        result += "{" + NL;
        result +=
            indent$2(n + 1, "SEP: this.tokensMap." + prod.separator.name) + "," + NL;
        result += "DEF: " + genDefFunction(prod.definition, n + 2) + NL;
        result += indent$2(n, "}") + NL;
    }
    else {
        result += genDefFunction(prod.definition, n + 1);
    }
    result += indent$2(n, ")") + NL;
    return result;
}
function genDefFunction(definition, n) {
    var def = "function() {" + NL;
    def += genDefinition(definition, n);
    def += indent$2(n, "}") + NL;
    return def;
}
function genDefinition(def, n) {
    var result = "";
    forEach(def, function (prod) {
        result += genProd(prod, n + 1);
    });
    return result;
}
function indent$2(howMuch, text) {
    var spaces = Array(howMuch * 4 + 1).join(" ");
    return spaces + text;
}

function generateParserFactory(options) {
    var wrapperText = genWrapperFunction({
        name: options.name,
        rules: options.rules
    });
    var constructorWrapper = new Function("tokenVocabulary", "config", "chevrotain", wrapperText);
    return function (config) {
        return constructorWrapper(options.tokenVocabulary, config, 
        // TODO: check how the require is transpiled/webpacked
        require("../api"));
    };
}
function generateParserModule(options) {
    return genUmdModule({ name: options.name, rules: options.rules });
}

/* istanbul ignore file - tricky to import some things from this module during testing */
/* istanbul ignore next */
function clearCache() {
    console.warn("The clearCache function was 'soft' removed from the Chevrotain API." +
        "\n\t It performs no action other than printing this message." +
        "\n\t Please avoid using it as it will be completely removed in the future");
}
var Parser$1 = /** @class */ (function () {
    function Parser() {
        throw new Error("The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\t\n" +
            "See: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_7-0-0");
    }
    return Parser;
}());

var api$1 = /*#__PURE__*/Object.freeze({
	__proto__: null,
	clearCache: clearCache,
	Parser: Parser$1,
	VERSION: VERSION,
	CstParser: CstParser$1,
	EmbeddedActionsParser: EmbeddedActionsParser,
	get ParserDefinitionErrorType () { return ParserDefinitionErrorType; },
	EMPTY_ALT: EMPTY_ALT,
	Lexer: Lexer$1,
	get LexerDefinitionErrorType () { return LexerDefinitionErrorType; },
	createToken: createToken$1,
	createTokenInstance: createTokenInstance,
	EOF: EOF,
	tokenLabel: tokenLabel,
	tokenMatcher: tokenMatcher$1,
	tokenName: tokenName,
	defaultGrammarResolverErrorProvider: defaultGrammarResolverErrorProvider,
	defaultGrammarValidatorErrorProvider: defaultGrammarValidatorErrorProvider,
	defaultParserErrorProvider: defaultParserErrorProvider,
	EarlyExitException: EarlyExitException,
	isRecognitionException: isRecognitionException,
	MismatchedTokenException: MismatchedTokenException,
	NotAllInputParsedException: NotAllInputParsedException,
	NoViableAltException: NoViableAltException,
	defaultLexerErrorProvider: defaultLexerErrorProvider,
	Alternation: Alternation,
	Alternative: Alternative,
	NonTerminal: NonTerminal,
	Option: Option,
	Repetition: Repetition,
	RepetitionMandatory: RepetitionMandatory,
	RepetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator,
	RepetitionWithSeparator: RepetitionWithSeparator,
	Rule: Rule,
	Terminal: Terminal,
	serializeGrammar: serializeGrammar,
	serializeProduction: serializeProduction,
	GAstVisitor: GAstVisitor,
	assignOccurrenceIndices: assignOccurrenceIndices,
	resolveGrammar: resolveGrammar,
	validateGrammar: validateGrammar,
	createSyntaxDiagramsCode: createSyntaxDiagramsCode,
	generateParserFactory: generateParserFactory,
	generateParserModule: generateParserModule
});

var require$$0 = /*@__PURE__*/getAugmentedNamespace(api$1);

const { createToken: createTokenOrg, Lexer } = require$$0;

// A little mini DSL for easier lexer definition.
const fragments = {};
const f = fragments;

function FRAGMENT(name, def) {
  fragments[name] = typeof def === "string" ? def : def.source;
}

function makePattern(strings, ...args) {
  let combined = "";
  for (let i = 0; i < strings.length; i++) {
    combined += strings[i];
    if (i < args.length) {
      let pattern = args[i];
      // By wrapping in a RegExp (none) capturing group
      // We enabled the safe usage of qualifiers and assertions.
      combined += `(?:${pattern})`;
    }
  }
  return new RegExp(combined);
}
const tokensDictionary = {};

function createToken(options) {
  const newTokenType = createTokenOrg(options);
  tokensDictionary[options.name] = newTokenType;
  return newTokenType;
}

FRAGMENT(
  "NameStartChar",
  "(:|[a-zA-Z]|_|\\u2070-\\u218F|\\u2C00-\\u2FEF|\\u3001-\\uD7FF|\\uF900-\\uFDCF|\\uFDF0-\\uFFFD)"
);

FRAGMENT(
  "NameChar",
  makePattern`${f.NameStartChar}|-|\\.|\\d|\\u00B7||[\\u0300-\\u036F]|[\\u203F-\\u2040]`
);
FRAGMENT("Name", makePattern`${f.NameStartChar}(${f.NameChar})*`);

const Comment = createToken({
  name: "Comment",
  pattern: /<!--(.|\r?\n)*?-->/,
  // A Comment may span multiple lines.
  line_breaks: true,
});

const CData = createToken({
  name: "CData",
  pattern: /<!\[CDATA\[(.|\r?\n)*?]]>/,
  line_breaks: true,
});

const DocType = createToken({
  name: "DocType",
  pattern: /<!DOCTYPE/,
  push_mode: "INSIDE",
});

const IgnoredDTD = createToken({
  name: "DTD",
  pattern: /<!.*?>/,
  group: Lexer.SKIPPED,
});

const EntityRef = createToken({
  name: "EntityRef",
  pattern: makePattern`&${f.Name};`,
});

const CharRef = createToken({
  name: "CharRef",
  pattern: /&#\d+;|&#x[a-fA-F0-9]/,
});

const SEA_WS = createToken({
  name: "SEA_WS",
  pattern: /( |\t|\n|\r\n)+/,
});

const XMLDeclOpen = createToken({
  name: "XMLDeclOpen",
  pattern: /<\?xml[ \t\r\n]/,
  push_mode: "INSIDE",
});

const SLASH_OPEN = createToken({
  name: "SLASH_OPEN",
  pattern: /<\//,
  push_mode: "INSIDE",
});

const INVALID_SLASH_OPEN = createToken({
  name: "INVALID_SLASH_OPEN",
  pattern: /<\//,
  categories: [SLASH_OPEN],
});

const PROCESSING_INSTRUCTION = createToken({
  name: "PROCESSING_INSTRUCTION",
  pattern: makePattern`<\\?${f.Name}.*\\?>`,
});

const OPEN = createToken({ name: "OPEN", pattern: /</, push_mode: "INSIDE" });
// Meant to avoid skipping '<' token in a partial sequence of elements.
// Example of the problem this solves:
// <
// <from>john</from>
//  - The second '<' will be skipped because in the mode "INSIDE" '<' is not recognized.
//  - This means the AST will include only a single element instead of two
const INVALID_OPEN_INSIDE = createToken({
  name: "INVALID_OPEN_INSIDE",
  pattern: /</,
  categories: [OPEN],
});

const TEXT = createToken({ name: "TEXT", pattern: /[^<&]+/ });

const CLOSE = createToken({ name: "CLOSE", pattern: />/, pop_mode: true });

const SPECIAL_CLOSE = createToken({
  name: "SPECIAL_CLOSE",
  pattern: /\?>/,
  pop_mode: true,
});

const SLASH_CLOSE = createToken({
  name: "SLASH_CLOSE",
  pattern: /\/>/,
  pop_mode: true,
});

const SLASH = createToken({ name: "SLASH", pattern: /\// });

const STRING = createToken({
  name: "STRING",
  pattern: /"[^<"]*"|'[^<']*'/,
});

const EQUALS = createToken({ name: "EQUALS", pattern: /=/ });

const Name = createToken({ name: "Name", pattern: makePattern`${f.Name}` });

const S = createToken({
  name: "S",
  pattern: /[ \t\r\n]/,
  group: Lexer.SKIPPED,
});

const xmlLexerDefinition = {
  defaultMode: "OUTSIDE",

  modes: {
    OUTSIDE: [
      Comment,
      CData,
      DocType,
      IgnoredDTD,
      EntityRef,
      CharRef,
      SEA_WS,
      XMLDeclOpen,
      SLASH_OPEN,
      PROCESSING_INSTRUCTION,
      OPEN,
      TEXT,
    ],
    INSIDE: [
      // Tokens from `OUTSIDE` to improve error recovery behavior
      Comment,
      INVALID_SLASH_OPEN,
      INVALID_OPEN_INSIDE,
      // "Real" `INSIDE` tokens
      CLOSE,
      SPECIAL_CLOSE,
      SLASH_CLOSE,
      SLASH,
      EQUALS,
      STRING,
      Name,
      S,
    ],
  },
};

const xmlLexer$1 = new Lexer(xmlLexerDefinition, {
  // Reducing the amount of position tracking can provide a small performance boost (<10%)
  // Likely best to keep the full info for better error position reporting and
  // to expose "fuller" ITokens from the Lexer.
  positionTracking: "full",
  ensureOptimizations: false,

  // TODO: inspect definitions for XML line terminators
  lineTerminatorCharacters: ["\n"],
  lineTerminatorsPattern: /\n|\r\n/g,
});

var lexer = {
  xmlLexer: xmlLexer$1,
  tokensDictionary,
};

const { CstParser, tokenMatcher } = require$$0;
const { tokensDictionary: t } = lexer;

class Parser extends CstParser {
  constructor() {
    super(t, {
      maxLookahead: 1,
      recoveryEnabled: true,
      nodeLocationTracking: "full",
    });

    this.deletionRecoveryEnabled = true;

    const $ = this;

    $.RULE("document", () => {
      $.OPTION(() => {
        $.SUBRULE($.prolog);
      });

      $.MANY(() => {
        $.SUBRULE($.misc);
      });

      $.OPTION2(() => {
        $.SUBRULE($.docTypeDecl);
      });

      $.MANY2(() => {
        $.SUBRULE2($.misc);
      });

      $.SUBRULE($.element);

      $.MANY3(() => {
        $.SUBRULE3($.misc);
      });
    });

    $.RULE("prolog", () => {
      $.CONSUME(t.XMLDeclOpen);
      $.MANY(() => {
        $.SUBRULE($.attribute);
      });
      $.CONSUME(t.SPECIAL_CLOSE);
    });

    // https://www.w3.org/TR/xml/#NT-doctypedecl
    $.RULE("docTypeDecl", () => {
      $.CONSUME(t.DocType);
      $.CONSUME(t.Name);

      $.OPTION(() => {
        $.SUBRULE($.externalID);
      });

      // The internal subSet part is intentionally not implemented because we do not at this
      // time wish to implement a full DTD Parser as part of this project...
      // https://www.w3.org/TR/xml/#NT-intSubset

      $.CONSUME(t.CLOSE);
    });

    $.RULE("externalID", () => {
      // Using gates to assert the value of the "Name" Identifiers.
      // We could use Categories to model un-reserved keywords, however I am not sure
      // The added complexity is needed at this time...
      $.OR([
        {
          GATE: () => $.LA(1).image === "SYSTEM",
          ALT: () => {
            $.CONSUME2(t.Name, { LABEL: "System" });
            $.CONSUME(t.STRING, { LABEL: "SystemLiteral" });
          },
        },
        {
          GATE: () => $.LA(1).image === "PUBLIC",
          ALT: () => {
            $.CONSUME3(t.Name, { LABEL: "Public" });
            $.CONSUME2(t.STRING, { LABEL: "PubIDLiteral" });
            $.CONSUME3(t.STRING, { LABEL: "SystemLiteral" });
          },
        },
      ]);
    });

    $.RULE("content", () => {
      $.MANY(() => {
        $.OR([
          { ALT: () => $.SUBRULE($.element) },
          { ALT: () => $.SUBRULE($.chardata) },
          { ALT: () => $.SUBRULE($.reference) },
          { ALT: () => $.CONSUME(t.CData) },
          { ALT: () => $.CONSUME(t.PROCESSING_INSTRUCTION) },
          { ALT: () => $.CONSUME(t.Comment) },
        ]);
      });
    });

    $.RULE("element", () => {
      $.CONSUME(t.OPEN);
      try {
        this.deletionRecoveryEnabled = false;
        // disabling single token deletion here
        // because `<
        //            </note>`
        // will be parsed as: `<note>`
        // and the next element will be lost
        $.CONSUME(t.Name);
      } finally {
        this.deletionRecoveryEnabled = true;
      }
      $.MANY(() => {
        $.SUBRULE($.attribute);
      });

      $.OR([
        {
          ALT: () => {
            $.CONSUME(t.CLOSE, { LABEL: "START_CLOSE" });
            $.SUBRULE($.content);
            $.CONSUME(t.SLASH_OPEN);
            $.CONSUME2(t.Name, { LABEL: "END_NAME" });
            $.CONSUME2(t.CLOSE, { LABEL: "END" });
          },
        },
        {
          ALT: () => {
            $.CONSUME(t.SLASH_CLOSE);
          },
        },
      ]);
    });

    $.RULE("reference", () => {
      $.OR([
        { ALT: () => $.CONSUME(t.EntityRef) },
        { ALT: () => $.CONSUME(t.CharRef) },
      ]);
    });

    $.RULE("attribute", () => {
      $.CONSUME(t.Name);
      try {
        this.deletionRecoveryEnabled = false;
        // disabling single token deletion here
        // because `attrib1 attrib2="666`
        // will be parsed as: `attrib1="666`
        $.CONSUME(t.EQUALS);
        // disabling single token deletion here
        // to avoid new elementName being
        $.CONSUME(t.STRING);
      } finally {
        this.deletionRecoveryEnabled = true;
      }
    });

    $.RULE("chardata", () => {
      $.OR([
        { ALT: () => $.CONSUME(t.TEXT) },
        { ALT: () => $.CONSUME(t.SEA_WS) },
      ]);
    });

    $.RULE("misc", () => {
      $.OR([
        { ALT: () => $.CONSUME(t.Comment) },
        { ALT: () => $.CONSUME(t.PROCESSING_INSTRUCTION) },
        { ALT: () => $.CONSUME(t.SEA_WS) },
      ]);
    });

    this.performSelfAnalysis();
  }

  canRecoverWithSingleTokenDeletion(expectedTokType) {
    if (this.deletionRecoveryEnabled === false) {
      return false;
    }
    return super.canRecoverWithSingleTokenDeletion(expectedTokType);
  }

  // TODO: provide this fix upstream to chevrotain
  // https://github.com/SAP/chevrotain/issues/1055
  /* istanbul ignore next - should be tested as part of Chevrotain */
  findReSyncTokenType() {
    const allPossibleReSyncTokTypes = this.flattenFollowSet();
    // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input
    let nextToken = this.LA(1);
    let k = 2;
    /* eslint-disable-next-line no-constant-condition -- see above comment */
    while (true) {
      const foundMatch = allPossibleReSyncTokTypes.find((resyncTokType) => {
        const canMatch = tokenMatcher(nextToken, resyncTokType);
        return canMatch;
      });
      if (foundMatch !== undefined) {
        return foundMatch;
      }
      nextToken = this.LA(k);
      k++;
    }
  }
}

// Re-use the same parser instance
const xmlParser$1 = new Parser();

var parser$1 = {
  xmlParser: xmlParser$1,
};

const { xmlLexer } = lexer;
const { xmlParser } = parser$1;

var api = {
  parse: function parse(text) {
    const lexResult = xmlLexer.tokenize(text);
    // setting a new input will RESET the parser instance's state.
    xmlParser.input = lexResult.tokens;
    // any top level rule may be used as an entry point
    const cst = xmlParser.document();

    return {
      cst: cst,
      tokenVector: lexResult.tokens,
      lexErrors: lexResult.errors,
      parseErrors: xmlParser.errors,
    };
  },

  BaseXmlCstVisitor: xmlParser.getBaseCstVisitorConstructor(),
};

Object.defineProperty(parser$2, "__esModule", { value: true });
const parser_1$1 = api;
const parser = {
    parse(text) {
        const { lexErrors, parseErrors, cst } = (0, parser_1$1.parse)(text);
        if (lexErrors.length > 0 || parseErrors.length > 0) {
            throw Error("Error parsing XML");
        }
        return cst;
    },
    astFormat: "xml",
    locStart(node) {
        return node.location.startOffset;
    },
    locEnd(node) {
        return node.location.endOffset;
    }
};
parser$2.default = parser;

var printer$1 = {};

var doc = {exports: {}};

(function (module, exports) {
(function (global, factory) {
	module.exports = factory() ;
})(commonjsGlobal, (function () {
	var commonjsGlobal$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof self !== 'undefined' ? self : {};

	/**
	 * @param {Doc[]} parts
	 * @returns Doc
	 */


	function concat$1(parts) {
	  // access the internals of a document directly.
	  // if(parts.length === 1) {
	  //   // If it's a single document, no need to concat it.
	  //   return parts[0];
	  // }


	  return {
	    type: "concat",
	    parts
	  };
	}
	/**
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function indent$1(contents) {

	  return {
	    type: "indent",
	    contents
	  };
	}
	/**
	 * @param {number | string} widthOrString
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function align(widthOrString, contents) {

	  return {
	    type: "align",
	    contents,
	    n: widthOrString
	  };
	}
	/**
	 * @param {Doc} contents
	 * @param {object} [opts] - TBD ???
	 * @returns Doc
	 */


	function group(contents) {
	  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  return {
	    type: "group",
	    id: opts.id,
	    contents,
	    break: Boolean(opts.shouldBreak),
	    expandedStates: opts.expandedStates
	  };
	}
	/**
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function dedentToRoot(contents) {
	  return align(Number.NEGATIVE_INFINITY, contents);
	}
	/**
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function markAsRoot(contents) {
	  // @ts-expect-error - TBD ???:
	  return align({
	    type: "root"
	  }, contents);
	}
	/**
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function dedent(contents) {
	  return align(-1, contents);
	}
	/**
	 * @param {Doc[]} states
	 * @param {object} [opts] - TBD ???
	 * @returns Doc
	 */


	function conditionalGroup(states, opts) {
	  return group(states[0], Object.assign(Object.assign({}, opts), {}, {
	    expandedStates: states
	  }));
	}
	/**
	 * @param {Doc[]} parts
	 * @returns Doc
	 */


	function fill$1(parts) {

	  return {
	    type: "fill",
	    parts
	  };
	}
	/**
	 * @param {Doc} [breakContents]
	 * @param {Doc} [flatContents]
	 * @param {object} [opts] - TBD ???
	 * @returns Doc
	 */


	function ifBreak(breakContents, flatContents) {
	  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	  return {
	    type: "if-break",
	    breakContents,
	    flatContents,
	    groupId: opts.groupId
	  };
	}
	/**
	 * Optimized version of `ifBreak(indent(doc), doc, { groupId: ... })`
	 * @param {Doc} contents
	 * @param {{ groupId: symbol, negate?: boolean }} opts
	 * @returns Doc
	 */


	function indentIfBreak(contents, opts) {
	  return {
	    type: "indent-if-break",
	    contents,
	    groupId: opts.groupId,
	    negate: opts.negate
	  };
	}
	/**
	 * @param {Doc} contents
	 * @returns Doc
	 */


	function lineSuffix(contents) {

	  return {
	    type: "line-suffix",
	    contents
	  };
	}

	const lineSuffixBoundary = {
	  type: "line-suffix-boundary"
	};
	const breakParent = {
	  type: "break-parent"
	};
	const trim$1 = {
	  type: "trim"
	};
	const hardlineWithoutBreakParent = {
	  type: "line",
	  hard: true
	};
	const literallineWithoutBreakParent = {
	  type: "line",
	  hard: true,
	  literal: true
	};
	const line = {
	  type: "line"
	};
	const softline = {
	  type: "line",
	  soft: true
	}; // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat

	const hardline = concat$1([hardlineWithoutBreakParent, breakParent]); // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat

	const literalline$1 = concat$1([literallineWithoutBreakParent, breakParent]);
	const cursor$1 = {
	  type: "cursor",
	  placeholder: Symbol("cursor")
	};
	/**
	 * @param {Doc} sep
	 * @param {Doc[]} arr
	 * @returns Doc
	 */

	function join$1(sep, arr) {
	  const res = [];

	  for (let i = 0; i < arr.length; i++) {
	    if (i !== 0) {
	      res.push(sep);
	    }

	    res.push(arr[i]);
	  } // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat


	  return concat$1(res);
	}
	/**
	 * @param {Doc} doc
	 * @param {number} size
	 * @param {number} tabWidth
	 */


	function addAlignmentToDoc(doc, size, tabWidth) {
	  let aligned = doc;

	  if (size > 0) {
	    // Use indent to add tabs for all the levels of tabs we need
	    for (let i = 0; i < Math.floor(size / tabWidth); ++i) {
	      aligned = indent$1(aligned);
	    } // Use align for all the spaces that are needed


	    aligned = align(size % tabWidth, aligned); // size is absolute from 0 and not relative to the current
	    // indentation, so we use -Infinity to reset the indentation to 0

	    aligned = align(Number.NEGATIVE_INFINITY, aligned);
	  }

	  return aligned;
	}

	function label(label, contents) {
	  return {
	    type: "label",
	    label,
	    contents
	  };
	}

	var docBuilders = {
	  concat: concat$1,
	  join: join$1,
	  line,
	  softline,
	  hardline,
	  literalline: literalline$1,
	  group,
	  conditionalGroup,
	  fill: fill$1,
	  lineSuffix,
	  lineSuffixBoundary,
	  cursor: cursor$1,
	  breakParent,
	  ifBreak,
	  trim: trim$1,
	  indent: indent$1,
	  indentIfBreak,
	  align,
	  addAlignmentToDoc,
	  markAsRoot,
	  dedentToRoot,
	  dedent,
	  hardlineWithoutBreakParent,
	  literallineWithoutBreakParent,
	  label
	};

	var stringWidth$2 = {exports: {}};

	var ansiRegex$1 = function () {
	  let {
	    onlyFirst = false
	  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  const pattern = ['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)', '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|');
	  return new RegExp(pattern, onlyFirst ? undefined : 'g');
	};

	const ansiRegex = ansiRegex$1;

	var stripAnsi$1 = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;

	var isFullwidthCodePoint$2 = {exports: {}};

	/* eslint-disable yoda */

	const isFullwidthCodePoint$1 = codePoint => {
	  if (Number.isNaN(codePoint)) {
	    return false;
	  } // Code points are derived from:
	  // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt


	  if (codePoint >= 0x1100 && (codePoint <= 0x115F || // Hangul Jamo
	  codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET
	  codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET
	  // CJK Radicals Supplement .. Enclosed CJK Letters and Months
	  0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
	  0x3250 <= codePoint && codePoint <= 0x4DBF || // CJK Unified Ideographs .. Yi Radicals
	  0x4E00 <= codePoint && codePoint <= 0xA4C6 || // Hangul Jamo Extended-A
	  0xA960 <= codePoint && codePoint <= 0xA97C || // Hangul Syllables
	  0xAC00 <= codePoint && codePoint <= 0xD7A3 || // CJK Compatibility Ideographs
	  0xF900 <= codePoint && codePoint <= 0xFAFF || // Vertical Forms
	  0xFE10 <= codePoint && codePoint <= 0xFE19 || // CJK Compatibility Forms .. Small Form Variants
	  0xFE30 <= codePoint && codePoint <= 0xFE6B || // Halfwidth and Fullwidth Forms
	  0xFF01 <= codePoint && codePoint <= 0xFF60 || 0xFFE0 <= codePoint && codePoint <= 0xFFE6 || // Kana Supplement
	  0x1B000 <= codePoint && codePoint <= 0x1B001 || // Enclosed Ideographic Supplement
	  0x1F200 <= codePoint && codePoint <= 0x1F251 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
	  0x20000 <= codePoint && codePoint <= 0x3FFFD)) {
	    return true;
	  }

	  return false;
	};

	isFullwidthCodePoint$2.exports = isFullwidthCodePoint$1;

	isFullwidthCodePoint$2.exports.default = isFullwidthCodePoint$1;

	var emojiRegex$1 = function () {
	  // https://mths.be/emoji
	  return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
	};

	const stripAnsi = stripAnsi$1;
	const isFullwidthCodePoint = isFullwidthCodePoint$2.exports;
	const emojiRegex = emojiRegex$1;

	const stringWidth$1 = string => {
	  if (typeof string !== 'string' || string.length === 0) {
	    return 0;
	  }

	  string = stripAnsi(string);

	  if (string.length === 0) {
	    return 0;
	  }

	  string = string.replace(emojiRegex(), '  ');
	  let width = 0;

	  for (let i = 0; i < string.length; i++) {
	    const code = string.codePointAt(i); // Ignore control characters

	    if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {
	      continue;
	    } // Ignore combining characters


	    if (code >= 0x300 && code <= 0x36F) {
	      continue;
	    } // Surrogates


	    if (code > 0xFFFF) {
	      i++;
	    }

	    width += isFullwidthCodePoint(code) ? 2 : 1;
	  }

	  return width;
	};

	stringWidth$2.exports = stringWidth$1; // TODO: remove this in the next major version

	stringWidth$2.exports.default = stringWidth$1;

	var escapeStringRegexp$1 = string => {
	  if (typeof string !== 'string') {
	    throw new TypeError('Expected a string');
	  } // Escape characters with special meaning either inside or outside character sets.
	  // Use a simple backslash escape when it’s always valid, and a \unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.


	  return string.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&').replace(/-/g, '\\x2d');
	};

	const getLast$3 = arr => arr[arr.length - 1];

	var getLast_1 = getLast$3;

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;

	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }

	  return target;
	}

	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};

	  var target = _objectWithoutPropertiesLoose(source, excluded);

	  var key, i;

	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }

	  return target;
	}

	function _taggedTemplateLiteral(strings, raw) {
	  if (!raw) {
	    raw = strings.slice(0);
	  }

	  return Object.freeze(Object.defineProperties(strings, {
	    raw: {
	      value: Object.freeze(raw)
	    }
	  }));
	}

	var check = function (it) {
	  return it && it.Math == Math && it;
	};

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global$s =
	  // eslint-disable-next-line es/no-global-this -- safe
	  check(typeof globalThis == 'object' && globalThis) ||
	  check(typeof window == 'object' && window) ||
	  // eslint-disable-next-line no-restricted-globals -- safe
	  check(typeof self == 'object' && self) ||
	  check(typeof commonjsGlobal$1 == 'object' && commonjsGlobal$1) ||
	  // eslint-disable-next-line no-new-func -- fallback
	  (function () { return this; })() || Function('return this')();

	var objectGetOwnPropertyDescriptor = {};

	var fails$8 = function (exec) {
	  try {
	    return !!exec();
	  } catch (error) {
	    return true;
	  }
	};

	var fails$7 = fails$8;

	// Detect IE8's incomplete defineProperty implementation
	var descriptors = !fails$7(function () {
	  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
	  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
	});

	var call$7 = Function.prototype.call;

	var functionCall = call$7.bind ? call$7.bind(call$7) : function () {
	  return call$7.apply(call$7, arguments);
	};

	var objectPropertyIsEnumerable = {};

	var $propertyIsEnumerable = {}.propertyIsEnumerable;
	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

	// Nashorn ~ JDK8 bug
	var NASHORN_BUG = getOwnPropertyDescriptor$1 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

	// `Object.prototype.propertyIsEnumerable` method implementation
	// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
	objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
	  var descriptor = getOwnPropertyDescriptor$1(this, V);
	  return !!descriptor && descriptor.enumerable;
	} : $propertyIsEnumerable;

	var createPropertyDescriptor$3 = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

	var FunctionPrototype$1 = Function.prototype;
	var bind$3 = FunctionPrototype$1.bind;
	var call$6 = FunctionPrototype$1.call;
	var callBind = bind$3 && bind$3.bind(call$6);

	var functionUncurryThis = bind$3 ? function (fn) {
	  return fn && callBind(call$6, fn);
	} : function (fn) {
	  return fn && function () {
	    return call$6.apply(fn, arguments);
	  };
	};

	var uncurryThis$c = functionUncurryThis;

	var toString$3 = uncurryThis$c({}.toString);
	var stringSlice = uncurryThis$c(''.slice);

	var classofRaw$1 = function (it) {
	  return stringSlice(toString$3(it), 8, -1);
	};

	var global$r = global$s;
	var uncurryThis$b = functionUncurryThis;
	var fails$6 = fails$8;
	var classof$5 = classofRaw$1;

	var Object$4 = global$r.Object;
	var split = uncurryThis$b(''.split);

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var indexedObject = fails$6(function () {
	  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
	  // eslint-disable-next-line no-prototype-builtins -- safe
	  return !Object$4('z').propertyIsEnumerable(0);
	}) ? function (it) {
	  return classof$5(it) == 'String' ? split(it, '') : Object$4(it);
	} : Object$4;

	var global$q = global$s;

	var TypeError$a = global$q.TypeError;

	// `RequireObjectCoercible` abstract operation
	// https://tc39.es/ecma262/#sec-requireobjectcoercible
	var requireObjectCoercible$2 = function (it) {
	  if (it == undefined) throw TypeError$a("Can't call method on " + it);
	  return it;
	};

	// toObject with fallback for non-array-like ES3 strings
	var IndexedObject = indexedObject;
	var requireObjectCoercible$1 = requireObjectCoercible$2;

	var toIndexedObject$3 = function (it) {
	  return IndexedObject(requireObjectCoercible$1(it));
	};

	// `IsCallable` abstract operation
	// https://tc39.es/ecma262/#sec-iscallable
	var isCallable$b = function (argument) {
	  return typeof argument == 'function';
	};

	var isCallable$a = isCallable$b;

	var isObject$6 = function (it) {
	  return typeof it == 'object' ? it !== null : isCallable$a(it);
	};

	var global$p = global$s;
	var isCallable$9 = isCallable$b;

	var aFunction = function (argument) {
	  return isCallable$9(argument) ? argument : undefined;
	};

	var getBuiltIn$4 = function (namespace, method) {
	  return arguments.length < 2 ? aFunction(global$p[namespace]) : global$p[namespace] && global$p[namespace][method];
	};

	var uncurryThis$a = functionUncurryThis;

	var objectIsPrototypeOf = uncurryThis$a({}.isPrototypeOf);

	var getBuiltIn$3 = getBuiltIn$4;

	var engineUserAgent = getBuiltIn$3('navigator', 'userAgent') || '';

	var global$o = global$s;
	var userAgent$2 = engineUserAgent;

	var process$1 = global$o.process;
	var Deno = global$o.Deno;
	var versions$1 = process$1 && process$1.versions || Deno && Deno.version;
	var v8 = versions$1 && versions$1.v8;
	var match, version$1;

	if (v8) {
	  match = v8.split('.');
	  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
	  // but their correct versions are not interesting for us
	  version$1 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
	}

	// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
	// so check `userAgent` even if `.v8` exists, but 0
	if (!version$1 && userAgent$2) {
	  match = userAgent$2.match(/Edge\/(\d+)/);
	  if (!match || match[1] >= 74) {
	    match = userAgent$2.match(/Chrome\/(\d+)/);
	    if (match) version$1 = +match[1];
	  }
	}

	var engineV8Version = version$1;

	/* eslint-disable es/no-symbol -- required for testing */

	var V8_VERSION = engineV8Version;
	var fails$5 = fails$8;

	// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
	var nativeSymbol = !!Object.getOwnPropertySymbols && !fails$5(function () {
	  var symbol = Symbol();
	  // Chrome 38 Symbol has incorrect toString conversion
	  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
	  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
	    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
	    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
	});

	/* eslint-disable es/no-symbol -- required for testing */

	var NATIVE_SYMBOL$1 = nativeSymbol;

	var useSymbolAsUid = NATIVE_SYMBOL$1
	  && !Symbol.sham
	  && typeof Symbol.iterator == 'symbol';

	var global$n = global$s;
	var getBuiltIn$2 = getBuiltIn$4;
	var isCallable$8 = isCallable$b;
	var isPrototypeOf$1 = objectIsPrototypeOf;
	var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

	var Object$3 = global$n.Object;

	var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  var $Symbol = getBuiltIn$2('Symbol');
	  return isCallable$8($Symbol) && isPrototypeOf$1($Symbol.prototype, Object$3(it));
	};

	var global$m = global$s;

	var String$3 = global$m.String;

	var tryToString$3 = function (argument) {
	  try {
	    return String$3(argument);
	  } catch (error) {
	    return 'Object';
	  }
	};

	var global$l = global$s;
	var isCallable$7 = isCallable$b;
	var tryToString$2 = tryToString$3;

	var TypeError$9 = global$l.TypeError;

	// `Assert: IsCallable(argument) is true`
	var aCallable$5 = function (argument) {
	  if (isCallable$7(argument)) return argument;
	  throw TypeError$9(tryToString$2(argument) + ' is not a function');
	};

	var aCallable$4 = aCallable$5;

	// `GetMethod` abstract operation
	// https://tc39.es/ecma262/#sec-getmethod
	var getMethod$3 = function (V, P) {
	  var func = V[P];
	  return func == null ? undefined : aCallable$4(func);
	};

	var global$k = global$s;
	var call$5 = functionCall;
	var isCallable$6 = isCallable$b;
	var isObject$5 = isObject$6;

	var TypeError$8 = global$k.TypeError;

	// `OrdinaryToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-ordinarytoprimitive
	var ordinaryToPrimitive$1 = function (input, pref) {
	  var fn, val;
	  if (pref === 'string' && isCallable$6(fn = input.toString) && !isObject$5(val = call$5(fn, input))) return val;
	  if (isCallable$6(fn = input.valueOf) && !isObject$5(val = call$5(fn, input))) return val;
	  if (pref !== 'string' && isCallable$6(fn = input.toString) && !isObject$5(val = call$5(fn, input))) return val;
	  throw TypeError$8("Can't convert object to primitive value");
	};

	var shared$3 = {exports: {}};

	var global$j = global$s;

	// eslint-disable-next-line es/no-object-defineproperty -- safe
	var defineProperty = Object.defineProperty;

	var setGlobal$3 = function (key, value) {
	  try {
	    defineProperty(global$j, key, { value: value, configurable: true, writable: true });
	  } catch (error) {
	    global$j[key] = value;
	  } return value;
	};

	var global$i = global$s;
	var setGlobal$2 = setGlobal$3;

	var SHARED = '__core-js_shared__';
	var store$3 = global$i[SHARED] || setGlobal$2(SHARED, {});

	var sharedStore = store$3;

	var store$2 = sharedStore;

	(shared$3.exports = function (key, value) {
	  return store$2[key] || (store$2[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: '3.19.1',
	  mode: 'global',
	  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
	});

	var global$h = global$s;
	var requireObjectCoercible = requireObjectCoercible$2;

	var Object$2 = global$h.Object;

	// `ToObject` abstract operation
	// https://tc39.es/ecma262/#sec-toobject
	var toObject$3 = function (argument) {
	  return Object$2(requireObjectCoercible(argument));
	};

	var uncurryThis$9 = functionUncurryThis;
	var toObject$2 = toObject$3;

	var hasOwnProperty = uncurryThis$9({}.hasOwnProperty);

	// `HasOwnProperty` abstract operation
	// https://tc39.es/ecma262/#sec-hasownproperty
	var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
	  return hasOwnProperty(toObject$2(it), key);
	};

	var uncurryThis$8 = functionUncurryThis;

	var id = 0;
	var postfix = Math.random();
	var toString$2 = uncurryThis$8(1.0.toString);

	var uid$2 = function (key) {
	  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$2(++id + postfix, 36);
	};

	var global$g = global$s;
	var shared$2 = shared$3.exports;
	var hasOwn$6 = hasOwnProperty_1;
	var uid$1 = uid$2;
	var NATIVE_SYMBOL = nativeSymbol;
	var USE_SYMBOL_AS_UID = useSymbolAsUid;

	var WellKnownSymbolsStore = shared$2('wks');
	var Symbol$1 = global$g.Symbol;
	var symbolFor = Symbol$1 && Symbol$1['for'];
	var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

	var wellKnownSymbol$6 = function (name) {
	  if (!hasOwn$6(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
	    var description = 'Symbol.' + name;
	    if (NATIVE_SYMBOL && hasOwn$6(Symbol$1, name)) {
	      WellKnownSymbolsStore[name] = Symbol$1[name];
	    } else if (USE_SYMBOL_AS_UID && symbolFor) {
	      WellKnownSymbolsStore[name] = symbolFor(description);
	    } else {
	      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
	    }
	  } return WellKnownSymbolsStore[name];
	};

	var global$f = global$s;
	var call$4 = functionCall;
	var isObject$4 = isObject$6;
	var isSymbol$1 = isSymbol$2;
	var getMethod$2 = getMethod$3;
	var ordinaryToPrimitive = ordinaryToPrimitive$1;
	var wellKnownSymbol$5 = wellKnownSymbol$6;

	var TypeError$7 = global$f.TypeError;
	var TO_PRIMITIVE = wellKnownSymbol$5('toPrimitive');

	// `ToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-toprimitive
	var toPrimitive$1 = function (input, pref) {
	  if (!isObject$4(input) || isSymbol$1(input)) return input;
	  var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);
	  var result;
	  if (exoticToPrim) {
	    if (pref === undefined) pref = 'default';
	    result = call$4(exoticToPrim, input, pref);
	    if (!isObject$4(result) || isSymbol$1(result)) return result;
	    throw TypeError$7("Can't convert object to primitive value");
	  }
	  if (pref === undefined) pref = 'number';
	  return ordinaryToPrimitive(input, pref);
	};

	var toPrimitive = toPrimitive$1;
	var isSymbol = isSymbol$2;

	// `ToPropertyKey` abstract operation
	// https://tc39.es/ecma262/#sec-topropertykey
	var toPropertyKey$3 = function (argument) {
	  var key = toPrimitive(argument, 'string');
	  return isSymbol(key) ? key : key + '';
	};

	var global$e = global$s;
	var isObject$3 = isObject$6;

	var document$1 = global$e.document;
	// typeof document.createElement is 'object' in old IE
	var EXISTS$1 = isObject$3(document$1) && isObject$3(document$1.createElement);

	var documentCreateElement = function (it) {
	  return EXISTS$1 ? document$1.createElement(it) : {};
	};

	var DESCRIPTORS$4 = descriptors;
	var fails$4 = fails$8;
	var createElement = documentCreateElement;

	// Thank's IE8 for his funny defineProperty
	var ie8DomDefine = !DESCRIPTORS$4 && !fails$4(function () {
	  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
	  return Object.defineProperty(createElement('div'), 'a', {
	    get: function () { return 7; }
	  }).a != 7;
	});

	var DESCRIPTORS$3 = descriptors;
	var call$3 = functionCall;
	var propertyIsEnumerableModule = objectPropertyIsEnumerable;
	var createPropertyDescriptor$2 = createPropertyDescriptor$3;
	var toIndexedObject$2 = toIndexedObject$3;
	var toPropertyKey$2 = toPropertyKey$3;
	var hasOwn$5 = hasOwnProperty_1;
	var IE8_DOM_DEFINE$1 = ie8DomDefine;

	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

	// `Object.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
	objectGetOwnPropertyDescriptor.f = DESCRIPTORS$3 ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
	  O = toIndexedObject$2(O);
	  P = toPropertyKey$2(P);
	  if (IE8_DOM_DEFINE$1) try {
	    return $getOwnPropertyDescriptor(O, P);
	  } catch (error) { /* empty */ }
	  if (hasOwn$5(O, P)) return createPropertyDescriptor$2(!call$3(propertyIsEnumerableModule.f, O, P), O[P]);
	};

	var objectDefineProperty = {};

	var global$d = global$s;
	var isObject$2 = isObject$6;

	var String$2 = global$d.String;
	var TypeError$6 = global$d.TypeError;

	// `Assert: Type(argument) is Object`
	var anObject$5 = function (argument) {
	  if (isObject$2(argument)) return argument;
	  throw TypeError$6(String$2(argument) + ' is not an object');
	};

	var global$c = global$s;
	var DESCRIPTORS$2 = descriptors;
	var IE8_DOM_DEFINE = ie8DomDefine;
	var anObject$4 = anObject$5;
	var toPropertyKey$1 = toPropertyKey$3;

	var TypeError$5 = global$c.TypeError;
	// eslint-disable-next-line es/no-object-defineproperty -- safe
	var $defineProperty = Object.defineProperty;

	// `Object.defineProperty` method
	// https://tc39.es/ecma262/#sec-object.defineproperty
	objectDefineProperty.f = DESCRIPTORS$2 ? $defineProperty : function defineProperty(O, P, Attributes) {
	  anObject$4(O);
	  P = toPropertyKey$1(P);
	  anObject$4(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return $defineProperty(O, P, Attributes);
	  } catch (error) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError$5('Accessors not supported');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

	var DESCRIPTORS$1 = descriptors;
	var definePropertyModule$2 = objectDefineProperty;
	var createPropertyDescriptor$1 = createPropertyDescriptor$3;

	var createNonEnumerableProperty$3 = DESCRIPTORS$1 ? function (object, key, value) {
	  return definePropertyModule$2.f(object, key, createPropertyDescriptor$1(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

	var redefine$1 = {exports: {}};

	var uncurryThis$7 = functionUncurryThis;
	var isCallable$5 = isCallable$b;
	var store$1 = sharedStore;

	var functionToString = uncurryThis$7(Function.toString);

	// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
	if (!isCallable$5(store$1.inspectSource)) {
	  store$1.inspectSource = function (it) {
	    return functionToString(it);
	  };
	}

	var inspectSource$3 = store$1.inspectSource;

	var global$b = global$s;
	var isCallable$4 = isCallable$b;
	var inspectSource$2 = inspectSource$3;

	var WeakMap$2 = global$b.WeakMap;

	var nativeWeakMap = isCallable$4(WeakMap$2) && /native code/.test(inspectSource$2(WeakMap$2));

	var shared$1 = shared$3.exports;
	var uid = uid$2;

	var keys = shared$1('keys');

	var sharedKey$1 = function (key) {
	  return keys[key] || (keys[key] = uid(key));
	};

	var hiddenKeys$3 = {};

	var NATIVE_WEAK_MAP = nativeWeakMap;
	var global$a = global$s;
	var uncurryThis$6 = functionUncurryThis;
	var isObject$1 = isObject$6;
	var createNonEnumerableProperty$2 = createNonEnumerableProperty$3;
	var hasOwn$4 = hasOwnProperty_1;
	var shared = sharedStore;
	var sharedKey = sharedKey$1;
	var hiddenKeys$2 = hiddenKeys$3;

	var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
	var TypeError$4 = global$a.TypeError;
	var WeakMap$1 = global$a.WeakMap;
	var set, get, has;

	var enforce = function (it) {
	  return has(it) ? get(it) : set(it, {});
	};

	var getterFor = function (TYPE) {
	  return function (it) {
	    var state;
	    if (!isObject$1(it) || (state = get(it)).type !== TYPE) {
	      throw TypeError$4('Incompatible receiver, ' + TYPE + ' required');
	    } return state;
	  };
	};

	if (NATIVE_WEAK_MAP || shared.state) {
	  var store = shared.state || (shared.state = new WeakMap$1());
	  var wmget = uncurryThis$6(store.get);
	  var wmhas = uncurryThis$6(store.has);
	  var wmset = uncurryThis$6(store.set);
	  set = function (it, metadata) {
	    if (wmhas(store, it)) throw new TypeError$4(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    wmset(store, it, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return wmget(store, it) || {};
	  };
	  has = function (it) {
	    return wmhas(store, it);
	  };
	} else {
	  var STATE = sharedKey('state');
	  hiddenKeys$2[STATE] = true;
	  set = function (it, metadata) {
	    if (hasOwn$4(it, STATE)) throw new TypeError$4(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    createNonEnumerableProperty$2(it, STATE, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return hasOwn$4(it, STATE) ? it[STATE] : {};
	  };
	  has = function (it) {
	    return hasOwn$4(it, STATE);
	  };
	}

	var internalState = {
	  set: set,
	  get: get,
	  has: has,
	  enforce: enforce,
	  getterFor: getterFor
	};

	var DESCRIPTORS = descriptors;
	var hasOwn$3 = hasOwnProperty_1;

	var FunctionPrototype = Function.prototype;
	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

	var EXISTS = hasOwn$3(FunctionPrototype, 'name');
	// additional protection from minified / mangled / dropped function names
	var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
	var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

	var functionName = {
	  EXISTS: EXISTS,
	  PROPER: PROPER,
	  CONFIGURABLE: CONFIGURABLE
	};

	var global$9 = global$s;
	var isCallable$3 = isCallable$b;
	var hasOwn$2 = hasOwnProperty_1;
	var createNonEnumerableProperty$1 = createNonEnumerableProperty$3;
	var setGlobal$1 = setGlobal$3;
	var inspectSource$1 = inspectSource$3;
	var InternalStateModule = internalState;
	var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;

	var getInternalState = InternalStateModule.get;
	var enforceInternalState = InternalStateModule.enforce;
	var TEMPLATE = String(String).split('String');

	(redefine$1.exports = function (O, key, value, options) {
	  var unsafe = options ? !!options.unsafe : false;
	  var simple = options ? !!options.enumerable : false;
	  var noTargetGet = options ? !!options.noTargetGet : false;
	  var name = options && options.name !== undefined ? options.name : key;
	  var state;
	  if (isCallable$3(value)) {
	    if (String(name).slice(0, 7) === 'Symbol(') {
	      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
	    }
	    if (!hasOwn$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
	      createNonEnumerableProperty$1(value, 'name', name);
	    }
	    state = enforceInternalState(value);
	    if (!state.source) {
	      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
	    }
	  }
	  if (O === global$9) {
	    if (simple) O[key] = value;
	    else setGlobal$1(key, value);
	    return;
	  } else if (!unsafe) {
	    delete O[key];
	  } else if (!noTargetGet && O[key]) {
	    simple = true;
	  }
	  if (simple) O[key] = value;
	  else createNonEnumerableProperty$1(O, key, value);
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, 'toString', function toString() {
	  return isCallable$3(this) && getInternalState(this).source || inspectSource$1(this);
	});

	var objectGetOwnPropertyNames = {};

	var ceil = Math.ceil;
	var floor$1 = Math.floor;

	// `ToIntegerOrInfinity` abstract operation
	// https://tc39.es/ecma262/#sec-tointegerorinfinity
	var toIntegerOrInfinity$2 = function (argument) {
	  var number = +argument;
	  // eslint-disable-next-line no-self-compare -- safe
	  return number !== number || number === 0 ? 0 : (number > 0 ? floor$1 : ceil)(number);
	};

	var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

	var max = Math.max;
	var min$1 = Math.min;

	// Helper for a popular repeating case of the spec:
	// Let integer be ? ToInteger(index).
	// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
	var toAbsoluteIndex$1 = function (index, length) {
	  var integer = toIntegerOrInfinity$1(index);
	  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
	};

	var toIntegerOrInfinity = toIntegerOrInfinity$2;

	var min = Math.min;

	// `ToLength` abstract operation
	// https://tc39.es/ecma262/#sec-tolength
	var toLength$1 = function (argument) {
	  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
	};

	var toLength = toLength$1;

	// `LengthOfArrayLike` abstract operation
	// https://tc39.es/ecma262/#sec-lengthofarraylike
	var lengthOfArrayLike$5 = function (obj) {
	  return toLength(obj.length);
	};

	var toIndexedObject$1 = toIndexedObject$3;
	var toAbsoluteIndex = toAbsoluteIndex$1;
	var lengthOfArrayLike$4 = lengthOfArrayLike$5;

	// `Array.prototype.{ indexOf, includes }` methods implementation
	var createMethod = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIndexedObject$1($this);
	    var length = lengthOfArrayLike$4(O);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare -- NaN check
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare -- NaN check
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) {
	      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

	var arrayIncludes = {
	  // `Array.prototype.includes` method
	  // https://tc39.es/ecma262/#sec-array.prototype.includes
	  includes: createMethod(true),
	  // `Array.prototype.indexOf` method
	  // https://tc39.es/ecma262/#sec-array.prototype.indexof
	  indexOf: createMethod(false)
	};

	var uncurryThis$5 = functionUncurryThis;
	var hasOwn$1 = hasOwnProperty_1;
	var toIndexedObject = toIndexedObject$3;
	var indexOf = arrayIncludes.indexOf;
	var hiddenKeys$1 = hiddenKeys$3;

	var push$1 = uncurryThis$5([].push);

	var objectKeysInternal = function (object, names) {
	  var O = toIndexedObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push$1(result, key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {
	    ~indexOf(result, key) || push$1(result, key);
	  }
	  return result;
	};

	// IE8- don't enum bug keys
	var enumBugKeys$1 = [
	  'constructor',
	  'hasOwnProperty',
	  'isPrototypeOf',
	  'propertyIsEnumerable',
	  'toLocaleString',
	  'toString',
	  'valueOf'
	];

	var internalObjectKeys = objectKeysInternal;
	var enumBugKeys = enumBugKeys$1;

	var hiddenKeys = enumBugKeys.concat('length', 'prototype');

	// `Object.getOwnPropertyNames` method
	// https://tc39.es/ecma262/#sec-object.getownpropertynames
	// eslint-disable-next-line es/no-object-getownpropertynames -- safe
	objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return internalObjectKeys(O, hiddenKeys);
	};

	var objectGetOwnPropertySymbols = {};

	// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
	objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

	var getBuiltIn$1 = getBuiltIn$4;
	var uncurryThis$4 = functionUncurryThis;
	var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
	var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
	var anObject$3 = anObject$5;

	var concat = uncurryThis$4([].concat);

	// all object keys, includes non-enumerable and symbols
	var ownKeys$1 = getBuiltIn$1('Reflect', 'ownKeys') || function ownKeys(it) {
	  var keys = getOwnPropertyNamesModule.f(anObject$3(it));
	  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
	  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
	};

	var hasOwn = hasOwnProperty_1;
	var ownKeys = ownKeys$1;
	var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
	var definePropertyModule$1 = objectDefineProperty;

	var copyConstructorProperties$1 = function (target, source) {
	  var keys = ownKeys(source);
	  var defineProperty = definePropertyModule$1.f;
	  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (!hasOwn(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
	  }
	};

	var fails$3 = fails$8;
	var isCallable$2 = isCallable$b;

	var replacement = /#|\.prototype\./;

	var isForced$1 = function (feature, detection) {
	  var value = data[normalize(feature)];
	  return value == POLYFILL ? true
	    : value == NATIVE ? false
	    : isCallable$2(detection) ? fails$3(detection)
	    : !!detection;
	};

	var normalize = isForced$1.normalize = function (string) {
	  return String(string).replace(replacement, '.').toLowerCase();
	};

	var data = isForced$1.data = {};
	var NATIVE = isForced$1.NATIVE = 'N';
	var POLYFILL = isForced$1.POLYFILL = 'P';

	var isForced_1 = isForced$1;

	var global$8 = global$s;
	var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	var createNonEnumerableProperty = createNonEnumerableProperty$3;
	var redefine = redefine$1.exports;
	var setGlobal = setGlobal$3;
	var copyConstructorProperties = copyConstructorProperties$1;
	var isForced = isForced_1;

	/*
	  options.target      - name of the target object
	  options.global      - target is the global object
	  options.stat        - export as static methods of target
	  options.proto       - export as prototype methods of target
	  options.real        - real prototype method for the `pure` version
	  options.forced      - export even if the native feature is available
	  options.bind        - bind methods to the target, required for the `pure` version
	  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
	  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
	  options.sham        - add a flag to not completely full polyfills
	  options.enumerable  - export as enumerable property
	  options.noTargetGet - prevent calling a getter on target
	  options.name        - the .name of the function if it does not match the key
	*/
	var _export = function (options, source) {
	  var TARGET = options.target;
	  var GLOBAL = options.global;
	  var STATIC = options.stat;
	  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
	  if (GLOBAL) {
	    target = global$8;
	  } else if (STATIC) {
	    target = global$8[TARGET] || setGlobal(TARGET, {});
	  } else {
	    target = (global$8[TARGET] || {}).prototype;
	  }
	  if (target) for (key in source) {
	    sourceProperty = source[key];
	    if (options.noTargetGet) {
	      descriptor = getOwnPropertyDescriptor(target, key);
	      targetProperty = descriptor && descriptor.value;
	    } else targetProperty = target[key];
	    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
	    // contained in target
	    if (!FORCED && targetProperty !== undefined) {
	      if (typeof sourceProperty == typeof targetProperty) continue;
	      copyConstructorProperties(sourceProperty, targetProperty);
	    }
	    // add a flag to not completely full polyfills
	    if (options.sham || (targetProperty && targetProperty.sham)) {
	      createNonEnumerableProperty(sourceProperty, 'sham', true);
	    }
	    // extend global
	    redefine(target, key, sourceProperty, options);
	  }
	};

	var classof$4 = classofRaw$1;

	// `IsArray` abstract operation
	// https://tc39.es/ecma262/#sec-isarray
	// eslint-disable-next-line es/no-array-isarray -- safe
	var isArray$2 = Array.isArray || function isArray(argument) {
	  return classof$4(argument) == 'Array';
	};

	var uncurryThis$3 = functionUncurryThis;
	var aCallable$3 = aCallable$5;

	var bind$2 = uncurryThis$3(uncurryThis$3.bind);

	// optional / simple context binding
	var functionBindContext = function (fn, that) {
	  aCallable$3(fn);
	  return that === undefined ? fn : bind$2 ? bind$2(fn, that) : function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};

	var global$7 = global$s;
	var isArray$1 = isArray$2;
	var lengthOfArrayLike$3 = lengthOfArrayLike$5;
	var bind$1 = functionBindContext;

	var TypeError$3 = global$7.TypeError;

	// `FlattenIntoArray` abstract operation
	// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
	var flattenIntoArray$1 = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
	  var targetIndex = start;
	  var sourceIndex = 0;
	  var mapFn = mapper ? bind$1(mapper, thisArg) : false;
	  var element, elementLen;

	  while (sourceIndex < sourceLen) {
	    if (sourceIndex in source) {
	      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

	      if (depth > 0 && isArray$1(element)) {
	        elementLen = lengthOfArrayLike$3(element);
	        targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;
	      } else {
	        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError$3('Exceed the acceptable array length');
	        target[targetIndex] = element;
	      }

	      targetIndex++;
	    }
	    sourceIndex++;
	  }
	  return targetIndex;
	};

	var flattenIntoArray_1 = flattenIntoArray$1;

	var wellKnownSymbol$4 = wellKnownSymbol$6;

	var TO_STRING_TAG$1 = wellKnownSymbol$4('toStringTag');
	var test$1 = {};

	test$1[TO_STRING_TAG$1] = 'z';

	var toStringTagSupport = String(test$1) === '[object z]';

	var global$6 = global$s;
	var TO_STRING_TAG_SUPPORT = toStringTagSupport;
	var isCallable$1 = isCallable$b;
	var classofRaw = classofRaw$1;
	var wellKnownSymbol$3 = wellKnownSymbol$6;

	var TO_STRING_TAG = wellKnownSymbol$3('toStringTag');
	var Object$1 = global$6.Object;

	// ES3 wrong here
	var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (error) { /* empty */ }
	};

	// getting tag from ES6+ `Object.prototype.toString`
	var classof$3 = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
	  var O, tag, result;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (tag = tryGet(O = Object$1(it), TO_STRING_TAG)) == 'string' ? tag
	    // builtinTag case
	    : CORRECT_ARGUMENTS ? classofRaw(O)
	    // ES3 arguments fallback
	    : (result = classofRaw(O)) == 'Object' && isCallable$1(O.callee) ? 'Arguments' : result;
	};

	var uncurryThis$2 = functionUncurryThis;
	var fails$2 = fails$8;
	var isCallable = isCallable$b;
	var classof$2 = classof$3;
	var getBuiltIn = getBuiltIn$4;
	var inspectSource = inspectSource$3;

	var noop$1 = function () { /* empty */ };
	var empty = [];
	var construct = getBuiltIn('Reflect', 'construct');
	var constructorRegExp = /^\s*(?:class|function)\b/;
	var exec = uncurryThis$2(constructorRegExp.exec);
	var INCORRECT_TO_STRING = !constructorRegExp.exec(noop$1);

	var isConstructorModern = function (argument) {
	  if (!isCallable(argument)) return false;
	  try {
	    construct(noop$1, empty, argument);
	    return true;
	  } catch (error) {
	    return false;
	  }
	};

	var isConstructorLegacy = function (argument) {
	  if (!isCallable(argument)) return false;
	  switch (classof$2(argument)) {
	    case 'AsyncFunction':
	    case 'GeneratorFunction':
	    case 'AsyncGeneratorFunction': return false;
	    // we can't check .prototype since constructors produced by .bind haven't it
	  } return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
	};

	// `IsConstructor` abstract operation
	// https://tc39.es/ecma262/#sec-isconstructor
	var isConstructor$1 = !construct || fails$2(function () {
	  var called;
	  return isConstructorModern(isConstructorModern.call)
	    || !isConstructorModern(Object)
	    || !isConstructorModern(function () { called = true; })
	    || called;
	}) ? isConstructorLegacy : isConstructorModern;

	var global$5 = global$s;
	var isArray = isArray$2;
	var isConstructor = isConstructor$1;
	var isObject = isObject$6;
	var wellKnownSymbol$2 = wellKnownSymbol$6;

	var SPECIES = wellKnownSymbol$2('species');
	var Array$1 = global$5.Array;

	// a part of `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate
	var arraySpeciesConstructor$1 = function (originalArray) {
	  var C;
	  if (isArray(originalArray)) {
	    C = originalArray.constructor;
	    // cross-realm fallback
	    if (isConstructor(C) && (C === Array$1 || isArray(C.prototype))) C = undefined;
	    else if (isObject(C)) {
	      C = C[SPECIES];
	      if (C === null) C = undefined;
	    }
	  } return C === undefined ? Array$1 : C;
	};

	var arraySpeciesConstructor = arraySpeciesConstructor$1;

	// `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate
	var arraySpeciesCreate$1 = function (originalArray, length) {
	  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
	};

	var $$2 = _export;
	var flattenIntoArray = flattenIntoArray_1;
	var aCallable$2 = aCallable$5;
	var toObject$1 = toObject$3;
	var lengthOfArrayLike$2 = lengthOfArrayLike$5;
	var arraySpeciesCreate = arraySpeciesCreate$1;

	// `Array.prototype.flatMap` method
	// https://tc39.es/ecma262/#sec-array.prototype.flatmap
	$$2({ target: 'Array', proto: true }, {
	  flatMap: function flatMap(callbackfn /* , thisArg */) {
	    var O = toObject$1(this);
	    var sourceLen = lengthOfArrayLike$2(O);
	    var A;
	    aCallable$2(callbackfn);
	    A = arraySpeciesCreate(O, 0);
	    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    return A;
	  }
	});

	var global$4 = global$s;
	var classof$1 = classof$3;

	var String$1 = global$4.String;

	var toString$1 = function (argument) {
	  if (classof$1(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
	  return String$1(argument);
	};

	var uncurryThis$1 = functionUncurryThis;

	var arraySlice$1 = uncurryThis$1([].slice);

	var arraySlice = arraySlice$1;

	var floor = Math.floor;

	var mergeSort = function (array, comparefn) {
	  var length = array.length;
	  var middle = floor(length / 2);
	  return length < 8 ? insertionSort(array, comparefn) : merge(
	    array,
	    mergeSort(arraySlice(array, 0, middle), comparefn),
	    mergeSort(arraySlice(array, middle), comparefn),
	    comparefn
	  );
	};

	var insertionSort = function (array, comparefn) {
	  var length = array.length;
	  var i = 1;
	  var element, j;

	  while (i < length) {
	    j = i;
	    element = array[i];
	    while (j && comparefn(array[j - 1], element) > 0) {
	      array[j] = array[--j];
	    }
	    if (j !== i++) array[j] = element;
	  } return array;
	};

	var merge = function (array, left, right, comparefn) {
	  var llength = left.length;
	  var rlength = right.length;
	  var lindex = 0;
	  var rindex = 0;

	  while (lindex < llength || rindex < rlength) {
	    array[lindex + rindex] = (lindex < llength && rindex < rlength)
	      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
	      : lindex < llength ? left[lindex++] : right[rindex++];
	  } return array;
	};

	var arraySort = mergeSort;

	var fails$1 = fails$8;

	var arrayMethodIsStrict$1 = function (METHOD_NAME, argument) {
	  var method = [][METHOD_NAME];
	  return !!method && fails$1(function () {
	    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
	    method.call(null, argument || function () { throw 1; }, 1);
	  });
	};

	var userAgent$1 = engineUserAgent;

	var firefox = userAgent$1.match(/firefox\/(\d+)/i);

	var engineFfVersion = !!firefox && +firefox[1];

	var UA = engineUserAgent;

	var engineIsIeOrEdge = /MSIE|Trident/.test(UA);

	var userAgent = engineUserAgent;

	var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

	var engineWebkitVersion = !!webkit && +webkit[1];

	var $$1 = _export;
	var uncurryThis = functionUncurryThis;
	var aCallable$1 = aCallable$5;
	var toObject = toObject$3;
	var lengthOfArrayLike$1 = lengthOfArrayLike$5;
	var toString = toString$1;
	var fails = fails$8;
	var internalSort = arraySort;
	var arrayMethodIsStrict = arrayMethodIsStrict$1;
	var FF = engineFfVersion;
	var IE_OR_EDGE = engineIsIeOrEdge;
	var V8 = engineV8Version;
	var WEBKIT = engineWebkitVersion;

	var test = [];
	var un$Sort = uncurryThis(test.sort);
	var push = uncurryThis(test.push);

	// IE8-
	var FAILS_ON_UNDEFINED = fails(function () {
	  test.sort(undefined);
	});
	// V8 bug
	var FAILS_ON_NULL = fails(function () {
	  test.sort(null);
	});
	// Old WebKit
	var STRICT_METHOD = arrayMethodIsStrict('sort');

	var STABLE_SORT = !fails(function () {
	  // feature detection can be too slow, so check engines versions
	  if (V8) return V8 < 70;
	  if (FF && FF > 3) return;
	  if (IE_OR_EDGE) return true;
	  if (WEBKIT) return WEBKIT < 603;

	  var result = '';
	  var code, chr, value, index;

	  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
	  for (code = 65; code < 76; code++) {
	    chr = String.fromCharCode(code);

	    switch (code) {
	      case 66: case 69: case 70: case 72: value = 3; break;
	      case 68: case 71: value = 4; break;
	      default: value = 2;
	    }

	    for (index = 0; index < 47; index++) {
	      test.push({ k: chr + index, v: value });
	    }
	  }

	  test.sort(function (a, b) { return b.v - a.v; });

	  for (index = 0; index < test.length; index++) {
	    chr = test[index].k.charAt(0);
	    if (result.charAt(result.length - 1) !== chr) result += chr;
	  }

	  return result !== 'DGBEFHACIJK';
	});

	var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

	var getSortCompare = function (comparefn) {
	  return function (x, y) {
	    if (y === undefined) return -1;
	    if (x === undefined) return 1;
	    if (comparefn !== undefined) return +comparefn(x, y) || 0;
	    return toString(x) > toString(y) ? 1 : -1;
	  };
	};

	// `Array.prototype.sort` method
	// https://tc39.es/ecma262/#sec-array.prototype.sort
	$$1({ target: 'Array', proto: true, forced: FORCED }, {
	  sort: function sort(comparefn) {
	    if (comparefn !== undefined) aCallable$1(comparefn);

	    var array = toObject(this);

	    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);

	    var items = [];
	    var arrayLength = lengthOfArrayLike$1(array);
	    var itemsLength, index;

	    for (index = 0; index < arrayLength; index++) {
	      if (index in array) push(items, array[index]);
	    }

	    internalSort(items, getSortCompare(comparefn));

	    itemsLength = items.length;
	    index = 0;

	    while (index < itemsLength) array[index] = items[index++];
	    while (index < arrayLength) delete array[index++];

	    return array;
	  }
	});

	var iterators = {};

	var wellKnownSymbol$1 = wellKnownSymbol$6;
	var Iterators$1 = iterators;

	var ITERATOR$1 = wellKnownSymbol$1('iterator');
	var ArrayPrototype = Array.prototype;

	// check on default Array iterator
	var isArrayIteratorMethod$1 = function (it) {
	  return it !== undefined && (Iterators$1.Array === it || ArrayPrototype[ITERATOR$1] === it);
	};

	var classof = classof$3;
	var getMethod$1 = getMethod$3;
	var Iterators = iterators;
	var wellKnownSymbol = wellKnownSymbol$6;

	var ITERATOR = wellKnownSymbol('iterator');

	var getIteratorMethod$2 = function (it) {
	  if (it != undefined) return getMethod$1(it, ITERATOR)
	    || getMethod$1(it, '@@iterator')
	    || Iterators[classof(it)];
	};

	var global$3 = global$s;
	var call$2 = functionCall;
	var aCallable = aCallable$5;
	var anObject$2 = anObject$5;
	var tryToString$1 = tryToString$3;
	var getIteratorMethod$1 = getIteratorMethod$2;

	var TypeError$2 = global$3.TypeError;

	var getIterator$1 = function (argument, usingIterator) {
	  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$1(argument) : usingIterator;
	  if (aCallable(iteratorMethod)) return anObject$2(call$2(iteratorMethod, argument));
	  throw TypeError$2(tryToString$1(argument) + ' is not iterable');
	};

	var call$1 = functionCall;
	var anObject$1 = anObject$5;
	var getMethod = getMethod$3;

	var iteratorClose$1 = function (iterator, kind, value) {
	  var innerResult, innerError;
	  anObject$1(iterator);
	  try {
	    innerResult = getMethod(iterator, 'return');
	    if (!innerResult) {
	      if (kind === 'throw') throw value;
	      return value;
	    }
	    innerResult = call$1(innerResult, iterator);
	  } catch (error) {
	    innerError = true;
	    innerResult = error;
	  }
	  if (kind === 'throw') throw value;
	  if (innerError) throw innerResult;
	  anObject$1(innerResult);
	  return value;
	};

	var global$2 = global$s;
	var bind = functionBindContext;
	var call = functionCall;
	var anObject = anObject$5;
	var tryToString = tryToString$3;
	var isArrayIteratorMethod = isArrayIteratorMethod$1;
	var lengthOfArrayLike = lengthOfArrayLike$5;
	var isPrototypeOf = objectIsPrototypeOf;
	var getIterator = getIterator$1;
	var getIteratorMethod = getIteratorMethod$2;
	var iteratorClose = iteratorClose$1;

	var TypeError$1 = global$2.TypeError;

	var Result = function (stopped, result) {
	  this.stopped = stopped;
	  this.result = result;
	};

	var ResultPrototype = Result.prototype;

	var iterate$1 = function (iterable, unboundFunction, options) {
	  var that = options && options.that;
	  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
	  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
	  var INTERRUPTED = !!(options && options.INTERRUPTED);
	  var fn = bind(unboundFunction, that);
	  var iterator, iterFn, index, length, result, next, step;

	  var stop = function (condition) {
	    if (iterator) iteratorClose(iterator, 'normal', condition);
	    return new Result(true, condition);
	  };

	  var callFn = function (value) {
	    if (AS_ENTRIES) {
	      anObject(value);
	      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
	    } return INTERRUPTED ? fn(value, stop) : fn(value);
	  };

	  if (IS_ITERATOR) {
	    iterator = iterable;
	  } else {
	    iterFn = getIteratorMethod(iterable);
	    if (!iterFn) throw TypeError$1(tryToString(iterable) + ' is not iterable');
	    // optimisation for array iterators
	    if (isArrayIteratorMethod(iterFn)) {
	      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
	        result = callFn(iterable[index]);
	        if (result && isPrototypeOf(ResultPrototype, result)) return result;
	      } return new Result(false);
	    }
	    iterator = getIterator(iterable, iterFn);
	  }

	  next = iterator.next;
	  while (!(step = call(next, iterator)).done) {
	    try {
	      result = callFn(step.value);
	    } catch (error) {
	      iteratorClose(iterator, 'throw', error);
	    }
	    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
	  } return new Result(false);
	};

	var toPropertyKey = toPropertyKey$3;
	var definePropertyModule = objectDefineProperty;
	var createPropertyDescriptor = createPropertyDescriptor$3;

	var createProperty$1 = function (object, key, value) {
	  var propertyKey = toPropertyKey(key);
	  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
	  else object[propertyKey] = value;
	};

	var $ = _export;
	var iterate = iterate$1;
	var createProperty = createProperty$1;

	// `Object.fromEntries` method
	// https://github.com/tc39/proposal-object-from-entries
	$({ target: 'Object', stat: true }, {
	  fromEntries: function fromEntries(iterable) {
	    var obj = {};
	    iterate(iterable, function (k, v) {
	      createProperty(obj, k, v);
	    }, { AS_ENTRIES: true });
	    return obj;
	  }
	});

	var global$1 = (typeof global$1 !== "undefined" ? global$1 :
	  typeof self !== "undefined" ? self :
	  typeof window !== "undefined" ? window : {});

	// shim for using process in browser
	// based off https://github.com/defunctzombie/node-process/blob/master/browser.js

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	var cachedSetTimeout = defaultSetTimout;
	var cachedClearTimeout = defaultClearTimeout;
	if (typeof global$1.setTimeout === 'function') {
	    cachedSetTimeout = setTimeout;
	}
	if (typeof global$1.clearTimeout === 'function') {
	    cachedClearTimeout = clearTimeout;
	}

	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	function nextTick(fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	}
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	var title = 'browser';
	var platform = 'browser';
	var browser = true;
	var env = {};
	var argv = [];
	var version = ''; // empty string to avoid regexp issues
	var versions = {};
	var release = {};
	var config = {};

	function noop() {}

	var on = noop;
	var addListener = noop;
	var once = noop;
	var off = noop;
	var removeListener = noop;
	var removeAllListeners = noop;
	var emit = noop;

	function binding(name) {
	    throw new Error('process.binding is not supported');
	}

	function cwd () { return '/' }
	function chdir (dir) {
	    throw new Error('process.chdir is not supported');
	}function umask() { return 0; }

	// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
	var performance = global$1.performance || {};
	var performanceNow =
	  performance.now        ||
	  performance.mozNow     ||
	  performance.msNow      ||
	  performance.oNow       ||
	  performance.webkitNow  ||
	  function(){ return (new Date()).getTime() };

	// generate timestamp or delta
	// see http://nodejs.org/api/process.html#process_process_hrtime
	function hrtime(previousTimestamp){
	  var clocktime = performanceNow.call(performance)*1e-3;
	  var seconds = Math.floor(clocktime);
	  var nanoseconds = Math.floor((clocktime%1)*1e9);
	  if (previousTimestamp) {
	    seconds = seconds - previousTimestamp[0];
	    nanoseconds = nanoseconds - previousTimestamp[1];
	    if (nanoseconds<0) {
	      seconds--;
	      nanoseconds += 1e9;
	    }
	  }
	  return [seconds,nanoseconds]
	}

	var startTime = new Date();
	function uptime() {
	  var currentTime = new Date();
	  var dif = currentTime - startTime;
	  return dif / 1000;
	}

	var browser$1 = {
	  nextTick: nextTick,
	  title: title,
	  browser: browser,
	  env: env,
	  argv: argv,
	  version: version,
	  versions: versions,
	  on: on,
	  addListener: addListener,
	  once: once,
	  off: off,
	  removeListener: removeListener,
	  removeAllListeners: removeAllListeners,
	  emit: emit,
	  binding: binding,
	  cwd: cwd,
	  chdir: chdir,
	  umask: umask,
	  hrtime: hrtime,
	  platform: platform,
	  release: release,
	  config: config,
	  uptime: uptime
	};

	var process = browser$1;

	const debug$1 = typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? function () {
	  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  return console.error('SEMVER', ...args);
	} : () => {};
	var debug_1 = debug$1;

	// Not necessarily the package version of this code.

	const SEMVER_SPEC_VERSION = '2.0.0';
	const MAX_LENGTH$1 = 256;
	const MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER ||
	/* istanbul ignore next */
	9007199254740991; // Max safe segment length for coercion.

	const MAX_SAFE_COMPONENT_LENGTH = 16;
	var constants = {
	  SEMVER_SPEC_VERSION,
	  MAX_LENGTH: MAX_LENGTH$1,
	  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER$1,
	  MAX_SAFE_COMPONENT_LENGTH
	};

	var re$1 = {exports: {}};

	(function (module, exports) {
	  const {
	    MAX_SAFE_COMPONENT_LENGTH
	  } = constants;
	  const debug = debug_1;
	  exports = module.exports = {}; // The actual regexps go on exports.re

	  const re = exports.re = [];
	  const src = exports.src = [];
	  const t = exports.t = {};
	  let R = 0;

	  const createToken = (name, value, isGlobal) => {
	    const index = R++;
	    debug(index, value);
	    t[name] = index;
	    src[index] = value;
	    re[index] = new RegExp(value, isGlobal ? 'g' : undefined);
	  }; // The following Regular Expressions can be used for tokenizing,
	  // validating, and parsing SemVer version strings.
	  // ## Numeric Identifier
	  // A single `0`, or a non-zero digit followed by zero or more digits.


	  createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*');
	  createToken('NUMERICIDENTIFIERLOOSE', '[0-9]+'); // ## Non-numeric Identifier
	  // Zero or more digits, followed by a letter or hyphen, and then zero or
	  // more letters, digits, or hyphens.

	  createToken('NONNUMERICIDENTIFIER', '\\d*[a-zA-Z-][a-zA-Z0-9-]*'); // ## Main Version
	  // Three dot-separated numeric identifiers.

	  createToken('MAINVERSION', "(".concat(src[t.NUMERICIDENTIFIER], ")\\.") + "(".concat(src[t.NUMERICIDENTIFIER], ")\\.") + "(".concat(src[t.NUMERICIDENTIFIER], ")"));
	  createToken('MAINVERSIONLOOSE', "(".concat(src[t.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(src[t.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(src[t.NUMERICIDENTIFIERLOOSE], ")")); // ## Pre-release Version Identifier
	  // A numeric identifier, or a non-numeric identifier.

	  createToken('PRERELEASEIDENTIFIER', "(?:".concat(src[t.NUMERICIDENTIFIER], "|").concat(src[t.NONNUMERICIDENTIFIER], ")"));
	  createToken('PRERELEASEIDENTIFIERLOOSE', "(?:".concat(src[t.NUMERICIDENTIFIERLOOSE], "|").concat(src[t.NONNUMERICIDENTIFIER], ")")); // ## Pre-release Version
	  // Hyphen, followed by one or more dot-separated pre-release version
	  // identifiers.

	  createToken('PRERELEASE', "(?:-(".concat(src[t.PRERELEASEIDENTIFIER], "(?:\\.").concat(src[t.PRERELEASEIDENTIFIER], ")*))"));
	  createToken('PRERELEASELOOSE', "(?:-?(".concat(src[t.PRERELEASEIDENTIFIERLOOSE], "(?:\\.").concat(src[t.PRERELEASEIDENTIFIERLOOSE], ")*))")); // ## Build Metadata Identifier
	  // Any combination of digits, letters, or hyphens.

	  createToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+'); // ## Build Metadata
	  // Plus sign, followed by one or more period-separated build metadata
	  // identifiers.

	  createToken('BUILD', "(?:\\+(".concat(src[t.BUILDIDENTIFIER], "(?:\\.").concat(src[t.BUILDIDENTIFIER], ")*))")); // ## Full Version String
	  // A main version, followed optionally by a pre-release version and
	  // build metadata.
	  // Note that the only major, minor, patch, and pre-release sections of
	  // the version string are capturing groups.  The build metadata is not a
	  // capturing group, because it should not ever be used in version
	  // comparison.

	  createToken('FULLPLAIN', "v?".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE], "?").concat(src[t.BUILD], "?"));
	  createToken('FULL', "^".concat(src[t.FULLPLAIN], "$")); // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
	  // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
	  // common in the npm registry.

	  createToken('LOOSEPLAIN', "[v=\\s]*".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE], "?").concat(src[t.BUILD], "?"));
	  createToken('LOOSE', "^".concat(src[t.LOOSEPLAIN], "$"));
	  createToken('GTLT', '((?:<|>)?=?)'); // Something like "2.*" or "1.2.x".
	  // Note that "x.x" is a valid xRange identifer, meaning "any version"
	  // Only the first item is strictly required.

	  createToken('XRANGEIDENTIFIERLOOSE', "".concat(src[t.NUMERICIDENTIFIERLOOSE], "|x|X|\\*"));
	  createToken('XRANGEIDENTIFIER', "".concat(src[t.NUMERICIDENTIFIER], "|x|X|\\*"));
	  createToken('XRANGEPLAIN', "[v=\\s]*(".concat(src[t.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(src[t.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(src[t.XRANGEIDENTIFIER], ")") + "(?:".concat(src[t.PRERELEASE], ")?").concat(src[t.BUILD], "?") + ")?)?");
	  createToken('XRANGEPLAINLOOSE', "[v=\\s]*(".concat(src[t.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE], ")") + "(?:".concat(src[t.PRERELEASELOOSE], ")?").concat(src[t.BUILD], "?") + ")?)?");
	  createToken('XRANGE', "^".concat(src[t.GTLT], "\\s*").concat(src[t.XRANGEPLAIN], "$"));
	  createToken('XRANGELOOSE', "^".concat(src[t.GTLT], "\\s*").concat(src[t.XRANGEPLAINLOOSE], "$")); // Coercion.
	  // Extract anything that could conceivably be a part of a valid semver

	  createToken('COERCE', "".concat('(^|[^\\d])' + '(\\d{1,').concat(MAX_SAFE_COMPONENT_LENGTH, "})") + "(?:\\.(\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH, "}))?") + "(?:\\.(\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH, "}))?") + "(?:$|[^\\d])");
	  createToken('COERCERTL', src[t.COERCE], true); // Tilde ranges.
	  // Meaning is "reasonably at or greater than"

	  createToken('LONETILDE', '(?:~>?)');
	  createToken('TILDETRIM', "(\\s*)".concat(src[t.LONETILDE], "\\s+"), true);
	  exports.tildeTrimReplace = '$1~';
	  createToken('TILDE', "^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN], "$"));
	  createToken('TILDELOOSE', "^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE], "$")); // Caret ranges.
	  // Meaning is "at least and backwards compatible with"

	  createToken('LONECARET', '(?:\\^)');
	  createToken('CARETTRIM', "(\\s*)".concat(src[t.LONECARET], "\\s+"), true);
	  exports.caretTrimReplace = '$1^';
	  createToken('CARET', "^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN], "$"));
	  createToken('CARETLOOSE', "^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE], "$")); // A simple gt/lt/eq thing, or just "" to indicate "any version"

	  createToken('COMPARATORLOOSE', "^".concat(src[t.GTLT], "\\s*(").concat(src[t.LOOSEPLAIN], ")$|^$"));
	  createToken('COMPARATOR', "^".concat(src[t.GTLT], "\\s*(").concat(src[t.FULLPLAIN], ")$|^$")); // An expression to strip any whitespace between the gtlt and the thing
	  // it modifies, so that `> 1.2.3` ==> `>1.2.3`

	  createToken('COMPARATORTRIM', "(\\s*)".concat(src[t.GTLT], "\\s*(").concat(src[t.LOOSEPLAIN], "|").concat(src[t.XRANGEPLAIN], ")"), true);
	  exports.comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`
	  // Note that these all use the loose form, because they'll be
	  // checked against either the strict or loose comparator form
	  // later.

	  createToken('HYPHENRANGE', "^\\s*(".concat(src[t.XRANGEPLAIN], ")") + "\\s+-\\s+" + "(".concat(src[t.XRANGEPLAIN], ")") + "\\s*$");
	  createToken('HYPHENRANGELOOSE', "^\\s*(".concat(src[t.XRANGEPLAINLOOSE], ")") + "\\s+-\\s+" + "(".concat(src[t.XRANGEPLAINLOOSE], ")") + "\\s*$"); // Star ranges basically just allow anything at all.

	  createToken('STAR', '(<|>)?=?\\s*\\*'); // >=0.0.0 is like a star

	  createToken('GTE0', '^\\s*>=\\s*0\.0\.0\\s*$');
	  createToken('GTE0PRE', '^\\s*>=\\s*0\.0\.0-0\\s*$');
	})(re$1, re$1.exports);

	// obj with keys in a consistent order.

	const opts = ['includePrerelease', 'loose', 'rtl'];

	const parseOptions$1 = options => !options ? {} : typeof options !== 'object' ? {
	  loose: true
	} : opts.filter(k => options[k]).reduce((options, k) => {
	  options[k] = true;
	  return options;
	}, {});

	var parseOptions_1 = parseOptions$1;

	const numeric = /^[0-9]+$/;

	const compareIdentifiers$1 = (a, b) => {
	  const anum = numeric.test(a);
	  const bnum = numeric.test(b);

	  if (anum && bnum) {
	    a = +a;
	    b = +b;
	  }

	  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
	};

	const rcompareIdentifiers = (a, b) => compareIdentifiers$1(b, a);

	var identifiers = {
	  compareIdentifiers: compareIdentifiers$1,
	  rcompareIdentifiers
	};

	const debug = debug_1;
	const {
	  MAX_LENGTH,
	  MAX_SAFE_INTEGER
	} = constants;
	const {
	  re,
	  t
	} = re$1.exports;
	const parseOptions = parseOptions_1;
	const {
	  compareIdentifiers
	} = identifiers;

	class SemVer$1 {
	  constructor(version, options) {
	    options = parseOptions(options);

	    if (version instanceof SemVer$1) {
	      if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {
	        return version;
	      } else {
	        version = version.version;
	      }
	    } else if (typeof version !== 'string') {
	      throw new TypeError("Invalid Version: ".concat(version));
	    }

	    if (version.length > MAX_LENGTH) {
	      throw new TypeError("version is longer than ".concat(MAX_LENGTH, " characters"));
	    }

	    debug('SemVer', version, options);
	    this.options = options;
	    this.loose = !!options.loose; // this isn't actually relevant for versions, but keep it so that we
	    // don't run into trouble passing this.options around.

	    this.includePrerelease = !!options.includePrerelease;
	    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);

	    if (!m) {
	      throw new TypeError("Invalid Version: ".concat(version));
	    }

	    this.raw = version; // these are actually numbers

	    this.major = +m[1];
	    this.minor = +m[2];
	    this.patch = +m[3];

	    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
	      throw new TypeError('Invalid major version');
	    }

	    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
	      throw new TypeError('Invalid minor version');
	    }

	    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
	      throw new TypeError('Invalid patch version');
	    } // numberify any prerelease numeric ids


	    if (!m[4]) {
	      this.prerelease = [];
	    } else {
	      this.prerelease = m[4].split('.').map(id => {
	        if (/^[0-9]+$/.test(id)) {
	          const num = +id;

	          if (num >= 0 && num < MAX_SAFE_INTEGER) {
	            return num;
	          }
	        }

	        return id;
	      });
	    }

	    this.build = m[5] ? m[5].split('.') : [];
	    this.format();
	  }

	  format() {
	    this.version = "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch);

	    if (this.prerelease.length) {
	      this.version += "-".concat(this.prerelease.join('.'));
	    }

	    return this.version;
	  }

	  toString() {
	    return this.version;
	  }

	  compare(other) {
	    debug('SemVer.compare', this.version, this.options, other);

	    if (!(other instanceof SemVer$1)) {
	      if (typeof other === 'string' && other === this.version) {
	        return 0;
	      }

	      other = new SemVer$1(other, this.options);
	    }

	    if (other.version === this.version) {
	      return 0;
	    }

	    return this.compareMain(other) || this.comparePre(other);
	  }

	  compareMain(other) {
	    if (!(other instanceof SemVer$1)) {
	      other = new SemVer$1(other, this.options);
	    }

	    return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
	  }

	  comparePre(other) {
	    if (!(other instanceof SemVer$1)) {
	      other = new SemVer$1(other, this.options);
	    } // NOT having a prerelease is > having one


	    if (this.prerelease.length && !other.prerelease.length) {
	      return -1;
	    } else if (!this.prerelease.length && other.prerelease.length) {
	      return 1;
	    } else if (!this.prerelease.length && !other.prerelease.length) {
	      return 0;
	    }

	    let i = 0;

	    do {
	      const a = this.prerelease[i];
	      const b = other.prerelease[i];
	      debug('prerelease compare', i, a, b);

	      if (a === undefined && b === undefined) {
	        return 0;
	      } else if (b === undefined) {
	        return 1;
	      } else if (a === undefined) {
	        return -1;
	      } else if (a === b) {
	        continue;
	      } else {
	        return compareIdentifiers(a, b);
	      }
	    } while (++i);
	  }

	  compareBuild(other) {
	    if (!(other instanceof SemVer$1)) {
	      other = new SemVer$1(other, this.options);
	    }

	    let i = 0;

	    do {
	      const a = this.build[i];
	      const b = other.build[i];
	      debug('prerelease compare', i, a, b);

	      if (a === undefined && b === undefined) {
	        return 0;
	      } else if (b === undefined) {
	        return 1;
	      } else if (a === undefined) {
	        return -1;
	      } else if (a === b) {
	        continue;
	      } else {
	        return compareIdentifiers(a, b);
	      }
	    } while (++i);
	  } // preminor will bump the version up to the next minor release, and immediately
	  // down to pre-release. premajor and prepatch work the same way.


	  inc(release, identifier) {
	    switch (release) {
	      case 'premajor':
	        this.prerelease.length = 0;
	        this.patch = 0;
	        this.minor = 0;
	        this.major++;
	        this.inc('pre', identifier);
	        break;

	      case 'preminor':
	        this.prerelease.length = 0;
	        this.patch = 0;
	        this.minor++;
	        this.inc('pre', identifier);
	        break;

	      case 'prepatch':
	        // If this is already a prerelease, it will bump to the next version
	        // drop any prereleases that might already exist, since they are not
	        // relevant at this point.
	        this.prerelease.length = 0;
	        this.inc('patch', identifier);
	        this.inc('pre', identifier);
	        break;
	      // If the input is a non-prerelease version, this acts the same as
	      // prepatch.

	      case 'prerelease':
	        if (this.prerelease.length === 0) {
	          this.inc('patch', identifier);
	        }

	        this.inc('pre', identifier);
	        break;

	      case 'major':
	        // If this is a pre-major version, bump up to the same major version.
	        // Otherwise increment major.
	        // 1.0.0-5 bumps to 1.0.0
	        // 1.1.0 bumps to 2.0.0
	        if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
	          this.major++;
	        }

	        this.minor = 0;
	        this.patch = 0;
	        this.prerelease = [];
	        break;

	      case 'minor':
	        // If this is a pre-minor version, bump up to the same minor version.
	        // Otherwise increment minor.
	        // 1.2.0-5 bumps to 1.2.0
	        // 1.2.1 bumps to 1.3.0
	        if (this.patch !== 0 || this.prerelease.length === 0) {
	          this.minor++;
	        }

	        this.patch = 0;
	        this.prerelease = [];
	        break;

	      case 'patch':
	        // If this is not a pre-release version, it will increment the patch.
	        // If it is a pre-release it will bump up to the same patch version.
	        // 1.2.0-5 patches to 1.2.0
	        // 1.2.0 patches to 1.2.1
	        if (this.prerelease.length === 0) {
	          this.patch++;
	        }

	        this.prerelease = [];
	        break;
	      // This probably shouldn't be used publicly.
	      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.

	      case 'pre':
	        if (this.prerelease.length === 0) {
	          this.prerelease = [0];
	        } else {
	          let i = this.prerelease.length;

	          while (--i >= 0) {
	            if (typeof this.prerelease[i] === 'number') {
	              this.prerelease[i]++;
	              i = -2;
	            }
	          }

	          if (i === -1) {
	            // didn't increment anything
	            this.prerelease.push(0);
	          }
	        }

	        if (identifier) {
	          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
	          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
	          if (this.prerelease[0] === identifier) {
	            if (isNaN(this.prerelease[1])) {
	              this.prerelease = [identifier, 0];
	            }
	          } else {
	            this.prerelease = [identifier, 0];
	          }
	        }

	        break;

	      default:
	        throw new Error("invalid increment argument: ".concat(release));
	    }

	    this.format();
	    this.raw = this.version;
	    return this;
	  }

	}

	var semver$1 = SemVer$1;

	const SemVer = semver$1;

	const compare$2 = (a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose));

	var compare_1 = compare$2;

	const compare$1 = compare_1;

	const lt = (a, b, loose) => compare$1(a, b, loose) < 0;

	var lt_1 = lt;

	const compare = compare_1;

	const gte = (a, b, loose) => compare(a, b, loose) >= 0;

	var gte_1 = gte;

	var arrayify$1 = (object, keyName) => Object.entries(object).map(_ref => {
	  let [key, value] = _ref;
	  return Object.assign({
	    [keyName]: key
	  }, value);
	});

	var require$$4 = {"version":"2.5.1"};

	var lib = {exports: {}};

	(function (module, exports) {

	  Object.defineProperty(exports, "__esModule", {
	    value: true
	  });
	  exports.outdent = void 0; // In the absence of a WeakSet or WeakMap implementation, don't break, but don't cache either.

	  function noop() {
	    var args = [];

	    for (var _i = 0; _i < arguments.length; _i++) {
	      args[_i] = arguments[_i];
	    }
	  }

	  function createWeakMap() {
	    if (typeof WeakMap !== "undefined") {
	      return new WeakMap();
	    } else {
	      return fakeSetOrMap();
	    }
	  }
	  /**
	   * Creates and returns a no-op implementation of a WeakMap / WeakSet that never stores anything.
	   */


	  function fakeSetOrMap() {
	    return {
	      add: noop,
	      delete: noop,
	      get: noop,
	      set: noop,
	      has: function (k) {
	        return false;
	      }
	    };
	  } // Safe hasOwnProperty


	  var hop = Object.prototype.hasOwnProperty;

	  var has = function (obj, prop) {
	    return hop.call(obj, prop);
	  }; // Copy all own enumerable properties from source to target


	  function extend(target, source) {
	    for (var prop in source) {
	      if (has(source, prop)) {
	        target[prop] = source[prop];
	      }
	    }

	    return target;
	  }

	  var reLeadingNewline = /^[ \t]*(?:\r\n|\r|\n)/;
	  var reTrailingNewline = /(?:\r\n|\r|\n)[ \t]*$/;
	  var reStartsWithNewlineOrIsEmpty = /^(?:[\r\n]|$)/;
	  var reDetectIndentation = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/;
	  var reOnlyWhitespaceWithAtLeastOneNewline = /^[ \t]*[\r\n][ \t\r\n]*$/;

	  function _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options) {
	    // If first interpolated value is a reference to outdent,
	    // determine indentation level from the indentation of the interpolated value.
	    var indentationLevel = 0;
	    var match = strings[0].match(reDetectIndentation);

	    if (match) {
	      indentationLevel = match[1].length;
	    }

	    var reSource = "(\\r\\n|\\r|\\n).{0," + indentationLevel + "}";
	    var reMatchIndent = new RegExp(reSource, "g");

	    if (firstInterpolatedValueSetsIndentationLevel) {
	      strings = strings.slice(1);
	    }

	    var newline = options.newline,
	        trimLeadingNewline = options.trimLeadingNewline,
	        trimTrailingNewline = options.trimTrailingNewline;
	    var normalizeNewlines = typeof newline === "string";
	    var l = strings.length;
	    var outdentedStrings = strings.map(function (v, i) {
	      // Remove leading indentation from all lines
	      v = v.replace(reMatchIndent, "$1"); // Trim a leading newline from the first string

	      if (i === 0 && trimLeadingNewline) {
	        v = v.replace(reLeadingNewline, "");
	      } // Trim a trailing newline from the last string


	      if (i === l - 1 && trimTrailingNewline) {
	        v = v.replace(reTrailingNewline, "");
	      } // Normalize newlines


	      if (normalizeNewlines) {
	        v = v.replace(/\r\n|\n|\r/g, function (_) {
	          return newline;
	        });
	      }

	      return v;
	    });
	    return outdentedStrings;
	  }

	  function concatStringsAndValues(strings, values) {
	    var ret = "";

	    for (var i = 0, l = strings.length; i < l; i++) {
	      ret += strings[i];

	      if (i < l - 1) {
	        ret += values[i];
	      }
	    }

	    return ret;
	  }

	  function isTemplateStringsArray(v) {
	    return has(v, "raw") && has(v, "length");
	  }
	  /**
	   * It is assumed that opts will not change.  If this is a problem, clone your options object and pass the clone to
	   * makeInstance
	   * @param options
	   * @return {outdent}
	   */


	  function createInstance(options) {
	    /** Cache of pre-processed template literal arrays */
	    var arrayAutoIndentCache = createWeakMap();
	    /**
	       * Cache of pre-processed template literal arrays, where first interpolated value is a reference to outdent,
	       * before interpolated values are injected.
	       */

	    var arrayFirstInterpSetsIndentCache = createWeakMap();

	    function outdent(stringsOrOptions) {
	      var values = [];

	      for (var _i = 1; _i < arguments.length; _i++) {
	        values[_i - 1] = arguments[_i];
	      }
	      /* tslint:enable:no-shadowed-variable */


	      if (isTemplateStringsArray(stringsOrOptions)) {
	        var strings = stringsOrOptions; // Is first interpolated value a reference to outdent, alone on its own line, without any preceding non-whitespace?

	        var firstInterpolatedValueSetsIndentationLevel = (values[0] === outdent || values[0] === defaultOutdent) && reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) && reStartsWithNewlineOrIsEmpty.test(strings[1]); // Perform outdentation

	        var cache = firstInterpolatedValueSetsIndentationLevel ? arrayFirstInterpSetsIndentCache : arrayAutoIndentCache;
	        var renderedArray = cache.get(strings);

	        if (!renderedArray) {
	          renderedArray = _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options);
	          cache.set(strings, renderedArray);
	        }
	        /** If no interpolated values, skip concatenation step */


	        if (values.length === 0) {
	          return renderedArray[0];
	        }
	        /** Concatenate string literals with interpolated values */


	        var rendered = concatStringsAndValues(renderedArray, firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values);
	        return rendered;
	      } else {
	        // Create and return a new instance of outdent with the given options
	        return createInstance(extend(extend({}, options), stringsOrOptions || {}));
	      }
	    }

	    var fullOutdent = extend(outdent, {
	      string: function (str) {
	        return _outdentArray([str], false, options)[0];
	      }
	    });
	    return fullOutdent;
	  }

	  var defaultOutdent = createInstance({
	    trimLeadingNewline: true,
	    trimTrailingNewline: true
	  });
	  exports.outdent = defaultOutdent; // Named exports.  Simple and preferred.
	  // import outdent from 'outdent';

	  exports.default = defaultOutdent;

	  {
	    // In webpack harmony-modules environments, module.exports is read-only,
	    // so we fail gracefully.
	    try {
	      module.exports = defaultOutdent;
	      Object.defineProperty(defaultOutdent, "__esModule", {
	        value: true
	      });
	      defaultOutdent.default = defaultOutdent;
	      defaultOutdent.outdent = defaultOutdent;
	    } catch (e) {}
	  }
	})(lib, lib.exports);

	var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

	const {
	  outdent
	} = lib.exports;
	const CATEGORY_CONFIG = "Config";
	const CATEGORY_EDITOR = "Editor";
	const CATEGORY_FORMAT = "Format";
	const CATEGORY_OTHER = "Other";
	const CATEGORY_OUTPUT = "Output";
	const CATEGORY_GLOBAL = "Global";
	const CATEGORY_SPECIAL = "Special";
	/**
	 * @typedef {Object} OptionInfo
	 * @property {string} [since] - available since version
	 * @property {string} category
	 * @property {'int' | 'boolean' | 'choice' | 'path'} type
	 * @property {boolean} [array] - indicate it's an array of the specified type
	 * @property {OptionValueInfo} [default]
	 * @property {OptionRangeInfo} [range] - for type int
	 * @property {string} description
	 * @property {string} [deprecated] - deprecated since version
	 * @property {OptionRedirectInfo} [redirect] - redirect deprecated option
	 * @property {(value: any) => boolean} [exception]
	 * @property {OptionChoiceInfo[]} [choices] - for type choice
	 * @property {string} [cliName]
	 * @property {string} [cliCategory]
	 * @property {string} [cliDescription]
	 *
	 * @typedef {number | boolean | string} OptionValue
	 * @typedef {OptionValue | [{ value: OptionValue[] }] | Array<{ since: string, value: OptionValue}>} OptionValueInfo
	 *
	 * @typedef {Object} OptionRedirectInfo
	 * @property {string} option
	 * @property {OptionValue} value
	 *
	 * @typedef {Object} OptionRangeInfo
	 * @property {number} start - recommended range start
	 * @property {number} end - recommended range end
	 * @property {number} step - recommended range step
	 *
	 * @typedef {Object} OptionChoiceInfo
	 * @property {boolean | string} value - boolean for the option that is originally boolean type
	 * @property {string} description
	 * @property {string} [since] - undefined if available since the first version of the option
	 * @property {string} [deprecated] - deprecated since version
	 * @property {OptionValueInfo} [redirect] - redirect deprecated value
	 */

	/** @type {{ [name: string]: OptionInfo }} */

	const options = {
	  cursorOffset: {
	    since: "1.4.0",
	    category: CATEGORY_SPECIAL,
	    type: "int",
	    default: -1,
	    range: {
	      start: -1,
	      end: Number.POSITIVE_INFINITY,
	      step: 1
	    },
	    description: outdent(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]))),
	    cliCategory: CATEGORY_EDITOR
	  },
	  endOfLine: {
	    since: "1.15.0",
	    category: CATEGORY_GLOBAL,
	    type: "choice",
	    default: [{
	      since: "1.15.0",
	      value: "auto"
	    }, {
	      since: "2.0.0",
	      value: "lf"
	    }],
	    description: "Which end of line characters to apply.",
	    choices: [{
	      value: "lf",
	      description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos"
	    }, {
	      value: "crlf",
	      description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows"
	    }, {
	      value: "cr",
	      description: "Carriage Return character only (\\r), used very rarely"
	    }, {
	      value: "auto",
	      description: outdent(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "])))
	    }]
	  },
	  filepath: {
	    since: "1.4.0",
	    category: CATEGORY_SPECIAL,
	    type: "path",
	    description: "Specify the input filepath. This will be used to do parser inference.",
	    cliName: "stdin-filepath",
	    cliCategory: CATEGORY_OTHER,
	    cliDescription: "Path to the file to pretend that stdin comes from."
	  },
	  insertPragma: {
	    since: "1.8.0",
	    category: CATEGORY_SPECIAL,
	    type: "boolean",
	    default: false,
	    description: "Insert @format pragma into file's first docblock comment.",
	    cliCategory: CATEGORY_OTHER
	  },
	  parser: {
	    since: "0.0.10",
	    category: CATEGORY_GLOBAL,
	    type: "choice",
	    default: [{
	      since: "0.0.10",
	      value: "babylon"
	    }, {
	      since: "1.13.0",
	      value: undefined
	    }],
	    description: "Which parser to use.",
	    exception: value => typeof value === "string" || typeof value === "function",
	    choices: [{
	      value: "flow",
	      description: "Flow"
	    }, {
	      value: "babel",
	      since: "1.16.0",
	      description: "JavaScript"
	    }, {
	      value: "babel-flow",
	      since: "1.16.0",
	      description: "Flow"
	    }, {
	      value: "babel-ts",
	      since: "2.0.0",
	      description: "TypeScript"
	    }, {
	      value: "typescript",
	      since: "1.4.0",
	      description: "TypeScript"
	    }, {
	      value: "espree",
	      since: "2.2.0",
	      description: "JavaScript"
	    }, {
	      value: "meriyah",
	      since: "2.2.0",
	      description: "JavaScript"
	    }, {
	      value: "css",
	      since: "1.7.1",
	      description: "CSS"
	    }, {
	      value: "less",
	      since: "1.7.1",
	      description: "Less"
	    }, {
	      value: "scss",
	      since: "1.7.1",
	      description: "SCSS"
	    }, {
	      value: "json",
	      since: "1.5.0",
	      description: "JSON"
	    }, {
	      value: "json5",
	      since: "1.13.0",
	      description: "JSON5"
	    }, {
	      value: "json-stringify",
	      since: "1.13.0",
	      description: "JSON.stringify"
	    }, {
	      value: "graphql",
	      since: "1.5.0",
	      description: "GraphQL"
	    }, {
	      value: "markdown",
	      since: "1.8.0",
	      description: "Markdown"
	    }, {
	      value: "mdx",
	      since: "1.15.0",
	      description: "MDX"
	    }, {
	      value: "vue",
	      since: "1.10.0",
	      description: "Vue"
	    }, {
	      value: "yaml",
	      since: "1.14.0",
	      description: "YAML"
	    }, {
	      value: "glimmer",
	      since: "2.3.0",
	      description: "Ember / Handlebars"
	    }, {
	      value: "html",
	      since: "1.15.0",
	      description: "HTML"
	    }, {
	      value: "angular",
	      since: "1.15.0",
	      description: "Angular"
	    }, {
	      value: "lwc",
	      since: "1.17.0",
	      description: "Lightning Web Components"
	    }]
	  },
	  plugins: {
	    since: "1.10.0",
	    type: "path",
	    array: true,
	    default: [{
	      value: []
	    }],
	    category: CATEGORY_GLOBAL,
	    description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
	    exception: value => typeof value === "string" || typeof value === "object",
	    cliName: "plugin",
	    cliCategory: CATEGORY_CONFIG
	  },
	  pluginSearchDirs: {
	    since: "1.13.0",
	    type: "path",
	    array: true,
	    default: [{
	      value: []
	    }],
	    category: CATEGORY_GLOBAL,
	    description: outdent(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]))),
	    exception: value => typeof value === "string" || typeof value === "object",
	    cliName: "plugin-search-dir",
	    cliCategory: CATEGORY_CONFIG
	  },
	  printWidth: {
	    since: "0.0.0",
	    category: CATEGORY_GLOBAL,
	    type: "int",
	    default: 80,
	    description: "The line length where Prettier will try wrap.",
	    range: {
	      start: 0,
	      end: Number.POSITIVE_INFINITY,
	      step: 1
	    }
	  },
	  rangeEnd: {
	    since: "1.4.0",
	    category: CATEGORY_SPECIAL,
	    type: "int",
	    default: Number.POSITIVE_INFINITY,
	    range: {
	      start: 0,
	      end: Number.POSITIVE_INFINITY,
	      step: 1
	    },
	    description: outdent(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))),
	    cliCategory: CATEGORY_EDITOR
	  },
	  rangeStart: {
	    since: "1.4.0",
	    category: CATEGORY_SPECIAL,
	    type: "int",
	    default: 0,
	    range: {
	      start: 0,
	      end: Number.POSITIVE_INFINITY,
	      step: 1
	    },
	    description: outdent(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))),
	    cliCategory: CATEGORY_EDITOR
	  },
	  requirePragma: {
	    since: "1.7.0",
	    category: CATEGORY_SPECIAL,
	    type: "boolean",
	    default: false,
	    description: outdent(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]))),
	    cliCategory: CATEGORY_OTHER
	  },
	  tabWidth: {
	    type: "int",
	    category: CATEGORY_GLOBAL,
	    default: 2,
	    description: "Number of spaces per indentation level.",
	    range: {
	      start: 0,
	      end: Number.POSITIVE_INFINITY,
	      step: 1
	    }
	  },
	  useTabs: {
	    since: "1.0.0",
	    category: CATEGORY_GLOBAL,
	    type: "boolean",
	    default: false,
	    description: "Indent with tabs instead of spaces."
	  },
	  embeddedLanguageFormatting: {
	    since: "2.1.0",
	    category: CATEGORY_GLOBAL,
	    type: "choice",
	    default: [{
	      since: "2.1.0",
	      value: "auto"
	    }],
	    description: "Control how Prettier formats quoted code embedded in the file.",
	    choices: [{
	      value: "auto",
	      description: "Format embedded code if Prettier can automatically identify it."
	    }, {
	      value: "off",
	      description: "Never automatically format embedded code."
	    }]
	  }
	};
	var coreOptions$1 = {
	  CATEGORY_CONFIG,
	  CATEGORY_EDITOR,
	  CATEGORY_FORMAT,
	  CATEGORY_OTHER,
	  CATEGORY_OUTPUT,
	  CATEGORY_GLOBAL,
	  CATEGORY_SPECIAL,
	  options
	};

	const _excluded = ["cliName", "cliCategory", "cliDescription"];

	const semver = {
	  compare: compare_1,
	  lt: lt_1,
	  gte: gte_1
	};
	const arrayify = arrayify$1;
	const currentVersion = require$$4.version;
	const coreOptions = coreOptions$1.options;
	/**
	 * Strings in `plugins` and `pluginSearchDirs` are handled by a wrapped version
	 * of this function created by `withPlugins`. Don't pass them here directly.
	 * @param {object} param0
	 * @param {(string | object)[]=} param0.plugins Strings are resolved by `withPlugins`.
	 * @param {string[]=} param0.pluginSearchDirs Added by `withPlugins`.
	 * @param {boolean=} param0.showUnreleased
	 * @param {boolean=} param0.showDeprecated
	 * @param {boolean=} param0.showInternal
	 */

	function getSupportInfo$1() {
	  let {
	    plugins = [],
	    showUnreleased = false,
	    showDeprecated = false,
	    showInternal = false
	  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  // pre-release version is smaller than the normal version in semver,
	  // we need to treat it as the normal one so as to test new features.
	  const version = currentVersion.split("-", 1)[0];
	  const languages = plugins.flatMap(plugin => plugin.languages || []).filter(filterSince);
	  const options = arrayify(Object.assign({}, ...plugins.map(_ref => {
	    let {
	      options
	    } = _ref;
	    return options;
	  }), coreOptions), "name").filter(option => filterSince(option) && filterDeprecated(option)).sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1).map(mapInternal).map(option => {
	    option = Object.assign({}, option);

	    if (Array.isArray(option.default)) {
	      option.default = option.default.length === 1 ? option.default[0].value : option.default.filter(filterSince).sort((info1, info2) => semver.compare(info2.since, info1.since))[0].value;
	    }

	    if (Array.isArray(option.choices)) {
	      option.choices = option.choices.filter(option => filterSince(option) && filterDeprecated(option));

	      if (option.name === "parser") {
	        collectParsersFromLanguages(option, languages, plugins);
	      }
	    }

	    const pluginDefaults = Object.fromEntries(plugins.filter(plugin => plugin.defaultOptions && plugin.defaultOptions[option.name] !== undefined).map(plugin => [plugin.name, plugin.defaultOptions[option.name]]));
	    return Object.assign(Object.assign({}, option), {}, {
	      pluginDefaults
	    });
	  });
	  return {
	    languages,
	    options
	  };

	  function filterSince(object) {
	    return showUnreleased || !("since" in object) || object.since && semver.gte(version, object.since);
	  }

	  function filterDeprecated(object) {
	    return showDeprecated || !("deprecated" in object) || object.deprecated && semver.lt(version, object.deprecated);
	  }

	  function mapInternal(object) {
	    if (showInternal) {
	      return object;
	    }

	    const newObject = _objectWithoutProperties(object, _excluded);

	    return newObject;
	  }
	}

	function collectParsersFromLanguages(option, languages, plugins) {
	  const existingValues = new Set(option.choices.map(choice => choice.value));

	  for (const language of languages) {
	    if (language.parsers) {
	      for (const value of language.parsers) {
	        if (!existingValues.has(value)) {
	          existingValues.add(value);
	          const plugin = plugins.find(plugin => plugin.parsers && plugin.parsers[value]);
	          let description = language.name;

	          if (plugin && plugin.name) {
	            description += " (plugin: ".concat(plugin.name, ")");
	          }

	          option.choices.push({
	            value,
	            description
	          });
	        }
	      }
	    }
	  }
	}

	var support = {
	  getSupportInfo: getSupportInfo$1
	};

	const stringWidth = stringWidth$2.exports;
	const escapeStringRegexp = escapeStringRegexp$1;
	const getLast$2 = getLast_1;
	const {
	  getSupportInfo
	} = support;
	const notAsciiRegex = /[^\x20-\x7F]/;

	const getPenultimate = arr => arr[arr.length - 2];
	/**
	 * @typedef {{backwards?: boolean}} SkipOptions
	 */

	/**
	 * @param {string | RegExp} chars
	 * @returns {(text: string, index: number | false, opts?: SkipOptions) => number | false}
	 */


	function skip(chars) {
	  return (text, index, opts) => {
	    const backwards = opts && opts.backwards; // Allow `skip` functions to be threaded together without having
	    // to check for failures (did someone say monads?).

	    /* istanbul ignore next */

	    if (index === false) {
	      return false;
	    }

	    const {
	      length
	    } = text;
	    let cursor = index;

	    while (cursor >= 0 && cursor < length) {
	      const c = text.charAt(cursor);

	      if (chars instanceof RegExp) {
	        if (!chars.test(c)) {
	          return cursor;
	        }
	      } else if (!chars.includes(c)) {
	        return cursor;
	      }

	      backwards ? cursor-- : cursor++;
	    }

	    if (cursor === -1 || cursor === length) {
	      // If we reached the beginning or end of the file, return the
	      // out-of-bounds cursor. It's up to the caller to handle this
	      // correctly. We don't want to indicate `false` though if it
	      // actually skipped valid characters.
	      return cursor;
	    }

	    return false;
	  };
	}
	/**
	 * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}
	 */


	const skipWhitespace = skip(/\s/);
	/**
	 * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}
	 */

	const skipSpaces = skip(" \t");
	/**
	 * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}
	 */

	const skipToLineEnd = skip(",; \t");
	/**
	 * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}
	 */

	const skipEverythingButNewLine = skip(/[^\n\r]/);
	/**
	 * @param {string} text
	 * @param {number | false} index
	 * @returns {number | false}
	 */

	function skipInlineComment(text, index) {
	  /* istanbul ignore next */
	  if (index === false) {
	    return false;
	  }

	  if (text.charAt(index) === "/" && text.charAt(index + 1) === "*") {
	    for (let i = index + 2; i < text.length; ++i) {
	      if (text.charAt(i) === "*" && text.charAt(i + 1) === "/") {
	        return i + 2;
	      }
	    }
	  }

	  return index;
	}
	/**
	 * @param {string} text
	 * @param {number | false} index
	 * @returns {number | false}
	 */


	function skipTrailingComment(text, index) {
	  /* istanbul ignore next */
	  if (index === false) {
	    return false;
	  }

	  if (text.charAt(index) === "/" && text.charAt(index + 1) === "/") {
	    return skipEverythingButNewLine(text, index);
	  }

	  return index;
	} // This one doesn't use the above helper function because it wants to
	// test \r\n in order and `skip` doesn't support ordering and we only
	// want to skip one newline. It's simple to implement.

	/**
	 * @param {string} text
	 * @param {number | false} index
	 * @param {SkipOptions=} opts
	 * @returns {number | false}
	 */


	function skipNewline(text, index, opts) {
	  const backwards = opts && opts.backwards;

	  if (index === false) {
	    return false;
	  }

	  const atIndex = text.charAt(index);

	  if (backwards) {
	    // We already replace `\r\n` with `\n` before parsing

	    /* istanbul ignore next */
	    if (text.charAt(index - 1) === "\r" && atIndex === "\n") {
	      return index - 2;
	    }

	    if (atIndex === "\n" || atIndex === "\r" || atIndex === "\u2028" || atIndex === "\u2029") {
	      return index - 1;
	    }
	  } else {
	    // We already replace `\r\n` with `\n` before parsing

	    /* istanbul ignore next */
	    if (atIndex === "\r" && text.charAt(index + 1) === "\n") {
	      return index + 2;
	    }

	    if (atIndex === "\n" || atIndex === "\r" || atIndex === "\u2028" || atIndex === "\u2029") {
	      return index + 1;
	    }
	  }

	  return index;
	}
	/**
	 * @param {string} text
	 * @param {number} index
	 * @param {SkipOptions=} opts
	 * @returns {boolean}
	 */


	function hasNewline(text, index) {
	  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	  const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);
	  const idx2 = skipNewline(text, idx, opts);
	  return idx !== idx2;
	}
	/**
	 * @param {string} text
	 * @param {number} start
	 * @param {number} end
	 * @returns {boolean}
	 */


	function hasNewlineInRange(text, start, end) {
	  for (let i = start; i < end; ++i) {
	    if (text.charAt(i) === "\n") {
	      return true;
	    }
	  }

	  return false;
	} // Note: this function doesn't ignore leading comments unlike isNextLineEmpty

	/**
	 * @template N
	 * @param {string} text
	 * @param {N} node
	 * @param {(node: N) => number} locStart
	 */


	function isPreviousLineEmpty(text, node, locStart) {
	  /** @type {number | false} */
	  let idx = locStart(node) - 1;
	  idx = skipSpaces(text, idx, {
	    backwards: true
	  });
	  idx = skipNewline(text, idx, {
	    backwards: true
	  });
	  idx = skipSpaces(text, idx, {
	    backwards: true
	  });
	  const idx2 = skipNewline(text, idx, {
	    backwards: true
	  });
	  return idx !== idx2;
	}
	/**
	 * @param {string} text
	 * @param {number} index
	 * @returns {boolean}
	 */


	function isNextLineEmptyAfterIndex(text, index) {
	  /** @type {number | false} */
	  let oldIdx = null;
	  /** @type {number | false} */

	  let idx = index;

	  while (idx !== oldIdx) {
	    // We need to skip all the potential trailing inline comments
	    oldIdx = idx;
	    idx = skipToLineEnd(text, idx);
	    idx = skipInlineComment(text, idx);
	    idx = skipSpaces(text, idx);
	  }

	  idx = skipTrailingComment(text, idx);
	  idx = skipNewline(text, idx);
	  return idx !== false && hasNewline(text, idx);
	}
	/**
	 * @template N
	 * @param {string} text
	 * @param {N} node
	 * @param {(node: N) => number} locEnd
	 * @returns {boolean}
	 */


	function isNextLineEmpty(text, node, locEnd) {
	  return isNextLineEmptyAfterIndex(text, locEnd(node));
	}
	/**
	 * @param {string} text
	 * @param {number} idx
	 * @returns {number | false}
	 */


	function getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, idx) {
	  /** @type {number | false} */
	  let oldIdx = null;
	  /** @type {number | false} */

	  let nextIdx = idx;

	  while (nextIdx !== oldIdx) {
	    oldIdx = nextIdx;
	    nextIdx = skipSpaces(text, nextIdx);
	    nextIdx = skipInlineComment(text, nextIdx);
	    nextIdx = skipTrailingComment(text, nextIdx);
	    nextIdx = skipNewline(text, nextIdx);
	  }

	  return nextIdx;
	}
	/**
	 * @template N
	 * @param {string} text
	 * @param {N} node
	 * @param {(node: N) => number} locEnd
	 * @returns {number | false}
	 */


	function getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd) {
	  return getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, locEnd(node));
	}
	/**
	 * @template N
	 * @param {string} text
	 * @param {N} node
	 * @param {(node: N) => number} locEnd
	 * @returns {string}
	 */


	function getNextNonSpaceNonCommentCharacter(text, node, locEnd) {
	  return text.charAt( // @ts-expect-error => TBD: can return false, should we define a fallback?
	  getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd));
	} // Not using, but it's public utils

	/* istanbul ignore next */

	/**
	 * @param {string} text
	 * @param {number} index
	 * @param {SkipOptions=} opts
	 * @returns {boolean}
	 */


	function hasSpaces(text, index) {
	  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	  const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);
	  return idx !== index;
	}
	/**
	 * @param {string} value
	 * @param {number} tabWidth
	 * @param {number=} startIndex
	 * @returns {number}
	 */


	function getAlignmentSize(value, tabWidth) {
	  let startIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	  let size = 0;

	  for (let i = startIndex; i < value.length; ++i) {
	    if (value[i] === "\t") {
	      // Tabs behave in a way that they are aligned to the nearest
	      // multiple of tabWidth:
	      // 0 -> 4, 1 -> 4, 2 -> 4, 3 -> 4
	      // 4 -> 8, 5 -> 8, 6 -> 8, 7 -> 8 ...
	      size = size + tabWidth - size % tabWidth;
	    } else {
	      size++;
	    }
	  }

	  return size;
	}
	/**
	 * @param {string} value
	 * @param {number} tabWidth
	 * @returns {number}
	 */


	function getIndentSize(value, tabWidth) {
	  const lastNewlineIndex = value.lastIndexOf("\n");

	  if (lastNewlineIndex === -1) {
	    return 0;
	  }

	  return getAlignmentSize( // All the leading whitespaces
	  value.slice(lastNewlineIndex + 1).match(/^[\t ]*/)[0], tabWidth);
	}
	/**
	 * @typedef {'"' | "'"} Quote
	 */

	/**
	 *
	 * @param {string} rawContent
	 * @param {Quote} preferredQuote
	 * @returns {{ quote: Quote, regex: RegExp, escaped: string }}
	 */


	function getPreferredQuote(rawContent, preferredQuote) {
	  /** @type {{ quote: '"', regex: RegExp, escaped: "&quot;" }} */
	  const double = {
	    quote: '"',
	    regex: /"/g,
	    escaped: "&quot;"
	  };
	  /** @type {{ quote: "'", regex: RegExp, escaped: "&apos;" }} */

	  const single = {
	    quote: "'",
	    regex: /'/g,
	    escaped: "&apos;"
	  };
	  const preferred = preferredQuote === "'" ? single : double;
	  const alternate = preferred === single ? double : single;
	  let result = preferred; // If `rawContent` contains at least one of the quote preferred for enclosing
	  // the string, we might want to enclose with the alternate quote instead, to
	  // minimize the number of escaped quotes.

	  if (rawContent.includes(preferred.quote) || rawContent.includes(alternate.quote)) {
	    const numPreferredQuotes = (rawContent.match(preferred.regex) || []).length;
	    const numAlternateQuotes = (rawContent.match(alternate.regex) || []).length;
	    result = numPreferredQuotes > numAlternateQuotes ? alternate : preferred;
	  }

	  return result;
	}

	function printString(raw, options) {
	  // `rawContent` is the string exactly like it appeared in the input source
	  // code, without its enclosing quotes.
	  const rawContent = raw.slice(1, -1);
	  /** @type {Quote} */

	  const enclosingQuote = options.parser === "json" || options.parser === "json5" && options.quoteProps === "preserve" && !options.singleQuote ? '"' : options.__isInHtmlAttribute ? "'" : getPreferredQuote(rawContent, options.singleQuote ? "'" : '"').quote; // It might sound unnecessary to use `makeString` even if the string already
	  // is enclosed with `enclosingQuote`, but it isn't. The string could contain
	  // unnecessary escapes (such as in `"\'"`). Always using `makeString` makes
	  // sure that we consistently output the minimum amount of escaped quotes.

	  return makeString(rawContent, enclosingQuote, !(options.parser === "css" || options.parser === "less" || options.parser === "scss" || options.__embeddedInHtml));
	}
	/**
	 * @param {string} rawContent
	 * @param {Quote} enclosingQuote
	 * @param {boolean=} unescapeUnnecessaryEscapes
	 * @returns {string}
	 */


	function makeString(rawContent, enclosingQuote, unescapeUnnecessaryEscapes) {
	  const otherQuote = enclosingQuote === '"' ? "'" : '"'; // Matches _any_ escape and unescaped quotes (both single and double).

	  const regex = /\\(.)|(["'])/gs; // Escape and unescape single and double quotes as needed to be able to
	  // enclose `rawContent` with `enclosingQuote`.

	  const newContent = rawContent.replace(regex, (match, escaped, quote) => {
	    // If we matched an escape, and the escaped character is a quote of the
	    // other type than we intend to enclose the string with, there's no need for
	    // it to be escaped, so return it _without_ the backslash.
	    if (escaped === otherQuote) {
	      return escaped;
	    } // If we matched an unescaped quote and it is of the _same_ type as we
	    // intend to enclose the string with, it must be escaped, so return it with
	    // a backslash.


	    if (quote === enclosingQuote) {
	      return "\\" + quote;
	    }

	    if (quote) {
	      return quote;
	    } // Unescape any unnecessarily escaped character.
	    // Adapted from https://github.com/eslint/eslint/blob/de0b4ad7bd820ade41b1f606008bea68683dc11a/lib/rules/no-useless-escape.js#L27


	    return unescapeUnnecessaryEscapes && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(escaped) ? escaped : "\\" + escaped;
	  });
	  return enclosingQuote + newContent + enclosingQuote;
	}

	function printNumber(rawNumber) {
	  return rawNumber.toLowerCase() // Remove unnecessary plus and zeroes from scientific notation.
	  .replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, "$1$2$3") // Remove unnecessary scientific notation (1e0).
	  .replace(/^([+-]?[\d.]+)e[+-]?0+$/, "$1") // Make sure numbers always start with a digit.
	  .replace(/^([+-])?\./, "$10.") // Remove extraneous trailing decimal zeroes.
	  .replace(/(\.\d+?)0+(?=e|$)/, "$1") // Remove trailing dot.
	  .replace(/\.(?=e|$)/, "");
	}
	/**
	 * @param {string} str
	 * @param {string} target
	 * @returns {number}
	 */


	function getMaxContinuousCount(str, target) {
	  const results = str.match(new RegExp("(".concat(escapeStringRegexp(target), ")+"), "g"));

	  if (results === null) {
	    return 0;
	  }

	  return results.reduce((maxCount, result) => Math.max(maxCount, result.length / target.length), 0);
	}

	function getMinNotPresentContinuousCount(str, target) {
	  const matches = str.match(new RegExp("(".concat(escapeStringRegexp(target), ")+"), "g"));

	  if (matches === null) {
	    return 0;
	  }

	  const countPresent = new Map();
	  let max = 0;

	  for (const match of matches) {
	    const count = match.length / target.length;
	    countPresent.set(count, true);

	    if (count > max) {
	      max = count;
	    }
	  }

	  for (let i = 1; i < max; i++) {
	    if (!countPresent.get(i)) {
	      return i;
	    }
	  }

	  return max + 1;
	}
	/**
	 * @param {string} text
	 * @returns {number}
	 */


	function getStringWidth$1(text) {
	  if (!text) {
	    return 0;
	  } // shortcut to avoid needless string `RegExp`s, replacements, and allocations within `string-width`


	  if (!notAsciiRegex.test(text)) {
	    return text.length;
	  }

	  return stringWidth(text);
	}

	function addCommentHelper(node, comment) {
	  const comments = node.comments || (node.comments = []);
	  comments.push(comment);
	  comment.printed = false;
	  comment.nodeDescription = describeNodeForDebugging(node);
	}

	function addLeadingComment(node, comment) {
	  comment.leading = true;
	  comment.trailing = false;
	  addCommentHelper(node, comment);
	}

	function addDanglingComment(node, comment, marker) {
	  comment.leading = false;
	  comment.trailing = false;

	  if (marker) {
	    comment.marker = marker;
	  }

	  addCommentHelper(node, comment);
	}

	function addTrailingComment(node, comment) {
	  comment.leading = false;
	  comment.trailing = true;
	  addCommentHelper(node, comment);
	}

	function inferParserByLanguage(language, options) {
	  const {
	    languages
	  } = getSupportInfo({
	    plugins: options.plugins
	  });
	  const matched = languages.find(_ref => {
	    let {
	      name
	    } = _ref;
	    return name.toLowerCase() === language;
	  }) || languages.find(_ref2 => {
	    let {
	      aliases
	    } = _ref2;
	    return Array.isArray(aliases) && aliases.includes(language);
	  }) || languages.find(_ref3 => {
	    let {
	      extensions
	    } = _ref3;
	    return Array.isArray(extensions) && extensions.includes(".".concat(language));
	  });
	  return matched && matched.parsers[0];
	}

	function isFrontMatterNode(node) {
	  return node && node.type === "front-matter";
	}

	function getShebang(text) {
	  if (!text.startsWith("#!")) {
	    return "";
	  }

	  const index = text.indexOf("\n");

	  if (index === -1) {
	    return text;
	  }

	  return text.slice(0, index);
	}
	/**
	 * @param {any} object
	 * @returns {object is Array<any>}
	 */


	function isNonEmptyArray(object) {
	  return Array.isArray(object) && object.length > 0;
	}
	/**
	 * @param {string} description
	 * @returns {(node: any) => symbol}
	 */


	function createGroupIdMapper(description) {
	  const groupIds = new WeakMap();
	  return function (node) {
	    if (!groupIds.has(node)) {
	      groupIds.set(node, Symbol(description));
	    }

	    return groupIds.get(node);
	  };
	}

	function describeNodeForDebugging(node) {
	  const nodeType = node.type || node.kind || "(unknown type)";
	  let nodeName = String(node.name || node.id && (typeof node.id === "object" ? node.id.name : node.id) || node.key && (typeof node.key === "object" ? node.key.name : node.key) || node.value && (typeof node.value === "object" ? "" : String(node.value)) || node.operator || "");

	  if (nodeName.length > 20) {
	    nodeName = nodeName.slice(0, 19) + "…";
	  }

	  return nodeType + (nodeName ? " " + nodeName : "");
	}

	var util = {
	  inferParserByLanguage,
	  getStringWidth: getStringWidth$1,
	  getMaxContinuousCount,
	  getMinNotPresentContinuousCount,
	  getPenultimate,
	  getLast: getLast$2,
	  getNextNonSpaceNonCommentCharacterIndexWithStartIndex,
	  getNextNonSpaceNonCommentCharacterIndex,
	  getNextNonSpaceNonCommentCharacter,
	  skip,
	  skipWhitespace,
	  skipSpaces,
	  skipToLineEnd,
	  skipEverythingButNewLine,
	  skipInlineComment,
	  skipTrailingComment,
	  skipNewline,
	  isNextLineEmptyAfterIndex,
	  isNextLineEmpty,
	  isPreviousLineEmpty,
	  hasNewline,
	  hasNewlineInRange,
	  hasSpaces,
	  getAlignmentSize,
	  getIndentSize,
	  getPreferredQuote,
	  printString,
	  printNumber,
	  makeString,
	  addLeadingComment,
	  addDanglingComment,
	  addTrailingComment,
	  isFrontMatterNode,
	  getShebang,
	  isNonEmptyArray,
	  createGroupIdMapper
	};

	function guessEndOfLine(text) {
	  const index = text.indexOf("\r");

	  if (index >= 0) {
	    return text.charAt(index + 1) === "\n" ? "crlf" : "cr";
	  }

	  return "lf";
	}

	function convertEndOfLineToChars$1(value) {
	  switch (value) {
	    case "cr":
	      return "\r";

	    case "crlf":
	      return "\r\n";

	    default:
	      return "\n";
	  }
	}

	function countEndOfLineChars(text, eol) {
	  let regex;
	  /* istanbul ignore else */

	  if (eol === "\n") {
	    regex = /\n/g;
	  } else if (eol === "\r") {
	    regex = /\r/g;
	  } else if (eol === "\r\n") {
	    regex = /\r\n/g;
	  } else {
	    throw new Error("Unexpected \"eol\" ".concat(JSON.stringify(eol), "."));
	  }

	  const endOfLines = text.match(regex);
	  return endOfLines ? endOfLines.length : 0;
	}

	function normalizeEndOfLine(text) {
	  return text.replace(/\r\n?/g, "\n");
	}

	var endOfLine = {
	  guessEndOfLine,
	  convertEndOfLineToChars: convertEndOfLineToChars$1,
	  countEndOfLineChars,
	  normalizeEndOfLine
	};

	const getLast$1 = getLast_1;
	const {
	  literalline,
	  join
	} = docBuilders;

	const isConcat$2 = doc => Array.isArray(doc) || doc && doc.type === "concat";

	const getDocParts$2 = doc => {
	  if (Array.isArray(doc)) {
	    return doc;
	  }
	  /* istanbul ignore next */


	  if (doc.type !== "concat" && doc.type !== "fill") {
	    throw new Error("Expect doc type to be `concat` or `fill`.");
	  }

	  return doc.parts;
	}; // Using a unique object to compare by reference.


	const traverseDocOnExitStackMarker = {};

	function traverseDoc(doc, onEnter, onExit, shouldTraverseConditionalGroups) {
	  const docsStack = [doc];

	  while (docsStack.length > 0) {
	    const doc = docsStack.pop();

	    if (doc === traverseDocOnExitStackMarker) {
	      onExit(docsStack.pop());
	      continue;
	    }

	    if (onExit) {
	      docsStack.push(doc, traverseDocOnExitStackMarker);
	    }

	    if ( // Should Recurse
	    !onEnter || onEnter(doc) !== false) {
	      // When there are multiple parts to process,
	      // the parts need to be pushed onto the stack in reverse order,
	      // so that they are processed in the original order
	      // when the stack is popped.
	      if (isConcat$2(doc) || doc.type === "fill") {
	        const parts = getDocParts$2(doc);

	        for (let ic = parts.length, i = ic - 1; i >= 0; --i) {
	          docsStack.push(parts[i]);
	        }
	      } else if (doc.type === "if-break") {
	        if (doc.flatContents) {
	          docsStack.push(doc.flatContents);
	        }

	        if (doc.breakContents) {
	          docsStack.push(doc.breakContents);
	        }
	      } else if (doc.type === "group" && doc.expandedStates) {
	        if (shouldTraverseConditionalGroups) {
	          for (let ic = doc.expandedStates.length, i = ic - 1; i >= 0; --i) {
	            docsStack.push(doc.expandedStates[i]);
	          }
	        } else {
	          docsStack.push(doc.contents);
	        }
	      } else if (doc.contents) {
	        docsStack.push(doc.contents);
	      }
	    }
	  }
	}

	function mapDoc(doc, cb) {
	  // Within a doc tree, the same subtrees can be found multiple times.
	  // E.g., often this happens in conditional groups.
	  // As an optimization (those subtrees can be huge) and to maintain the
	  // reference structure of the tree, the mapping results are cached in
	  // a map and reused.
	  const mapped = new Map();
	  return rec(doc);

	  function rec(doc) {
	    if (mapped.has(doc)) {
	      return mapped.get(doc);
	    }

	    const result = process(doc);
	    mapped.set(doc, result);
	    return result;
	  }

	  function process(doc) {
	    if (Array.isArray(doc)) {
	      return cb(doc.map(rec));
	    }

	    if (doc.type === "concat" || doc.type === "fill") {
	      const parts = doc.parts.map(rec);
	      return cb(Object.assign(Object.assign({}, doc), {}, {
	        parts
	      }));
	    }

	    if (doc.type === "if-break") {
	      const breakContents = doc.breakContents && rec(doc.breakContents);
	      const flatContents = doc.flatContents && rec(doc.flatContents);
	      return cb(Object.assign(Object.assign({}, doc), {}, {
	        breakContents,
	        flatContents
	      }));
	    }

	    if (doc.type === "group" && doc.expandedStates) {
	      const expandedStates = doc.expandedStates.map(rec);
	      const contents = expandedStates[0];
	      return cb(Object.assign(Object.assign({}, doc), {}, {
	        contents,
	        expandedStates
	      }));
	    }

	    if (doc.contents) {
	      const contents = rec(doc.contents);
	      return cb(Object.assign(Object.assign({}, doc), {}, {
	        contents
	      }));
	    }

	    return cb(doc);
	  }
	}

	function findInDoc(doc, fn, defaultValue) {
	  let result = defaultValue;
	  let hasStopped = false;

	  function findInDocOnEnterFn(doc) {
	    const maybeResult = fn(doc);

	    if (maybeResult !== undefined) {
	      hasStopped = true;
	      result = maybeResult;
	    }

	    if (hasStopped) {
	      return false;
	    }
	  }

	  traverseDoc(doc, findInDocOnEnterFn);
	  return result;
	}

	function willBreakFn(doc) {
	  if (doc.type === "group" && doc.break) {
	    return true;
	  }

	  if (doc.type === "line" && doc.hard) {
	    return true;
	  }

	  if (doc.type === "break-parent") {
	    return true;
	  }
	}

	function willBreak(doc) {
	  return findInDoc(doc, willBreakFn, false);
	}

	function breakParentGroup(groupStack) {
	  if (groupStack.length > 0) {
	    const parentGroup = getLast$1(groupStack); // Breaks are not propagated through conditional groups because
	    // the user is expected to manually handle what breaks.

	    if (!parentGroup.expandedStates && !parentGroup.break) {
	      // An alternative truthy value allows to distinguish propagated group breaks
	      // and not to print them as `group(..., { break: true })` in `--debug-print-doc`.
	      parentGroup.break = "propagated";
	    }
	  }

	  return null;
	}

	function propagateBreaks(doc) {
	  const alreadyVisitedSet = new Set();
	  const groupStack = [];

	  function propagateBreaksOnEnterFn(doc) {
	    if (doc.type === "break-parent") {
	      breakParentGroup(groupStack);
	    }

	    if (doc.type === "group") {
	      groupStack.push(doc);

	      if (alreadyVisitedSet.has(doc)) {
	        return false;
	      }

	      alreadyVisitedSet.add(doc);
	    }
	  }

	  function propagateBreaksOnExitFn(doc) {
	    if (doc.type === "group") {
	      const group = groupStack.pop();

	      if (group.break) {
	        breakParentGroup(groupStack);
	      }
	    }
	  }

	  traverseDoc(doc, propagateBreaksOnEnterFn, propagateBreaksOnExitFn,
	  /* shouldTraverseConditionalGroups */
	  true);
	}

	function removeLinesFn(doc) {
	  // Force this doc into flat mode by statically converting all
	  // lines into spaces (or soft lines into nothing). Hard lines
	  // should still output because there's too great of a chance
	  // of breaking existing assumptions otherwise.
	  if (doc.type === "line" && !doc.hard) {
	    return doc.soft ? "" : " ";
	  }

	  if (doc.type === "if-break") {
	    return doc.flatContents || "";
	  }

	  return doc;
	}

	function removeLines(doc) {
	  return mapDoc(doc, removeLinesFn);
	}

	const isHardline = (doc, nextDoc) => doc && doc.type === "line" && doc.hard && nextDoc && nextDoc.type === "break-parent";

	function stripDocTrailingHardlineFromDoc(doc) {
	  if (!doc) {
	    return doc;
	  }

	  if (isConcat$2(doc) || doc.type === "fill") {
	    const parts = getDocParts$2(doc);

	    while (parts.length > 1 && isHardline(...parts.slice(-2))) {
	      parts.length -= 2;
	    }

	    if (parts.length > 0) {
	      const lastPart = stripDocTrailingHardlineFromDoc(getLast$1(parts));
	      parts[parts.length - 1] = lastPart;
	    }

	    return Array.isArray(doc) ? parts : Object.assign(Object.assign({}, doc), {}, {
	      parts
	    });
	  }

	  switch (doc.type) {
	    case "align":
	    case "indent":
	    case "indent-if-break":
	    case "group":
	    case "line-suffix":
	    case "label":
	      {
	        const contents = stripDocTrailingHardlineFromDoc(doc.contents);
	        return Object.assign(Object.assign({}, doc), {}, {
	          contents
	        });
	      }

	    case "if-break":
	      {
	        const breakContents = stripDocTrailingHardlineFromDoc(doc.breakContents);
	        const flatContents = stripDocTrailingHardlineFromDoc(doc.flatContents);
	        return Object.assign(Object.assign({}, doc), {}, {
	          breakContents,
	          flatContents
	        });
	      }
	  }

	  return doc;
	}

	function stripTrailingHardline(doc) {
	  // HACK remove ending hardline, original PR: #1984
	  return stripDocTrailingHardlineFromDoc(cleanDoc(doc));
	}

	function cleanDocFn(doc) {
	  switch (doc.type) {
	    case "fill":
	      if (doc.parts.every(part => part === "")) {
	        return "";
	      }

	      break;

	    case "group":
	      if (!doc.contents && !doc.id && !doc.break && !doc.expandedStates) {
	        return "";
	      } // Remove nested only group


	      if (doc.contents.type === "group" && doc.contents.id === doc.id && doc.contents.break === doc.break && doc.contents.expandedStates === doc.expandedStates) {
	        return doc.contents;
	      }

	      break;

	    case "align":
	    case "indent":
	    case "indent-if-break":
	    case "line-suffix":
	      if (!doc.contents) {
	        return "";
	      }

	      break;

	    case "if-break":
	      if (!doc.flatContents && !doc.breakContents) {
	        return "";
	      }

	      break;
	  }

	  if (!isConcat$2(doc)) {
	    return doc;
	  }

	  const parts = [];

	  for (const part of getDocParts$2(doc)) {
	    if (!part) {
	      continue;
	    }

	    const [currentPart, ...restParts] = isConcat$2(part) ? getDocParts$2(part) : [part];

	    if (typeof currentPart === "string" && typeof getLast$1(parts) === "string") {
	      parts[parts.length - 1] += currentPart;
	    } else {
	      parts.push(currentPart);
	    }

	    parts.push(...restParts);
	  }

	  if (parts.length === 0) {
	    return "";
	  }

	  if (parts.length === 1) {
	    return parts[0];
	  }

	  return Array.isArray(doc) ? parts : Object.assign(Object.assign({}, doc), {}, {
	    parts
	  });
	} // A safer version of `normalizeDoc`
	// - `normalizeDoc` concat strings and flat "concat" in `fill`, while `cleanDoc` don't
	// - On `concat` object, `normalizeDoc` always return object with `parts`, `cleanDoc` may return strings
	// - `cleanDoc` also remove nested `group`s and empty `fill`/`align`/`indent`/`line-suffix`/`if-break` if possible


	function cleanDoc(doc) {
	  return mapDoc(doc, currentDoc => cleanDocFn(currentDoc));
	}

	function normalizeParts(parts) {
	  const newParts = [];
	  const restParts = parts.filter(Boolean);

	  while (restParts.length > 0) {
	    const part = restParts.shift();

	    if (!part) {
	      continue;
	    }

	    if (isConcat$2(part)) {
	      restParts.unshift(...getDocParts$2(part));
	      continue;
	    }

	    if (newParts.length > 0 && typeof getLast$1(newParts) === "string" && typeof part === "string") {
	      newParts[newParts.length - 1] += part;
	      continue;
	    }

	    newParts.push(part);
	  }

	  return newParts;
	}

	function normalizeDoc(doc) {
	  return mapDoc(doc, currentDoc => {
	    if (Array.isArray(currentDoc)) {
	      return normalizeParts(currentDoc);
	    }

	    if (!currentDoc.parts) {
	      return currentDoc;
	    }

	    return Object.assign(Object.assign({}, currentDoc), {}, {
	      parts: normalizeParts(currentDoc.parts)
	    });
	  });
	}

	function replaceEndOfLine(doc) {
	  return mapDoc(doc, currentDoc => typeof currentDoc === "string" && currentDoc.includes("\n") ? replaceTextEndOfLine(currentDoc) : currentDoc);
	} // This function need return array
	// TODO: remove `.parts` when we remove `docBuilders.concat()`


	function replaceTextEndOfLine(text) {
	  let replacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : literalline;
	  return join(replacement, text.split("\n")).parts;
	}

	function canBreakFn(doc) {
	  if (doc.type === "line") {
	    return true;
	  }
	}

	function canBreak(doc) {
	  return findInDoc(doc, canBreakFn, false);
	}

	var docUtils = {
	  isConcat: isConcat$2,
	  getDocParts: getDocParts$2,
	  willBreak,
	  traverseDoc,
	  findInDoc,
	  mapDoc,
	  propagateBreaks,
	  removeLines,
	  stripTrailingHardline,
	  normalizeParts,
	  normalizeDoc,
	  cleanDoc,
	  replaceTextEndOfLine,
	  replaceEndOfLine,
	  canBreak
	};

	const {
	  getStringWidth,
	  getLast
	} = util;
	const {
	  convertEndOfLineToChars
	} = endOfLine;
	const {
	  fill,
	  cursor,
	  indent
	} = docBuilders;
	const {
	  isConcat: isConcat$1,
	  getDocParts: getDocParts$1
	} = docUtils;
	/** @type {Record<symbol, typeof MODE_BREAK | typeof MODE_FLAT>} */

	let groupModeMap;
	const MODE_BREAK = 1;
	const MODE_FLAT = 2;

	function rootIndent() {
	  return {
	    value: "",
	    length: 0,
	    queue: []
	  };
	}

	function makeIndent(ind, options) {
	  return generateInd(ind, {
	    type: "indent"
	  }, options);
	}

	function makeAlign(indent, widthOrDoc, options) {
	  if (widthOrDoc === Number.NEGATIVE_INFINITY) {
	    return indent.root || rootIndent();
	  }

	  if (widthOrDoc < 0) {
	    return generateInd(indent, {
	      type: "dedent"
	    }, options);
	  }

	  if (!widthOrDoc) {
	    return indent;
	  }

	  if (widthOrDoc.type === "root") {
	    return Object.assign(Object.assign({}, indent), {}, {
	      root: indent
	    });
	  }

	  const alignType = typeof widthOrDoc === "string" ? "stringAlign" : "numberAlign";
	  return generateInd(indent, {
	    type: alignType,
	    n: widthOrDoc
	  }, options);
	}

	function generateInd(ind, newPart, options) {
	  const queue = newPart.type === "dedent" ? ind.queue.slice(0, -1) : [...ind.queue, newPart];
	  let value = "";
	  let length = 0;
	  let lastTabs = 0;
	  let lastSpaces = 0;

	  for (const part of queue) {
	    switch (part.type) {
	      case "indent":
	        flush();

	        if (options.useTabs) {
	          addTabs(1);
	        } else {
	          addSpaces(options.tabWidth);
	        }

	        break;

	      case "stringAlign":
	        flush();
	        value += part.n;
	        length += part.n.length;
	        break;

	      case "numberAlign":
	        lastTabs += 1;
	        lastSpaces += part.n;
	        break;

	      /* istanbul ignore next */

	      default:
	        throw new Error("Unexpected type '".concat(part.type, "'"));
	    }
	  }

	  flushSpaces();
	  return Object.assign(Object.assign({}, ind), {}, {
	    value,
	    length,
	    queue
	  });

	  function addTabs(count) {
	    value += "\t".repeat(count);
	    length += options.tabWidth * count;
	  }

	  function addSpaces(count) {
	    value += " ".repeat(count);
	    length += count;
	  }

	  function flush() {
	    if (options.useTabs) {
	      flushTabs();
	    } else {
	      flushSpaces();
	    }
	  }

	  function flushTabs() {
	    if (lastTabs > 0) {
	      addTabs(lastTabs);
	    }

	    resetLast();
	  }

	  function flushSpaces() {
	    if (lastSpaces > 0) {
	      addSpaces(lastSpaces);
	    }

	    resetLast();
	  }

	  function resetLast() {
	    lastTabs = 0;
	    lastSpaces = 0;
	  }
	}

	function trim(out) {
	  if (out.length === 0) {
	    return 0;
	  }

	  let trimCount = 0; // Trim whitespace at the end of line

	  while (out.length > 0 && typeof getLast(out) === "string" && /^[\t ]*$/.test(getLast(out))) {
	    trimCount += out.pop().length;
	  }

	  if (out.length > 0 && typeof getLast(out) === "string") {
	    const trimmed = getLast(out).replace(/[\t ]*$/, "");
	    trimCount += getLast(out).length - trimmed.length;
	    out[out.length - 1] = trimmed;
	  }

	  return trimCount;
	}

	function fits(next, restCommands, width, options, hasLineSuffix, mustBeFlat) {
	  let restIdx = restCommands.length;
	  const cmds = [next]; // `out` is only used for width counting because `trim` requires to look
	  // backwards for space characters.

	  const out = [];

	  while (width >= 0) {
	    if (cmds.length === 0) {
	      if (restIdx === 0) {
	        return true;
	      }

	      cmds.push(restCommands[restIdx - 1]);
	      restIdx--;
	      continue;
	    }

	    const [ind, mode, doc] = cmds.pop();

	    if (typeof doc === "string") {
	      out.push(doc);
	      width -= getStringWidth(doc);
	    } else if (isConcat$1(doc)) {
	      const parts = getDocParts$1(doc);

	      for (let i = parts.length - 1; i >= 0; i--) {
	        cmds.push([ind, mode, parts[i]]);
	      }
	    } else {
	      switch (doc.type) {
	        case "indent":
	          cmds.push([makeIndent(ind, options), mode, doc.contents]);
	          break;

	        case "align":
	          cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);
	          break;

	        case "trim":
	          width += trim(out);
	          break;

	        case "group":
	          {
	            if (mustBeFlat && doc.break) {
	              return false;
	            }

	            const groupMode = doc.break ? MODE_BREAK : mode;
	            cmds.push([ind, groupMode, // The most expanded state takes up the least space on the current line.
	            doc.expandedStates && groupMode === MODE_BREAK ? getLast(doc.expandedStates) : doc.contents]);

	            if (doc.id) {
	              groupModeMap[doc.id] = groupMode;
	            }

	            break;
	          }

	        case "fill":
	          for (let i = doc.parts.length - 1; i >= 0; i--) {
	            cmds.push([ind, mode, doc.parts[i]]);
	          }

	          break;

	        case "if-break":
	        case "indent-if-break":
	          {
	            const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;

	            if (groupMode === MODE_BREAK) {
	              const breakContents = doc.type === "if-break" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);

	              if (breakContents) {
	                cmds.push([ind, mode, breakContents]);
	              }
	            }

	            if (groupMode === MODE_FLAT) {
	              const flatContents = doc.type === "if-break" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;

	              if (flatContents) {
	                cmds.push([ind, mode, flatContents]);
	              }
	            }

	            break;
	          }

	        case "line":
	          switch (mode) {
	            // fallthrough
	            case MODE_FLAT:
	              if (!doc.hard) {
	                if (!doc.soft) {
	                  out.push(" ");
	                  width -= 1;
	                }

	                break;
	              }

	              return true;

	            case MODE_BREAK:
	              return true;
	          }

	          break;

	        case "line-suffix":
	          hasLineSuffix = true;
	          break;

	        case "line-suffix-boundary":
	          if (hasLineSuffix) {
	            return false;
	          }

	          break;

	        case "label":
	          cmds.push([ind, mode, doc.contents]);
	          break;
	      }
	    }
	  }

	  return false;
	}

	function printDocToString(doc, options) {
	  groupModeMap = {};
	  const width = options.printWidth;
	  const newLine = convertEndOfLineToChars(options.endOfLine);
	  let pos = 0; // cmds is basically a stack. We've turned a recursive call into a
	  // while loop which is much faster. The while loop below adds new
	  // cmds to the array instead of recursively calling `print`.

	  const cmds = [[rootIndent(), MODE_BREAK, doc]];
	  const out = [];
	  let shouldRemeasure = false;
	  let lineSuffix = [];

	  while (cmds.length > 0) {
	    const [ind, mode, doc] = cmds.pop();

	    if (typeof doc === "string") {
	      const formatted = newLine !== "\n" ? doc.replace(/\n/g, newLine) : doc;
	      out.push(formatted);
	      pos += getStringWidth(formatted);
	    } else if (isConcat$1(doc)) {
	      const parts = getDocParts$1(doc);

	      for (let i = parts.length - 1; i >= 0; i--) {
	        cmds.push([ind, mode, parts[i]]);
	      }
	    } else {
	      switch (doc.type) {
	        case "cursor":
	          out.push(cursor.placeholder);
	          break;

	        case "indent":
	          cmds.push([makeIndent(ind, options), mode, doc.contents]);
	          break;

	        case "align":
	          cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);
	          break;

	        case "trim":
	          pos -= trim(out);
	          break;

	        case "group":
	          switch (mode) {
	            case MODE_FLAT:
	              if (!shouldRemeasure) {
	                cmds.push([ind, doc.break ? MODE_BREAK : MODE_FLAT, doc.contents]);
	                break;
	              }

	            // fallthrough

	            case MODE_BREAK:
	              {
	                shouldRemeasure = false;
	                const next = [ind, MODE_FLAT, doc.contents];
	                const rem = width - pos;
	                const hasLineSuffix = lineSuffix.length > 0;

	                if (!doc.break && fits(next, cmds, rem, options, hasLineSuffix)) {
	                  cmds.push(next);
	                } else {
	                  // Expanded states are a rare case where a document
	                  // can manually provide multiple representations of
	                  // itself. It provides an array of documents
	                  // going from the least expanded (most flattened)
	                  // representation first to the most expanded. If a
	                  // group has these, we need to manually go through
	                  // these states and find the first one that fits.
	                  if (doc.expandedStates) {
	                    const mostExpanded = getLast(doc.expandedStates);

	                    if (doc.break) {
	                      cmds.push([ind, MODE_BREAK, mostExpanded]);
	                      break;
	                    } else {
	                      for (let i = 1; i < doc.expandedStates.length + 1; i++) {
	                        if (i >= doc.expandedStates.length) {
	                          cmds.push([ind, MODE_BREAK, mostExpanded]);
	                          break;
	                        } else {
	                          const state = doc.expandedStates[i];
	                          const cmd = [ind, MODE_FLAT, state];

	                          if (fits(cmd, cmds, rem, options, hasLineSuffix)) {
	                            cmds.push(cmd);
	                            break;
	                          }
	                        }
	                      }
	                    }
	                  } else {
	                    cmds.push([ind, MODE_BREAK, doc.contents]);
	                  }
	                }

	                break;
	              }
	          }

	          if (doc.id) {
	            groupModeMap[doc.id] = getLast(cmds)[1];
	          }

	          break;
	        // Fills each line with as much code as possible before moving to a new
	        // line with the same indentation.
	        //
	        // Expects doc.parts to be an array of alternating content and
	        // whitespace. The whitespace contains the linebreaks.
	        //
	        // For example:
	        //   ["I", line, "love", line, "monkeys"]
	        // or
	        //   [{ type: group, ... }, softline, { type: group, ... }]
	        //
	        // It uses this parts structure to handle three main layout cases:
	        // * The first two content items fit on the same line without
	        //   breaking
	        //   -> output the first content item and the whitespace "flat".
	        // * Only the first content item fits on the line without breaking
	        //   -> output the first content item "flat" and the whitespace with
	        //   "break".
	        // * Neither content item fits on the line without breaking
	        //   -> output the first content item and the whitespace with "break".

	        case "fill":
	          {
	            const rem = width - pos;
	            const {
	              parts
	            } = doc;

	            if (parts.length === 0) {
	              break;
	            }

	            const [content, whitespace] = parts;
	            const contentFlatCmd = [ind, MODE_FLAT, content];
	            const contentBreakCmd = [ind, MODE_BREAK, content];
	            const contentFits = fits(contentFlatCmd, [], rem, options, lineSuffix.length > 0, true);

	            if (parts.length === 1) {
	              if (contentFits) {
	                cmds.push(contentFlatCmd);
	              } else {
	                cmds.push(contentBreakCmd);
	              }

	              break;
	            }

	            const whitespaceFlatCmd = [ind, MODE_FLAT, whitespace];
	            const whitespaceBreakCmd = [ind, MODE_BREAK, whitespace];

	            if (parts.length === 2) {
	              if (contentFits) {
	                cmds.push(whitespaceFlatCmd, contentFlatCmd);
	              } else {
	                cmds.push(whitespaceBreakCmd, contentBreakCmd);
	              }

	              break;
	            } // At this point we've handled the first pair (context, separator)
	            // and will create a new fill doc for the rest of the content.
	            // Ideally we wouldn't mutate the array here but copying all the
	            // elements to a new array would make this algorithm quadratic,
	            // which is unusable for large arrays (e.g. large texts in JSX).


	            parts.splice(0, 2);
	            const remainingCmd = [ind, mode, fill(parts)];
	            const secondContent = parts[0];
	            const firstAndSecondContentFlatCmd = [ind, MODE_FLAT, [content, whitespace, secondContent]];
	            const firstAndSecondContentFits = fits(firstAndSecondContentFlatCmd, [], rem, options, lineSuffix.length > 0, true);

	            if (firstAndSecondContentFits) {
	              cmds.push(remainingCmd, whitespaceFlatCmd, contentFlatCmd);
	            } else if (contentFits) {
	              cmds.push(remainingCmd, whitespaceBreakCmd, contentFlatCmd);
	            } else {
	              cmds.push(remainingCmd, whitespaceBreakCmd, contentBreakCmd);
	            }

	            break;
	          }

	        case "if-break":
	        case "indent-if-break":
	          {
	            const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;

	            if (groupMode === MODE_BREAK) {
	              const breakContents = doc.type === "if-break" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);

	              if (breakContents) {
	                cmds.push([ind, mode, breakContents]);
	              }
	            }

	            if (groupMode === MODE_FLAT) {
	              const flatContents = doc.type === "if-break" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;

	              if (flatContents) {
	                cmds.push([ind, mode, flatContents]);
	              }
	            }

	            break;
	          }

	        case "line-suffix":
	          lineSuffix.push([ind, mode, doc.contents]);
	          break;

	        case "line-suffix-boundary":
	          if (lineSuffix.length > 0) {
	            cmds.push([ind, mode, {
	              type: "line",
	              hard: true
	            }]);
	          }

	          break;

	        case "line":
	          switch (mode) {
	            case MODE_FLAT:
	              if (!doc.hard) {
	                if (!doc.soft) {
	                  out.push(" ");
	                  pos += 1;
	                }

	                break;
	              } else {
	                // This line was forced into the output even if we
	                // were in flattened mode, so we need to tell the next
	                // group that no matter what, it needs to remeasure
	                // because the previous measurement didn't accurately
	                // capture the entire expression (this is necessary
	                // for nested groups)
	                shouldRemeasure = true;
	              }

	            // fallthrough

	            case MODE_BREAK:
	              if (lineSuffix.length > 0) {
	                cmds.push([ind, mode, doc], ...lineSuffix.reverse());
	                lineSuffix = [];
	                break;
	              }

	              if (doc.literal) {
	                if (ind.root) {
	                  out.push(newLine, ind.root.value);
	                  pos = ind.root.length;
	                } else {
	                  out.push(newLine);
	                  pos = 0;
	                }
	              } else {
	                pos -= trim(out);
	                out.push(newLine + ind.value);
	                pos = ind.length;
	              }

	              break;
	          }

	          break;

	        case "label":
	          cmds.push([ind, mode, doc.contents]);
	          break;
	      }
	    } // Flush remaining line-suffix contents at the end of the document, in case
	    // there is no new line after the line-suffix.


	    if (cmds.length === 0 && lineSuffix.length > 0) {
	      cmds.push(...lineSuffix.reverse());
	      lineSuffix = [];
	    }
	  }

	  const cursorPlaceholderIndex = out.indexOf(cursor.placeholder);

	  if (cursorPlaceholderIndex !== -1) {
	    const otherCursorPlaceholderIndex = out.indexOf(cursor.placeholder, cursorPlaceholderIndex + 1);
	    const beforeCursor = out.slice(0, cursorPlaceholderIndex).join("");
	    const aroundCursor = out.slice(cursorPlaceholderIndex + 1, otherCursorPlaceholderIndex).join("");
	    const afterCursor = out.slice(otherCursorPlaceholderIndex + 1).join("");
	    return {
	      formatted: beforeCursor + aroundCursor + afterCursor,
	      cursorNodeStart: beforeCursor.length,
	      cursorNodeText: aroundCursor
	    };
	  }

	  return {
	    formatted: out.join("")
	  };
	}

	var docPrinter = {
	  printDocToString
	};

	const {
	  isConcat,
	  getDocParts
	} = docUtils;

	function flattenDoc(doc) {
	  if (!doc) {
	    return "";
	  }

	  if (isConcat(doc)) {
	    const res = [];

	    for (const part of getDocParts(doc)) {
	      if (isConcat(part)) {
	        res.push(...flattenDoc(part).parts);
	      } else {
	        const flattened = flattenDoc(part);

	        if (flattened !== "") {
	          res.push(flattened);
	        }
	      }
	    }

	    return {
	      type: "concat",
	      parts: res
	    };
	  }

	  if (doc.type === "if-break") {
	    return Object.assign(Object.assign({}, doc), {}, {
	      breakContents: flattenDoc(doc.breakContents),
	      flatContents: flattenDoc(doc.flatContents)
	    });
	  }

	  if (doc.type === "group") {
	    return Object.assign(Object.assign({}, doc), {}, {
	      contents: flattenDoc(doc.contents),
	      expandedStates: doc.expandedStates && doc.expandedStates.map(flattenDoc)
	    });
	  }

	  if (doc.type === "fill") {
	    return {
	      type: "fill",
	      parts: doc.parts.map(flattenDoc)
	    };
	  }

	  if (doc.contents) {
	    return Object.assign(Object.assign({}, doc), {}, {
	      contents: flattenDoc(doc.contents)
	    });
	  }

	  return doc;
	}

	function printDocToDebug(doc) {
	  /** @type Record<symbol, string> */
	  const printedSymbols = Object.create(null);
	  /** @type Set<string> */

	  const usedKeysForSymbols = new Set();
	  return printDoc(flattenDoc(doc));

	  function printDoc(doc, index, parentParts) {
	    if (typeof doc === "string") {
	      return JSON.stringify(doc);
	    }

	    if (isConcat(doc)) {
	      const printed = getDocParts(doc).map(printDoc).filter(Boolean);
	      return printed.length === 1 ? printed[0] : "[".concat(printed.join(", "), "]");
	    }

	    if (doc.type === "line") {
	      const withBreakParent = Array.isArray(parentParts) && parentParts[index + 1] && parentParts[index + 1].type === "break-parent";

	      if (doc.literal) {
	        return withBreakParent ? "literalline" : "literallineWithoutBreakParent";
	      }

	      if (doc.hard) {
	        return withBreakParent ? "hardline" : "hardlineWithoutBreakParent";
	      }

	      if (doc.soft) {
	        return "softline";
	      }

	      return "line";
	    }

	    if (doc.type === "break-parent") {
	      const afterHardline = Array.isArray(parentParts) && parentParts[index - 1] && parentParts[index - 1].type === "line" && parentParts[index - 1].hard;
	      return afterHardline ? undefined : "breakParent";
	    }

	    if (doc.type === "trim") {
	      return "trim";
	    }

	    if (doc.type === "indent") {
	      return "indent(" + printDoc(doc.contents) + ")";
	    }

	    if (doc.type === "align") {
	      return doc.n === Number.NEGATIVE_INFINITY ? "dedentToRoot(" + printDoc(doc.contents) + ")" : doc.n < 0 ? "dedent(" + printDoc(doc.contents) + ")" : doc.n.type === "root" ? "markAsRoot(" + printDoc(doc.contents) + ")" : "align(" + JSON.stringify(doc.n) + ", " + printDoc(doc.contents) + ")";
	    }

	    if (doc.type === "if-break") {
	      return "ifBreak(" + printDoc(doc.breakContents) + (doc.flatContents ? ", " + printDoc(doc.flatContents) : "") + (doc.groupId ? (!doc.flatContents ? ', ""' : "") + ", { groupId: ".concat(printGroupId(doc.groupId), " }") : "") + ")";
	    }

	    if (doc.type === "indent-if-break") {
	      const optionsParts = [];

	      if (doc.negate) {
	        optionsParts.push("negate: true");
	      }

	      if (doc.groupId) {
	        optionsParts.push("groupId: ".concat(printGroupId(doc.groupId)));
	      }

	      const options = optionsParts.length > 0 ? ", { ".concat(optionsParts.join(", "), " }") : "";
	      return "indentIfBreak(".concat(printDoc(doc.contents)).concat(options, ")");
	    }

	    if (doc.type === "group") {
	      const optionsParts = [];

	      if (doc.break && doc.break !== "propagated") {
	        optionsParts.push("shouldBreak: true");
	      }

	      if (doc.id) {
	        optionsParts.push("id: ".concat(printGroupId(doc.id)));
	      }

	      const options = optionsParts.length > 0 ? ", { ".concat(optionsParts.join(", "), " }") : "";

	      if (doc.expandedStates) {
	        return "conditionalGroup([".concat(doc.expandedStates.map(part => printDoc(part)).join(","), "]").concat(options, ")");
	      }

	      return "group(".concat(printDoc(doc.contents)).concat(options, ")");
	    }

	    if (doc.type === "fill") {
	      return "fill([".concat(doc.parts.map(part => printDoc(part)).join(", "), "])");
	    }

	    if (doc.type === "line-suffix") {
	      return "lineSuffix(" + printDoc(doc.contents) + ")";
	    }

	    if (doc.type === "line-suffix-boundary") {
	      return "lineSuffixBoundary";
	    }

	    if (doc.type === "label") {
	      return "label(".concat(JSON.stringify(doc.label), ", ").concat(printDoc(doc.contents), ")");
	    }

	    throw new Error("Unknown doc type " + doc.type);
	  }

	  function printGroupId(id) {
	    if (typeof id !== "symbol") {
	      return JSON.stringify(String(id));
	    }

	    if (id in printedSymbols) {
	      return printedSymbols[id];
	    } // TODO: use Symbol.prototype.description instead of slice once Node 10 is dropped


	    const prefix = String(id).slice(7, -1) || "symbol";

	    for (let counter = 0;; counter++) {
	      const key = prefix + (counter > 0 ? " #".concat(counter) : "");

	      if (!usedKeysForSymbols.has(key)) {
	        usedKeysForSymbols.add(key);
	        return printedSymbols[id] = "Symbol.for(".concat(JSON.stringify(key), ")");
	      }
	    }
	  }
	}

	var docDebug = {
	  printDocToDebug
	};

	/**
	 * @typedef {import("./doc-builders").Doc} Doc
	 */


	var document = {
	  builders: docBuilders,
	  printer: docPrinter,
	  utils: docUtils,
	  debug: docDebug
	};

	return document;

}));
}(doc));

var embed$1 = {};

Object.defineProperty(embed$1, "__esModule", { value: true });
const doc_1$1 = doc.exports;
const { dedentToRoot, group: group$1, hardline: hardline$1, indent: indent$1, join: join$1, line: line$1, literalline: literalline$1, softline: softline$1 } = doc_1$1.builders;
// Replace the string content newlines within a doc tree with literallines so
// that all of the indentation lines up appropriately
function replaceNewlines(doc) {
    return doc_1$1.utils.mapDoc(doc, (currentDoc) => typeof currentDoc === "string" && currentDoc.includes("\n")
        ? currentDoc.split(/(\n)/g).map((v, i) => (i % 2 === 0 ? v : literalline$1))
        : currentDoc);
}
// Get the start and end element tags from the current node on the tree
function getElementTags(path, opts, print) {
    const node = path.getValue();
    const { OPEN, Name, attribute, START_CLOSE, SLASH_OPEN, END_NAME, END } = node.children;
    const parts = [OPEN[0].image, Name[0].image];
    if (attribute) {
        parts.push(indent$1([line$1, join$1(line$1, path.map(print, "children", "attribute"))]));
    }
    if (!opts.bracketSameLine) {
        parts.push(softline$1);
    }
    return {
        openTag: group$1([...parts, START_CLOSE[0].image]),
        closeTag: group$1([SLASH_OPEN[0].image, END_NAME[0].image, END[0].image])
    };
}
// Get the name of the parser that is represented by the given element node,
// return null if a matching parser cannot be found
function getParser(node, opts) {
    const { Name, attribute } = node.children;
    const parser = Name[0].image.toLowerCase();
    // We don't want to deal with some weird recursive parser situation, so we
    // need to explicitly call out the XML parser here and just return null
    if (parser === "xml") {
        return null;
    }
    // If this is a style tag with a text/css type, then we can skip straight to
    // saying that this needs a CSS parser
    if (parser === "style" &&
        attribute &&
        attribute.some((attr) => attr.children.Name[0].image === "type" &&
            attr.children.STRING[0].image === '"text/css"')) {
        return "css";
    }
    // If there is a plugin that has a parser that matches the name of this
    // element, then we're going to assume that's correct for embedding and go
    // ahead and switch to that parser
    if (opts.plugins.some((plugin) => typeof plugin !== "string" &&
        plugin.parsers &&
        Object.prototype.hasOwnProperty.call(plugin.parsers, parser))) {
        return parser;
    }
    return null;
}
// Get the source string that will be passed into the embedded parser from the
// content of the inside of the element node
function getSource(content) {
    return content.chardata
        .map((node) => {
        const { SEA_WS, TEXT } = node.children;
        const [{ image }] = SEA_WS || TEXT;
        return {
            offset: node.location.startOffset,
            printed: image
        };
    })
        .sort(({ offset }) => offset)
        .map(({ printed }) => printed)
        .join("");
}
const embed = (path, print, textToDoc, opts) => {
    const node = path.getValue();
    // If the node isn't an element node, then skip
    if (node.name !== "element") {
        return null;
    }
    // If the name of the node does not correspond to the name of a parser that
    // prettier knows about, then skip
    const parser = getParser(node, opts);
    if (!parser) {
        return null;
    }
    // If the node does not actually contain content, or it contains any content
    // that is not just plain text, then skip
    const content = node.children.content[0].children;
    if (Object.keys(content).length !== 1 || !content.chardata) {
        return null;
    }
    // Get the open and close tags of this element, then return the properly
    // formatted content enclosed within them
    const nodePath = path;
    const { openTag, closeTag } = getElementTags(nodePath, opts, print);
    return group$1([
        openTag,
        literalline$1,
        dedentToRoot(replaceNewlines(doc_1$1.utils.stripTrailingHardline(textToDoc(getSource(content), { ...opts, parser })))),
        hardline$1,
        closeTag
    ]);
};
embed$1.default = embed;

var __importDefault$1 = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(printer$1, "__esModule", { value: true });
const doc_1 = doc.exports;
const embed_1 = __importDefault$1(embed$1);
const { fill, group, hardline, indent, join, line, literalline, softline } = doc_1.builders;
const ignoreStartComment = "<!-- prettier-ignore-start -->";
const ignoreEndComment = "<!-- prettier-ignore-end -->";
function hasIgnoreRanges(comments) {
    if (!comments || comments.length === 0) {
        return false;
    }
    comments.sort((left, right) => left.startOffset - right.startOffset);
    let startFound = false;
    for (let idx = 0; idx < comments.length; idx += 1) {
        if (comments[idx].image === ignoreStartComment) {
            startFound = true;
        }
        else if (startFound && comments[idx].image === ignoreEndComment) {
            return true;
        }
    }
    return false;
}
function isWhitespaceIgnorable(node) {
    const { CData, Comment, reference } = node.children;
    return !CData && !reference && !hasIgnoreRanges(Comment);
}
function printIToken(path) {
    const node = path.getValue();
    return {
        offset: node.startOffset,
        startLine: node.startLine,
        endLine: node.endLine,
        printed: node.image
    };
}
function replaceNewlinesWithLiteralLines(content) {
    return content
        .split(/(\n)/g)
        .map((value, idx) => (idx % 2 === 0 ? value : literalline));
}
const printer = {
    embed: embed_1.default,
    print(path, opts, print) {
        const node = path.getValue();
        switch (node.name) {
            case "attribute": {
                const { Name, EQUALS, STRING } = node.children;
                return [Name[0].image, EQUALS[0].image, STRING[0].image];
            }
            case "chardata": {
                const { SEA_WS, TEXT } = node.children;
                const [{ image }] = SEA_WS || TEXT;
                return image
                    .split(/(\n)/g)
                    .map((value, index) => (index % 2 === 0 ? value : literalline));
            }
            case "content": {
                const nodePath = path;
                let fragments = nodePath.call((childrenPath) => {
                    let response = [];
                    const children = childrenPath.getValue();
                    if (children.CData) {
                        response = response.concat(childrenPath.map(printIToken, "CData"));
                    }
                    if (children.Comment) {
                        response = response.concat(childrenPath.map(printIToken, "Comment"));
                    }
                    if (children.chardata) {
                        response = response.concat(childrenPath.map((charDataPath) => ({
                            offset: charDataPath.getValue().location.startOffset,
                            printed: print(charDataPath)
                        }), "chardata"));
                    }
                    if (children.element) {
                        response = response.concat(childrenPath.map((elementPath) => ({
                            offset: elementPath.getValue().location.startOffset,
                            printed: print(elementPath)
                        }), "element"));
                    }
                    if (children.PROCESSING_INSTRUCTION) {
                        response = response.concat(childrenPath.map(printIToken, "PROCESSING_INSTRUCTION"));
                    }
                    if (children.reference) {
                        response = response.concat(childrenPath.map((referencePath) => {
                            const referenceNode = referencePath.getValue();
                            return {
                                offset: referenceNode.location.startOffset,
                                printed: (referenceNode.children.CharRef ||
                                    referenceNode.children.EntityRef)[0].image
                            };
                        }, "reference"));
                    }
                    return response;
                }, "children");
                const { Comment } = node.children;
                if (hasIgnoreRanges(Comment)) {
                    Comment.sort((left, right) => left.startOffset - right.startOffset);
                    const ignoreRanges = [];
                    let ignoreStart = null;
                    // Build up a list of ignored ranges from the original text based on the
                    // special prettier-ignore-* comments
                    Comment.forEach((comment) => {
                        if (comment.image === ignoreStartComment) {
                            ignoreStart = comment;
                        }
                        else if (ignoreStart && comment.image === ignoreEndComment) {
                            ignoreRanges.push({
                                start: ignoreStart.startOffset,
                                end: comment.endOffset
                            });
                            ignoreStart = null;
                        }
                    });
                    // Filter the printed children to only include the ones that are outside
                    // of each of the ignored ranges
                    fragments = fragments.filter((fragment) => ignoreRanges.every(({ start, end }) => fragment.offset < start || fragment.offset > end));
                    // Push each of the ignored ranges into the child list as its own element
                    // so that the original content is still included
                    ignoreRanges.forEach(({ start, end }) => {
                        const content = opts.originalText.slice(start, end + 1);
                        fragments.push({
                            offset: start,
                            printed: replaceNewlinesWithLiteralLines(content)
                        });
                    });
                }
                fragments.sort((left, right) => left.offset - right.offset);
                return group(fragments.map(({ printed }) => printed));
            }
            case "docTypeDecl": {
                const { DocType, Name, externalID, CLOSE } = node.children;
                const parts = [DocType[0].image, " ", Name[0].image];
                if (externalID) {
                    parts.push(" ", path.call(print, "children", "externalID", 0));
                }
                return group([...parts, CLOSE[0].image]);
            }
            case "document": {
                const { docTypeDecl, element, misc, prolog } = node.children;
                const fragments = [];
                if (docTypeDecl) {
                    fragments.push({
                        offset: docTypeDecl[0].location.startOffset,
                        printed: path.call(print, "children", "docTypeDecl", 0)
                    });
                }
                if (prolog) {
                    fragments.push({
                        offset: prolog[0].location.startOffset,
                        printed: path.call(print, "children", "prolog", 0)
                    });
                }
                if (misc) {
                    misc.forEach((node) => {
                        if (node.children.PROCESSING_INSTRUCTION) {
                            fragments.push({
                                offset: node.location.startOffset,
                                printed: node.children.PROCESSING_INSTRUCTION[0].image
                            });
                        }
                        else if (node.children.Comment) {
                            fragments.push({
                                offset: node.location.startOffset,
                                printed: node.children.Comment[0].image
                            });
                        }
                    });
                }
                if (element) {
                    fragments.push({
                        offset: element[0].location.startOffset,
                        printed: path.call(print, "children", "element", 0)
                    });
                }
                fragments.sort((left, right) => left.offset - right.offset);
                return [
                    join(hardline, fragments.map(({ printed }) => printed)),
                    hardline
                ];
            }
            case "element": {
                const { OPEN, Name, attribute, START_CLOSE, content, SLASH_OPEN, END_NAME, END, SLASH_CLOSE } = node.children;
                const parts = [OPEN[0].image, Name[0].image];
                if (attribute) {
                    parts.push(indent([line, join(line, path.map(print, "children", "attribute"))]));
                }
                // Determine the value that will go between the <, name, and attributes
                // of an element and the /> of an element.
                const space = opts.xmlSelfClosingSpace ? line : softline;
                if (SLASH_CLOSE) {
                    return group([...parts, space, SLASH_CLOSE[0].image]);
                }
                if (Object.keys(content[0].children).length === 0) {
                    return group([...parts, space, "/>"]);
                }
                const openTag = group([
                    ...parts,
                    opts.bracketSameLine ? "" : softline,
                    START_CLOSE[0].image
                ]);
                const closeTag = group([
                    SLASH_OPEN[0].image,
                    END_NAME[0].image,
                    END[0].image
                ]);
                if (opts.xmlWhitespaceSensitivity === "ignore" &&
                    isWhitespaceIgnorable(content[0])) {
                    const nodePath = path;
                    const fragments = nodePath.call((childrenPath) => {
                        const children = childrenPath.getValue();
                        let response = [];
                        if (children.Comment) {
                            response = response.concat(childrenPath.map(printIToken, "Comment"));
                        }
                        if (children.chardata) {
                            childrenPath.each((charDataPath) => {
                                const chardata = charDataPath.getValue();
                                if (!chardata.children.TEXT) {
                                    return;
                                }
                                const content = chardata.children.TEXT[0].image.trim();
                                const printed = group(content.split(/(\n)/g).map((value) => {
                                    if (value === "\n") {
                                        return literalline;
                                    }
                                    return fill(value
                                        .split(/( )/g)
                                        .map((segment, index) => index % 2 === 0 ? segment : line));
                                }));
                                const location = chardata.location;
                                response.push({
                                    offset: location.startOffset,
                                    startLine: location.startLine,
                                    endLine: location.endLine,
                                    printed
                                });
                            }, "chardata");
                        }
                        if (children.element) {
                            response = response.concat(childrenPath.map((elementPath) => {
                                const location = elementPath.getValue().location;
                                return {
                                    offset: location.startOffset,
                                    startLine: location.startLine,
                                    endLine: location.endLine,
                                    printed: print(elementPath)
                                };
                            }, "element"));
                        }
                        if (children.PROCESSING_INSTRUCTION) {
                            response = response.concat(childrenPath.map(printIToken, "PROCESSING_INSTRUCTION"));
                        }
                        return response;
                    }, "children", "content", 0, "children");
                    fragments.sort((left, right) => left.offset - right.offset);
                    // If the only content of this tag is chardata, then use a softline so
                    // that we won't necessarily break (to allow <foo>bar</foo>).
                    if (fragments.length === 1 &&
                        (content[0].children.chardata || []).filter((chardata) => chardata.children.TEXT).length === 1) {
                        return group([
                            openTag,
                            indent([softline, fragments[0].printed]),
                            softline,
                            closeTag
                        ]);
                    }
                    if (fragments.length === 0) {
                        return group([...parts, space, "/>"]);
                    }
                    const docs = [];
                    let lastLine = fragments[0].startLine;
                    fragments.forEach((node) => {
                        if (node.startLine - lastLine >= 2) {
                            docs.push(hardline, hardline);
                        }
                        else {
                            docs.push(hardline);
                        }
                        docs.push(node.printed);
                        lastLine = node.endLine;
                    });
                    return group([openTag, indent(docs), hardline, closeTag]);
                }
                return group([
                    openTag,
                    indent(path.call(print, "children", "content", 0)),
                    closeTag
                ]);
            }
            case "externalID": {
                const { Public, PubIDLiteral, System, SystemLiteral } = node.children;
                if (System) {
                    return group([
                        System[0].image,
                        indent([line, SystemLiteral[0].image])
                    ]);
                }
                return group([
                    group([Public[0].image, indent([line, PubIDLiteral[0].image])]),
                    indent([line, SystemLiteral[0].image])
                ]);
            }
            case "prolog": {
                const { XMLDeclOpen, attribute, SPECIAL_CLOSE } = node.children;
                const parts = [XMLDeclOpen[0].image];
                if (attribute) {
                    parts.push(indent([
                        softline,
                        join(line, path.map(print, "children", "attribute"))
                    ]));
                }
                const space = opts.xmlSelfClosingSpace ? line : softline;
                return group([...parts, space, SPECIAL_CLOSE[0].image]);
            }
        }
    }
};
printer$1.default = printer;

var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const prettier_1 = __importDefault(standalone.exports);
const parser_1 = __importDefault(parser$2);
const printer_1 = __importDefault(printer$1);
// These are the extra options defined by this plugin.
const options = {
    xmlSelfClosingSpace: {
        type: "boolean",
        category: "XML",
        default: true,
        description: "Adds a space before self-closing tags.",
        since: "1.1.0"
    },
    xmlWhitespaceSensitivity: {
        type: "choice",
        category: "XML",
        default: "strict",
        description: "How to handle whitespaces in XML.",
        choices: [
            {
                value: "strict",
                description: "Whitespaces are considered sensitive in all elements."
            },
            {
                value: "ignore",
                description: "Whitespaces are considered insensitive in all elements."
            }
        ],
        since: "0.6.0"
    }
};
// We're going to be using the bracketSameLine option, but since it wasn't
// introduced until prettier 2.4.0, we need to add it to our list of options if
// it's not present so that it gets respected.
if (!prettier_1.default
    .getSupportInfo()
    .options.some((opt) => opt.name === "bracketSameLine")) {
    options.bracketSameLine = {
        type: "boolean",
        category: "Global",
        default: false,
        description: "Put > of opening tags on the last line instead of on a new line.",
        since: "1.0.0"
    };
}
const plugin = {
    languages: [
        {
            name: "XML",
            parsers: ["xml"],
            aliases: ["rss", "xsd", "wsdl"],
            extensions: [
                ".xml",
                ".adml",
                ".admx",
                ".ant",
                ".axml",
                ".builds",
                ".ccproj",
                ".ccxml",
                ".clixml",
                ".cproject",
                ".cscfg",
                ".csdef",
                ".csl",
                ".csproj",
                ".ct",
                ".depproj",
                ".dita",
                ".ditamap",
                ".ditaval",
                ".dll.config",
                ".dotsettings",
                ".filters",
                ".fsproj",
                ".fxml",
                ".glade",
                ".gml",
                ".gmx",
                ".grxml",
                ".iml",
                ".inx",
                ".ivy",
                ".jelly",
                ".jsproj",
                ".kml",
                ".launch",
                ".mdpolicy",
                ".mjml",
                ".mm",
                ".mod",
                ".mxml",
                ".natvis",
                ".ncl",
                ".ndproj",
                ".nproj",
                ".nuspec",
                ".odd",
                ".osm",
                ".pkgproj",
                ".pluginspec",
                ".proj",
                ".props",
                ".ps1xml",
                ".psc1",
                ".pt",
                ".rdf",
                ".resx",
                ".rss",
                ".sch",
                ".scxml",
                ".sfproj",
                ".shproj",
                ".srdf",
                ".storyboard",
                ".sublime-snippet",
                ".targets",
                ".tml",
                ".ts",
                ".tsx",
                ".ui",
                ".urdf",
                ".ux",
                ".vbproj",
                ".vcxproj",
                ".vsixmanifest",
                ".vssettings",
                ".vstemplate",
                ".vxml",
                ".wixproj",
                ".workflow",
                ".wsdl",
                ".wsf",
                ".wxi",
                ".wxl",
                ".wxs",
                ".x3d",
                ".xacro",
                ".xaml",
                ".xib",
                ".xlf",
                ".xliff",
                ".xmi",
                ".xml.dist",
                ".xproj",
                ".xsd",
                ".xsl",
                ".xslt",
                ".xspec",
                ".xul",
                ".zcml"
            ],
            filenames: [
                ".classpath",
                ".cproject",
                ".project",
                "App.config",
                "NuGet.config",
                "Settings.StyleCop",
                "Web.Debug.config",
                "Web.Release.config",
                "Web.config",
                "packages.config"
            ],
            vscodeLanguageIds: ["xml", "forcesourcemanifest"],
            linguistLanguageId: 399
        },
        {
            name: "SVG",
            parsers: ["xml"],
            extensions: [".svg"],
            vscodeLanguageIds: ["svg"],
            linguistLanguageId: 337
        }
    ],
    parsers: {
        xml: parser_1.default
    },
    printers: {
        xml: printer_1.default
    },
    options,
    defaultOptions: {
        printWidth: 80,
        tabWidth: 2
    }
};
var plugin_1 = plugin;

export { plugin_1 as default };
